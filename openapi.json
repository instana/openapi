{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "email": "support@instana.com",
      "name": "Â© Instana",
      "url": "http://instana.com"
    },
    "termsOfService": "https://www.instana.com/terms-of-use/",
    "title": "Instana REST API documentation",
    "version": "1.282.1027",
    "x-logo": {
      "altText": "instana logo",
      "backgroundColor": "#FAFBFC",
      "url": "header-logo.svg"
    },
    "description": "Searching for answers and best pratices? Check our [IBM Instana Community](https://community.ibm.com/community/user/aiops/communities/community-home?CommunityKey=58f324a3-3104-41be-9510-5b7c413cc48f).\n\n## Overview\nThe Instana REST API provides programmatic access to the Instana platform. It can be used to retrieve data available through the Instana UI Dashboard -- metrics, events, traces, etc -- and also to automate configuration tasks such as user management.\n\n### Navigating the API documentation\nThe API endpoints are grouped by product area and functionality. This generally maps to how our UI Dashboard is organized, hopefully making it easier to locate which endpoints you'd use to fetch the data you see visualized in our UI. The [UI sections](https://www.ibm.com/docs/en/instana-observability/current?topic=working-user-interface#navigation-menu) include:\n- Websites & Mobile Apps\n- Applications\n- Infrastructure\n- Synthetic Monitoring\n- Events\n- Automation\n- Service Levels\n- Settings\n- etc\n\n### Rate Limiting\nA rate limit is applied to API usage. Up to 5,000 calls per hour can be made. How many remaining calls can be made and when this call limit resets, can inspected via three headers that are part of the responses of the API server.\n\n- **X-RateLimit-Limit:** Shows the maximum number of calls that may be executed per hour.\n- **X-RateLimit-Remaining:** How many calls may still be executed within the current hour.\n- **X-RateLimit-Reset:** Time when the remaining calls will be reset to the limit. For compatibility reasons with other rate limited APIs, this date is not the date in milliseconds, but instead in seconds since 1970-01-01T00:00:00+00:00.\n\n### Further Reading\nWe provide additional documentation for our REST API in our [product documentation](https://www.ibm.com/docs/en/instana-observability/current?topic=apis-web-rest-api). Here you'll also find some common queries for retrieving data and configuring Instana.\n\n## Getting Started with the REST API\n\n### API base URL\nThe base URL for an specific instance of Instana can be determined using the tenant and unit information.\n- `base`: This is the base URL of a tenant unit, e.g. `https://test-example.instana.io`. This is the same URL that is used to access the Instana user interface.\n- `apiToken`: Requests against the Instana API require valid API tokens. An initial API token can be generated via the Instana user interface. Any additional API tokens can be generated via the API itself.\n\n### Curl Example\nHere is an Example to use the REST API with Curl. First lets get all the available metrics with possible aggregations with a GET call.\n\n```bash\ncurl --request GET \\\n  --url https://test-instana.instana.io/api/application-monitoring/catalog/metrics \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx'\n```\n\nNext we can get every call grouped by the endpoint name that has an error count greater then zero. As a metric we could get the mean error rate for example.\n\n```bash\ncurl --request POST \\\n  --url https://test-instana.instana.io/api/application-monitoring/analyze/call-groups \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"group\":{\n      \"groupbyTag\":\"endpoint.name\"\n  },\n  \"tagFilters\":[\n  \t{\n  \t\t\"name\":\"call.error.count\",\n  \t\t\"value\":\"0\",\n  \t\t\"operator\":\"GREATER_THAN\"\n  \t}\n  ],\n  \"metrics\":[\n  \t{\n  \t\t\"metric\":\"errors\",\n  \t\t\"aggregation\":\"MEAN\"\n  \t}\n  ]\n  }'\n```\n\n### Generating REST API clients\n\nThe API is specified using the [OpenAPI v3](https://github.com/OAI/OpenAPI-Specification) (previously known as Swagger) format.\nYou can download the current specification at our [GitHub API documentation](https://instana.github.io/openapi/openapi.yaml).\n\nOpenAPI tries to solve the issue of ever-evolving APIs and clients lagging behind. Please make sure that you always use the latest version of the generator, as a number of improvements are regularly made.\nTo generate a client library for your language, you can use the [OpenAPI client generators](https://github.com/OpenAPITools/openapi-generator).\n\n#### Go\nFor example, to generate a client library for Go to interact with our backend, you can use the following script; mind replacing the values of the `UNIT_NAME` and `TENANT_NAME` environment variables using those for your tenant unit:\n\n```bash\n#!/bin/bash\n\n### This script assumes you have the `java` and `wget` commands on the path\n\nexport UNIT_NAME='myunit' # for example: prod\nexport TENANT_NAME='mytenant' # for example: awesomecompany\n\n//Download the generator to your current working directory:\nwget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.3.1/openapi-generator-cli-4.3.1.jar -O openapi-generator-cli.jar --server-variables \"tenant=${TENANT_NAME},unit=${UNIT_NAME}\"\n\n//generate a client library that you can vendor into your repository\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g go \\\n    -o pkg/instana/openapi \\\n    --skip-validate-spec\n\n//(optional) format the Go code according to the Go code standard\ngofmt -s -w pkg/instana/openapi\n```\n\nThe generated clients contain comprehensive READMEs, and you can start right away using the client from the example above:\n\n```go\nimport instana \"./pkg/instana/openapi\"\n\n// readTags will read all available application monitoring tags along with their type and category\nfunc readTags() {\n\tconfiguration := instana.NewConfiguration()\n\tconfiguration.Host = \"tenant-unit.instana.io\"\n\tconfiguration.BasePath = \"https://tenant-unit.instana.io\"\n\n\tclient := instana.NewAPIClient(configuration)\n\tauth := context.WithValue(context.Background(), instana.ContextAPIKey, instana.APIKey{\n\t\tKey:    apiKey,\n\t\tPrefix: \"apiToken\",\n\t})\n\n\ttags, _, err := client.ApplicationCatalogApi.GetApplicationTagCatalog(auth)\n\tif err != nil {\n\t\tfmt.Fatalf(\"Error calling the API, aborting.\")\n\t}\n\n\tfor _, tag := range tags {\n\t\tfmt.Printf(\"%s (%s): %s\\n\", tag.Category, tag.Type, tag.Name)\n\t}\n}\n```\n\n#### Java\nFollow the instructions provided in the official documentation from [OpenAPI Tools](https://github.com/OpenAPITools) to download the [openapi-generator-cli.jar](https://github.com/OpenAPITools/openapi-generator?tab=readme-ov-file#13---download-jar).\n\nDepending on your environment, use one of the following java http client implementations which will create a valid client for our OpenAPI specification:\n```\n//Nativ Java HTTP Client\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8 --library native\n\n//Spring WebClient\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8,hideGenerationTimestamp=true --library webclient\n\n//Spring RestTemplate\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8,hideGenerationTimestamp=true --library resttemplate\n\n```\n"
  },
  "servers": [
    {
      "description": "Instana Backend",
      "url": "https://{unit}-{tenant}.instana.io",
      "variables": {
        "tenant": {
          "default": "tenant",
          "description": "Customer tenant unit"
        },
        "unit": {
          "default": "unit",
          "description": "Customer tenant name"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Infrastructure Analyze",
      "description": "This endpoint group exposes the functions that are used by the Instana **Analyze Infrastructure** dashboards.\nTwo of the endpoints provide a [list of entity types](#operation/getAvailablePlugins) and [metrics for an entity type](#operation/getAvailableMetrics).\nIt is also possible to [search and filter entities](#operation/getEntities) and [aggregate metrics on similar entities](#operation/getEntityGroups).\n\n## Important notes\n\n### Prerequisites\n\nFor self-hosted installations, BeeInstana is required for this endpoint group.\nSee this [documentation for enabling BeeInstana](https://www.ibm.com/docs/en/instana-observability/current?topic=premises-installing-instana-backend-docker#beeinstana-metric-pipeline-beta).\n\n### Timeframe\n\n**timeFrame** As in the Instana dashboards, you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with specified granularity, a default granularity will be used for adjustment.\n\n### Metrics\n\n**metric** refers to the metric name. Query the [list of available metrics](#operation/getAvailableMetrics) for existing metrics on an entity type.\nThis is to be used when requesting metrics or when ordering by a metric. For **order.by**, `label` may also be used.\n\n### Filtering\n\nAs in the Instana dashboards, you can **filter by a tag**. Query the [infrastructure tag catalog](#operation/getInfrastructureCatalogMetrics) to retrieve a list of available tags."
    },
    {
      "name": "Infrastructure Metrics",
      "description": "This endpoint retrieves the metrics for infrastructure components.\r\n\r\n### Mandatory Parameters\r\n**plugin:** Plugins are entities' for which we collect metrics, for example : \"Host\", \"Cassandra node\", \"Cassandra Connection\".\r\n\r\nThe available plugins are depending on the system you are monitoring. Therefore you will need to [retrieve plugins](#operation/getInfrastructureCatalogPlugins) where we have data for you.\r\n\r\n**query or snapshotIds:** choose between dynamic focus query or [snapshotId](#operation/getSnapshots) (a unique identifier the metrics are assigned to)\r\n\r\nTo make the it easy to get started this endpoint has two modes that can be used for metrics retrieval:\r\n1. Search metrics with a query\r\n  You are using the [Dynamic Focus](https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus) query to filter the result.\r\n  To get usable search parameters you can either query the search [catalog endpoint](#operation/getInfrastructureCatalogSearchFields) or use the UI\r\n\r\n1. Search for metrics for snapshotIds\r\n  For advanced use cases, pagination for example, its recommended to use fixed snapshotIds.\r\n\r\n**metrics:** Id of the exact metric you want to retrieve, eg. \"cpu.user\", \"clientrequests.read.mean\"\r\n\r\nOnce you have selected the plugin you can define up to five metrics you want to retrieve with the call.\r\nPlease use our [metrics catalog call](#operation/getInfrastructureCatalogMetrics) to get the available metrics for the selected plugin.\r\n\r\n### Optional Parameters\r\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\r\n```\r\n  windowSize           to\r\n     (ms)       (unix-timestamp)\r\n<----------------------|\r\n```\r\n\r\n**rollup:** Depending on the selected timeFrame its possible to selected the rollup.\r\n\r\nThe available rollup is depending on two factors:\r\n1. [Retention times](https://www.ibm.com/docs/en/instana-observability/current?topic=policies#data-retention-policy)\r\n\r\n\tFor example if you select a to timestamp that is 3 Weeks in the past the most accurate rollup you can query for would be 1min\r\n1. Size of the selected windowSize\r\n\r\n\tThe limitation is that we only return 600 Data points per call, thus if you select a windowSize of 1hour the most accurate rollup you can query for would be 5s\r\n\r\nValid rollups are:\r\n\r\n| rollup  | value |\r\n| ------------- | ------------- |\r\n| 1 second  | 1 |\r\n| 5 seconds  | 5  |\r\n| 1 minute  | 60 |\r\n| 5 minutes  | 300  |\r\n| 1 hour  | 3600  |\r\n\r\n\r\n### Defaults\r\n**timeframe:**\r\n```\r\n\"timeFrame\": {\r\n\t\"windowSize\": 60000,\r\n\t\"to\": {current timestamp}\r\n}\r\n```\r\n\r\n**rollup**: 1\r\n\r\n### Limits\r\n1000 Calls per Hour\r\n\r\nTo keep the response size reasonable the limit is set to 30 retrieved items. To implement pagination see [1]\r\n\r\nA maximum of 600 data points are returned per metric.\r\n\r\nYou can only retrieve metrics [above](https://docs.instana.io/core_concepts/dynamic_graph/) the selected Dynamic Focus filter. Work around can be found under [2]\r\n\r\nThe following example will return an empty result, because the selected plugin \"host\" is below the dynamic focus filter \"java\" :\r\n```\r\nquery=entity.selfType:java\r\nplugin=host\r\nmetric=cpu.steal\r\n```\r\n### Tips\r\n[1] **Pagination**\r\nSometimes the query you are interested in returns more than 30 items, you have to use the [find snapshots](#operation/getSnapshots) endpoint to get a full list of Ids for your query and then use the [metrics endpoint](#operation/getInfrastructureMetrics) with the returned snapshotIds\r\n\r\n\r\n[2] **Application filter**\r\nYou can work around the aforementioned limitation by querying one of the crosscutting entities like applications, services and endpoints. For the example above you could create an Application with jvm.version isPresent filter. And search Query then for the created application name\r\n```\r\nquery=entity.application.name:\"Java Applications\"\r\n```\r\n"
    },
    {
      "name": "Infrastructure Resources"
    },
    {
      "name": "Infrastructure Catalog",
      "description": "The endpoints of this group retrieve all available resources to query infrastructure metrics.\n"
    },
    {
      "name": "Infrastructure Topology"
    },
    {
      "name": "Application Metrics",
      "description": "The endpoints of this group retrieve the metrics for defined applications, discovered services and endpoints.\r\n### Mandatory Parameters\r\n\r\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\r\n1. *metric* select a particular metric to get a list of available metrics query the [catalog endpoint](#operation/getApplicationCatalogMetrics)\r\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getApplicationCatalogMetrics) gives you the metrics with the available aggregations.\r\n\r\n### Optional Parameters\r\n\r\n**metrics** Default you will get an aggregated metric with for the selected timeframe \r\n\r\n* *granularity* \r\n   * If it is not set you will get a an aggregated value for the selected timeframe\r\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\r\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\r\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\r\n   \r\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\r\n1. *page* select the page number you want to retrieve\r\n2. *pageSize* set the number of applications you want to return with one query\r\n\r\n**order** You can order the returned items alphanumerical by label, either ascending or descending\r\n1. *by* if the granularity is set to 1 you can use the metric name eg. \"latency.p95\" to order by that value\r\n1. *direction* either ascending or descending\r\n\r\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\r\n```\r\n  windowSize           to\r\n     (ms)       (unix-timestamp)\r\n<----------------------|\r\n```\r\n\r\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\r\n\r\nTo narrow down the result set you have four options to search for an application.\r\n\r\n**nameFilter | applicationId | serviceId | endpointId**\r\n\r\n* *nameFilter:* filter by name with \"contains\" semantic.\r\n\r\n* *applicationId:* search directly for an application by applicationId \r\n\r\n* *serviceId:* search for applications that include a particular service by serviceId\r\n\r\n* *endpointId:* search for applications that include a particular endpoint by endpointId\r\n\r\n### Defaults\r\n\r\n**metrics**\r\n* *granularity:* 1\r\n\r\n**order**\r\n* by application label ascending.\r\n\r\n**timeFrame**\r\n```\r\n\"timeFrame\": {\r\n\t\"windowSize\": 60000,\r\n\t\"to\": {current timestamp}\r\n}\r\n```\r\n**nameFilter | applicationId | serviceId | endpointId**\r\n* no filters are applied in the default call\r\n"
    },
    {
      "name": "Application Catalog",
      "description": "The endpoints of this group retrieve all available resources to query application metrics.\n"
    },
    {
      "name": "Application Resources"
    },
    {
      "name": "Application Analyze",
      "description": "The following four endpoints expose our analyze functionality.\nPart of this are two group endpoints to retrieve metrics for traces and calls rolled up and filtered individually. \nFurthermore you can [search and filter all traces](#operation/getTraces) and retrieve [all details](#operation/getTrace) attached to the trace.\n\n## Parameters\n### Mandatory Parameters (only for group Endpoints):\n**group** It is mandatory to select a tag by which the calls and traces are grouped for the distinct endpoint call\n* *groupByTag* select a tag by which the calls and traces are grouped \n  * a full list of available tags can be retrieved from the [application tag catalog](#operation/getApplicationTagCatalog)\n  * for the trace endpoint only two tags are reasonable and working: `trace.endpoint.name` and `trace.service.name` which indicate the entry endpoint or service for the trace\n* *groupByTagSecondLevelKey* tags of type KEY_VALUE_PAIR need a second parameter e.g for `kubernetes.deployment.label` you would need provide the label you want to groupBy here.\n\n### Optional Parameters\n**pagination**\n* *offset* set the starting point for the data retrieval\n* *retrievalSize* you set the number of returned values\n* *ingestionTime* if you want to paginate through your result set you are interested in having the data for a fixed time point, the results set has a `cursor` class that has a ingestionTime property that indicates what you have to enter here.\n**order**\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\n\n**tagFilters** As in the UI you able to filter your query by a tag. To get a list of all available tags you can query the [application tag catalog](#operation/getApplicationTagCatalog)\n* *name* The name of the tag as returned by the catalog\n* *value* The filter value of the tag, possible types are:\n  * \"STRING\" alphanumerical values, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n  * \"NUMBER\" numerical values, valid operators: \"EQUALS\", \"LESS_THAN\" \"GREATER_THAN\"\n  * \"KEY_VALUE_PAIR\" \n* *operator* one of the valid operators for the type of the selected tag\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric, available metrics in this context are\n   * Latency Mean\n   * Error Rate\n   * Traces Sum\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getApplicationCatalogMetrics) gives you the metrics with the available aggregations.\n3. *granularity* \n   * If it is not set you will get a an aggregated value for the selected timeframe\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n\n### Defaults:\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n"
    },
    {
      "name": "Application Settings"
    },
    {
      "name": "Application Topology"
    },
    {
      "name": "Website Metrics"
    },
    {
      "name": "Website Catalog",
      "description": "The endpoints of this group retrieve all available resources to query website metrics.\n"
    },
    {
      "name": "Website Configuration"
    },
    {
      "name": "Website Analyze",
      "description": "The following four endpoints expose our analyze functionality.\n\n## Mandatory Parameters :\n\n**type** \n\n**group (only for group Endpoints)** It is mandatory to select a tag by which the beacons are grouped for the distinct endpoint call\n* *groupByTag* select a tag by which the beacons are grouped \n  * a full list of available tags can be retrieved from the [website tag catalog](#operation/getWebsiteCatalogTags)\n* *groupByTagSecondLevelKey* tags of type KEY_VALUE_PAIR need a second parameter e.g for `beacon.meta` you would need provide the label you want to groupBy here.\n\n\n## Optional Parameters:\n\n**pagination**\n* *offset* set the starting point for the data retrieval\n* *retrievalSize* you set the number of returned values\n* *ingestionTime* if you want to paginate through your result set you are interested in having the data for a fixed time point, the results set has a `cursor` class that has a ingestionTime property that indicates what you have to enter here.\n\n**order**\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\n\n**tagFilterExpression** As in the UI you are able to filter your query using tags and operators such as `AND` and `OR`. To get a list of all available tags you can query the [tag catalog](#operation/getWebsiteCatalogTags)\n* *name* The name of the tag as returned by the catalog, e.g `beacon.meta`, `beacon.http.path`\n* *value* The filter value of the tag, possible types are:\n  * \"STRING\" alphanumerical values, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n  * \"NUMBER\" numerical values, valid operators: \"EQUALS\", \"LESS_THAN\" \"GREATER_THAN\"\n  * \"KEY_VALUE_PAIR\" of you are using meta tags `beacon.meta` you can filter for those by setting `yourMetaTagName=foo` in the value field, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n* *operator* one of the valid operators for the type of the selected tag\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric, available metrics in this context are\n   * Latency Mean\n   * Error Rate\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getWebsiteCatalogMetrics) gives you the metrics with the available aggregations.\n3. *granularity* \n   * If it is not set you will get a an aggregated value for the selected timeframe\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n \n\n## Defaults:\n\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n"
    },
    {
      "name": "Mobile App Metrics"
    },
    {
      "name": "Mobile App Catalog"
    },
    {
      "name": "Mobile App Configuration"
    },
    {
      "name": "Mobile App Analyze"
    },
    {
      "name": "Events"
    },
    {
      "name": "Event Settings"
    },
    {
      "name": "Application Alert Configuration",
      "description": "The API endpoints of this group can be used to manage Application alert configurations.\n\n## Parameters:\n\n- **id:** ID of the application alert config which needs to be updated.\n\n- **name:** Name for the application alert configuration.\n\n- **description:** Description for the application alert configuration.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **triggering:** Optional flag to indicate whether also an Incident is triggered or not.\n\n- **applications:** Selection of application, services and endpoints in scope.\n\n  The selection defines a tree of included or excluded sub entities. The defined `inclusive` flag defines whether this node and his child nodes are included (`inclusive: true`) or excluded (`inclusive: false`) by default. Empty selections or unnecessary selections are not allowed. \n\n  #### Example 1: Select an entire Application Perspective\n\n  To select the entire application with ID `<appId>` including all its services and endpoints, simply provide the following selection object:\n\n  ```json\n  \"applications\": {\n      \"<appId>\": {\n          \"applicationId\": \"<appId>\"\n      }\n  }\n  ```\n\n  Leaf nodes of the selection tree default to `true` if no `inclusive` value is defined.\n\n  #### Example 2: Specific selection of services and endpoints\n\n  To select not the entire application with ID `<appId>`, but only the entire serivces Service1 with ID `<service1>` and Service2 with ID `<service2>`, with the exception of endpoint `<endpoint2>` of Service2. And in addition, only Endpoint `<endpoint3>` of Service3 with id `<service3>`, then use the following selection:\n\n  ```json\n  \"applications\": {\n      \"<appId>\": {\n          \"applicationId\": \"<appId>\",\n          \"inclusive\": false,\n          \"services\": {\n              \"<service1>\": {\n                  \"serviceId\": \"<service1>\"\n              },\n              \"<service2>\": {\n                  \"serviceId\": \"<service2>\",\n                  \"inclusive\": true,\n                  \"endpoints\": {\n                      \"<endpoint2>\": {\n                          \"endpointId\": \"<endpoint2>\",\n                          \"inclusive\": false\n                      }\n                  }\n              },\n              \"<service3>\": {\n                  \"serviceId\": \"<service3>\",\n                  \"inclusive\": false,\n                  \"endpoints\": {\n                      \"<endpoint3>\": {\n                          \"endpointId\": \"<endpoint3>\",\n                          \"inclusive\": true\n                      }\n                  }\n              }\n          }\n      }\n  }\n  ``` \n\n- **boundaryScope:** Boundary scope of the Application Perspective\n\n- **tagFilterExpression:** Boolean expression of tag filters to define the scope of relevant calls.\n\n- **includeInternal:** Optional flag to indicate whether also internal calls are included in the scope or not. The default is `false`.\n\n- **includeSynthetic:** Optional flag to indicate whether also synthetic calls are included in the scope or not. The default is `false`.\n\n- **evaluationType:** The alert evaluation type of the alert configuration. For example, this allows to configure whether calls of the configured scope is aggregated to a single metric that is then considered for alerting (`\"PER_AP\"`), or whether each service of an Appliction Perspective is is evaluated individually (`\"PER_AP_SERVICE\"`).\n\n- **granularity:** The evaluation granularity used for detection of violations of the defined threshold. In other words, it defines the size of the tumbling window used.\n\n- **rule:** Indicates the type of rule this alert configuration is about.\n\n- **threshold:** Indicates the type of threshold this alert rule is evaluated on .\n\n- **timeThreshold:** Indicates the type of violation of the defined threshold.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n\n## Deprecated Parameters\n\n- **applicationId:** Unique ID of the Application Perspective. It is replaced by **applications**."
    },
    {
      "name": "Global Application Alert Configuration",
      "description": "The API endpoints of this group can be used to manage Global Application alert configurations.\n\n## Parameters:\n\nAll parameters and deprecated parameters are similar to Application Alert Configuration except **applications**\n\n- **applications:** Selection of applications, services and endpoints in scope. It allows more than one application to define a global rule across different Application Perspectives.\n\n  #### Example: Select multiple Application Perspectives\n\n  To select multiple applications with IDs `<appId1>`, `<appId2>` including all its services and endpoints, simply provide the following selection object:\n\n  ```json\n  \"applications\": {\n      \"<appId1>\": {\n          \"applicationId\": \"<appId1>\"\n      },\n      \"<appId2>\": {\n           \"applicationId\": \"<appId2>\"\n      }\n  }\n  ```\n"
    },
    {
      "name": "Infrastructure Alert Configuration"
    },
    {
      "name": "Synthetic Alert Configuration",
      "description": "The API endpoints of this group can be used to manage alert configurations for Synthetic Monitoring.\n\n## Parameters:\n\n- **id:** ID of the alert configuration.\n\n- **name:** Name for the synthetic alert configuration, which is used as the title of the event when triggered.\n\n- **description:** Description for the synthetic alert configuration, which is used as the detials of the triggerd event.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **syntheticTestIds:** List of synthetic test IDs this alert configuration is applied to. Check out APIs in [Synthetic Monitoring](#tag/Synthetic-Settings) to e.g. get a [list of all synthetic tests](#operation/getSyntheticTests) available.\n\n- **rule:** Indicates the type of rule this alert configuration is about. The only `alertType` available so far is `\"failure\"`, where the metric name `\"status\"` is expected. This boolean metric requires no threshold to be specified, because value of `status=0` indicates a test failure.\n\n- **timeThreshold:** Defines the triggering condition in time, such as how many consecutive test failures are required to open an event. Setting a higher value for `violationsCount` helps to reduce the number of alerts.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n\n"
    },
    {
      "name": "Host Agent",
      "description": "Endpoints of this group can be used to list and configure host agents. "
    },
    {
      "name": "User"
    },
    {
      "name": "Groups",
      "description": "Groups are used to permit individual users to perform specific actions and get visibility to an access scope. Each user can be assigned to multiple groups, every one coming with its associated permissions. In addition a group sets the access scope and you can configure the visible areas for the group members.\n\nWhen you are a member of multiple groups, your permissions have an additive effect.\n\nGranting access to certain entities within Instana (e.g. Applications, Kubernetes Clusters etc.) is done through a corresponding entry in the `permissionSet` payload.\n"
    },
    {
      "name": "Audit Log"
    },
    {
      "name": "API Token",
      "description": "API Tokens are unique strings that are used to authenticate and authorize access to the API. These are used to secure API endpoints and ensure that only authorized users can access certain functions. When you raise a request to the API, you must include the API Token in the request header to verify your identity.\n\nInstana API Tokens are specific to Tenant Unit (TU) and cannot be used across TUs. Each token has its associated set of permissions, which are preselected when you create the token."
    },
    {
      "name": "Session Settings"
    },
    {
      "name": "Maintenance Configuration",
      "description": "### Maintenance Windows\nMaintenance windows allow you to mute alerts.\n\n### Types of Maintenance Configurations\n**One-Time**: Executed once at a fixed scheduled time, after which the configuration expires.\n\n**Recurrent**: Executed on a schedule basis (e.g., daily, weekly, monthly, or yearly).\n\n### Pausing or Resuming Maintenance Configurations\nMaintenance windows can be paused or resumed.\n\nIf a maintenance configuration is paused, alerts for the events matching the scope of the configuration will no longer be muted. \n"
    },
    {
      "name": "Synthetic Calls"
    },
    {
      "name": "Releases"
    },
    {
      "name": "SLI Settings",
      "description": "## Deprecated Parameters\n**tagFilters** The list of tag filters. It is replaced by **tagFilterExpression**"
    },
    {
      "name": "SLI Report"
    },
    {
      "name": "Health"
    },
    {
      "name": "Custom Dashboards",
      "description": "You can use these API endpoints to manage custom dashboards. We recommend\nthat you leverage the `Edit as JSON` feature found within our user interface\nto construct the desired request payloads. Specifically to help you build\ncorrect widget configurations and access rules.\n\nTo identify the correct values for the `relatedId` field of the access rules,\nwe recommend using the `/api/custom-dashboard/shareable-users` and\n`/api/custom-dashboard/shareable-api-tokens` endpoints. These endpoints return\nour internal IDs for users and API tokens."
    },
    {
      "name": "Usage"
    },
    {
      "name": "Synthetic Catalog"
    },
    {
      "name": "Synthetic Settings",
      "description": "The API endpoints of this group can be used to manage Synthetic Locations, Synthetic Tests and Synthetic Credentials. \n\n## Synthetic Location Properties:\n- **id** Unique identifier of the location resource.\n- **label** Friendly name of the location.\n- **description** The description of the location.\n- **locationType** Indicates if the location is managed or private.\n- **playbackCapability** The playback capabilities provided by this location resource.\n  The playbackCapability object has the following properties: \n  - **syntheticType** Different types of synthetic tests that can be executed at this location. \n    Possible values are HTTPAction, HTTPScript, BrowserScript, WebpageAction, WebpageScript, and SSLCertificate. \n    The values are corresponding to the syntheticType parameter available in the createSyntheticTest endpoint.\n  - **browserType** Different types of supported Web browsers when creating synthetic tests for BrowserScript, WebpageAction and WebpageScript.\n    Right now, only Chrome and Firefox are supported. \n- **geoPoint** An object includes the longitude, latitude, country name, and city name properties of a location. \n- **popVersion** PoP's version\n- **customProperties** An object with name/value pairs to provide additional information of the Synthetic location.\n- **createdAt** The location created time, following RFC3339 standard.\n- **modifiedAt** The location modified time, following RFC3339 standard.\n- **observedAt** The timestamp when PoP requests a Synthetic test, following RFC3339 standard.\n\n## Synthetic Test Properties:\n- **id** Unique identifier of the Synthetic test resource.\n- **label** Friendly name of the Synthetic test resource.\n- **description** The description of the Synthetic test.\n- **active** Indicates if the Synthetic test is started or not. The default is true.\n- **applicationId** Unique identifier of the Application Perspective.\n- **configuration** An object which has two properties: syntheticType and the corresponding configuration object:\n    - **syntheticType** The type of the Synthetic test. Supported values are HTTPAction, HTTScript, BrowserScript, WebpageAction,\n      WebpageScript, and SSLCertificate. The locations assigned to execute this Synthetic\n      test must support this syntheticType, i.e. the location's playbackCapabilities property.\n    - **markSyntheticCall** Flag used to control if HTTP calls will be marked as synthetic calls/endpoints in Instana backend, so they can be ignored when calculating service and application KPIs, users can also check \"Hide Synthetic Calls\" checkbox to hide/show them in UI.\n    - **retries** An integer type from 0 to 2, 0 by default.\n      It indicates how many attempts (max 2) will be allowed\n      to get a successful connection (not necessarily a successful result).\n      For API Simple, failures like socket hangups, gateway timeouts, and DNS lookup fails cause retires, but 404's 400's, do not.\n      API Script and Browser Script test will retry if script failed for any reason.\n    - **retryInterval** The time interval between retries in seconds. The default is 1s, max is 10s.\n    - **timeout** The timeout to be used by the PoP playback engines running the test. Values are in integers followed by a time unit (ms, s, m). \n      It is the minimum value of test configuration `timeout`, `testFrequency` and `maxTimeout` configured in PoP deployment.\n        - If user defined timeout value exceeds the `maxTimeout` or `testFrequency` in test configuration, the timeout value does not take effect \n          and PoP playback engines use the smaller one of `maxTimeout` and `testFrequency` as the actual timeout value.\n        - If timeout value in test configuration is not provided, the default value is **1m** for HTTPAction and HTTPScript tests. \n          BrowserScript, WebpageAction, and WebpageScript tests use the smaller one of `maxTimeout` and `testFrequency` as the actual timeout value.\n    - **XXXConfiguration** The configuration corresponding to the syntheticType. Configuration types are HTTPActionConfiguration, HTTPScriptConfiguration,\n      BrowserScriptConfiguration, WebpageActionConfiguration, WebpageScriptConfiguration, and SSLCertificateConfiguration. \n        - **HTTPActionConfiguration** has the following properties:\n            - **url** The URL is being tested. It is required.\n            - **syntheticType** Its value is HTTPAction. It is required.\n            - **operation** An operation being used must be one of GET, HEAD, OPTIONS, PATCH, POST, PUT, and DELETE. By default, it is GET.\n            - **headers** An object with header/value pairs\n                - **header** The header to be sent in operation. It should not contain the terminating ':' character.\n                - **value** The value of the header.\n            - **body** The body content to send with the operation.\n            - **validationString** An expression to be evaluated.\n            - **followRedirect** A boolean type, true by default; to allow redirect.\n            - **allowInsecure** A boolean type,  true by default; if set to true then allow insecure certificates\n              (expired, self-signed, etc).\n            - **expectStatus** An integer type, by default, the Synthetic passes for any 2XX status code.\n              This forces just one status code to cause a pass, including what would normally be a fail, for example, a 404.\n            - **expectJson** An optional object to be used to check against the test response object.\n            - **expectMatch** An optional regular expression string to be used to check the test response.\n            - **expectExists** An optional list of property labels used to check if they are present in the test response object.\n            - **expectNotEmpty** An optional list of property labels used to check if they are present in the test response object with a non-empty value.\n        - **HTTPScriptConfiguration** has the following properties:\n          - **script** The Javascript content, it is plain text, not base64 encoded. **script** and **scripts** are mutually exclusive.\n          - **scripts** Multi script package. **script** and **scripts** are mutually exclusive.\n              - **scriptFile** The name of the file to run\n              - **bundle** All required js files bundled up into a single zip file with base64 encoded\n          - **syntheticType** Its value is HTTPScript. It is required.\n          - The API Script Guide, including examples, can be found at: https://www.ibm.com/docs/en/instana-observability/current?topic=monitoring-using-api-scripts\n        - **BrowserScriptConfiguration** has the following properties:\n          - **script** A Node.js based test script, it is plain text, not base64 encoded. **script** and **scripts** are mutually exclusive.\n          - **scripts** Multi script package. **script** and **scripts** are mutually exclusive.\n              - **scriptFile** The name of the file to run\n              - **bundle** All required js files bundled up into a single zip file with base64 encoded\n          - **scriptType** The type of the script, right now, only Basic type is supported. \n          - **browser** The type of the browser: chrome or firefox, chrome by default.\n          - **recordVideo** A boolean type, false by default.\n          - **syntheticType** Its value is BrowserScript. It is required.\n        - **WebpageActionConfiguration** has the following properties:\n          - **url** The URL of the Web page being tested. It is required.\n          - **browser** The type of the browser: chrome or firefox, chrome by default.\n          - **recordVideo** A boolean type, false by default.\n          - **syntheticType** Its value is WebpageAction. It is required.\n        - **WebpageScriptConfiguration** has the following properties:\n          - **script** A Selenium IDE recording script. It is required.\n          - **browser** The type of the browser: chrome or firefox, chrome by default.\n          - **recordVideo** A boolean type, false by default.\n          - **syntheticType** Its value is WebpageScript. It is required.\n      - **SSLCertificateConfiguration** has the following properties:\n          - **hostname** The hostname of the SSL enabled website.\n          - **port** The SSL port, set to 443 by default.\n          - **daysRemainingCheck** The number of days to use on the validation check. The test will fail when the certificate validity has less than this number of days remaining until expiration.\n- **createdAt** The test created time, following RFC3339 standard.\n- **createdBy** The user identifier who created the test resource.\n- **customProperties** An object with name/value pairs to provide additional information of the Synthetic test.\n- **locations** It is an array of the PoP location IDs where the Synthetic tests are located.\n- **applications** (Private Preview) It is an array of the unique identifiers of the Application Perspectives associated to this test.\n- **modifiedAt** The test last updated time, following RFC3339 standard.\n- **modifiedBy** The user identifier who updated the test resource.\n- **playbackMode** Defines how the Synthetic test should be executed across multiple\n  PoPs. This property is optional, and its default value is Simultaneous, and only Simultaneous is supported, i.e.,\n  Synthetic tests run at all locations simultaneously. \n- **testFrequency** How often the playback for a Synthetic test is scheduled. The unit of the testFrequency parameter is minute.\n  The default is every 15 minutes. The range is from 1 minute to 120 minutes. \n  For SSLCertificate tests, the default is every 24 hours and the range is from 60 minute to 1440 minutes.\n\n## Synthetic Credentials:\n\nSynthetic credentials can be used to store passwords and/or secrets used by the Synthetic Tests.\n\nAll Script Tests can use credentials in their body and API Simple Tests can use them on header parameters.\n\nIt is required that the credentials used in the test be created before the test is created or modified.\n\n(Private Preview) Credentials can be associated to multiple Application Perspectives, Websites, and Mobile Apps.\n\nTests using credentials are validated during test creation and update whether you use the API or UI, as follows:\n\n1. The user Id of the logged in user or API Token being used to create or modify the test must have permission to use credentials.  \n  Requests to create or update a test referencing credentials without the correct permission will fail with return code `Forbidden`.\n\n2. The credentials or secrets used in the test must exist.  \n  Requests to create or update a test referencing credentials that do not exist will fail with return code `Bad Request`.\n\n3. (Private Preview) Credentials associated to Application Perspectives, Websites, and Mobile Apps can only be used by tests that are associated to at least one common Application Perspective, Websites, and MobileApps.\n   Requests to create or update a test referencing credentials without matching Application Perspectives, Websites, or Mobile Apps will fail with return code `Bad Request`."
    },
    {
      "name": "Synthetic Test Playback Results",
      "description": "The endpoints of this group retrieve the results for defined Synthetic tests.\n\n**Note on names in TagFilter/TagFilterExpression**: From R243, the name used in a TagFilter or a TagFilterExpression has the format: synthetic.\\<name\\>.\nIt can be one of the following: synthetic.id (id is the test result id), synthetic.testId,\nsynthetic.testName, synthetic.locationId, synthetic.applicationId, synthetic.serviceId, synthetic.syntheticType,\nsynthetic.locationName, and synthetic.locationLabel. If it is a metric name, then the format is: synthetic.metrics\\<MetricName\\>.\nFor example, synthetic.metricsResponseTime, synthetic.metricsStatus.\n\nThe names used prior to R243 should be considered as deprecated. They will be accepted temporarily and will be removed in an upcoming release.\n\n## Get Synthetic test playback results \nThe endpoint returns the aggregated Synthetic test result data\n\n### Mandatory Parameters  \n\n**testId** An array of the unique identifiers of Synthetic tests\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric. This is the list of available metrics for all types of Synthetic Tests: \n   synthetic.metricsResponseTime (ms), synthetic.metricsResponseSize (bytes), synthetic.metricsStatusCode (an integer represents an HTTP response code, e.g., 200, 401, 500), synthetic.metricsRequestSize (bytes), \n   synthetic.metricsUploadSpeed (bytes per second), synthetic.metricsDownloadSpeed (bytes per second), \n   synthetic.metricsRedirectTime (ms), synthetic.metricsRedirectCount, synthetic.metricsConnectCount, synthetic.metricsStatus (an integer, 1-success or 0-failure), and synthetic.tags (list of custom properties and values). \n   \n   The following metrics are only available for the HTTPAction type Synthetic Tests: synthetic.metricsBlocking (bytes), synthetic.metricsDns (bytes), synthetic.metricsConnect (bytes), synthetic.metricsSsl (bytes), \n   synthetic.metricsSending (bytes), synthetic.metricsWaiting (bytes), and synthetic.metricsReceiving (bytes).\n\n   The metric synthetic.customMetrics (list of custom metrics and values) is only available for SSLCertificate tests.\n\n   The metric synthetic.tags adds the latest list of custom properties to the response.\n\n2. *aggregation* Depending on the selected metric, different aggregations are available e.g., SUM, MEAN, P90 (90th percentile), DISTINCT_COUNT, and MAX.  MAX is only allowed for synthetic.tags.\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\n\n### Optional Parameters\n\n**metrics** By default you will get an aggregated metric for the selected timeframe\n\n* *granularity*\n    * If it is not set you will get an aggregated value for the selected timeframe\n    * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n    * The granularity values are the same for all metrics\n\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, e.g. \"synthetic.metricsResponseTime\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results.\nIt will be replaced by **tagFilterExpression**.\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\nTo narrow down the result set you have two options to search for a test.\n\n**locationId | applicationId**\n\n* *synthetic.locationId:* filter by locationId\n\n* *synthetic.applicationId:* filter by applicationId\n\n### Defaults\n\n**metrics**\n* *granularity:* 0\n\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n**locationId | applicationId**\n* no filters are applied in the default call\n\n### Sample payload to get a Synthetic test result\n```\n{\n    \"testId\": [\"tUmWgvzdo1Q1vpVRpzR5\", \"Pg0Q1UqHRd7OMysohVLd\"],\n    \"//comment1\": \"Get test results from last 30 minutes (windowSize), data are aggregated every 10 minutes (granularity)\",\n    \"//comment2\": \"The granularity values for responseTime and responseSize must be the same\"\n    \"metrics\": [\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 600,    \n        \"metric\": \"synthetic.metricsResponseTime\"\n     },\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 600,    \n        \"metric\": \"synthetic.metricsResponseSize\"\n     }],\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 1800000  \n     }\n}\n```\n\n## Get a list of Synthetic test playback results (no aggregation)\n### Mandatory Parameters\n**syntheticMetrics** It is an array of metrics. The available metrics for all types of Synthetic Tests: synthetic.id (a string representing the test result ID), \nsynthetic.metricsResponseTime (ms), synthetic.metricsResponseSize (bytes), synthetic.metricsStatusCode (an integer represents an HTTP response code, e.g., 200, 401, 500), synthetic.metricsRequestSize (bytes),\nsynthetic.metricsUploadSpeed (bytes per second), synthetic.metricsDownloadSpeed (bytes per second),\nsynthetic.metricsRedirectTime (ms), synthetic.metricsRedirectCount, synthetic.metricsConnectCount, synthetic.metricsStatus (an integer, 1-success or 0-failure), and synthetic.tags (list of custom properties and values).\n\nThe following metrics are only available for the HTTPAction type Synthetic Tests: synthetic.metricsBlocking (bytes), synthetic.metricsDns (bytes), synthetic.metricsConnect (bytes), synthetic.metricsSsl (bytes),\nsynthetic.metricsSending (bytes), synthetic.metricsWaiting (bytes), and synthetic.metricsReceiving (bytes).\n\nThe metric synthetic.customMetrics (list of custom metrics and values) is only available for SSLCertificate tests.\n\nThe metric synthetic.tags adds the latest list of custom properties to the response.\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\n\n### Optional Parameters\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, e.g. \"synthetic.metricsResponseTime\" to order by that value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results. \nIt will be replaced by **tagFilterExpression**.\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with \nlogical operators AND or OR.\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n### Sample payload to get a list of Synthetic test results with tagFilters\n```json\n{\n  \"syntheticMetrics\":[\"synthetic.metricsResponseTime\",\"synthetic.metricsResponseSize\"],\n  \"order\":{\n    \"by\":\"synthetic.metricsResponseTime\",\n    \"direction\":\"DESC\"\n  },\n  \"tagFilters\":[{\n    \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n    \"name\":\"synthetic.testId\",\n    \"operator\":\"EQUALS\"\n  }],\n  \"timeFrame\": {\n    \"to\": 0,\n    \"windowSize\": 1800000\n  }\n}\n```\n\n### Sample payload to get a list of Synthetic test results with tagFilterExpression\n```json\n{\n  \"syntheticMetrics\":[\"synthetic.metricsResponseTime\",\"synthetic.metricsResponseSize\"],\n  \"order\":{\n    \"by\":\"synthetic.metricsResponseTime\",\n    \"direction\":\"DESC\"\n  },\n  \"tagFilterExpression\": { \n    \"type\":\"EXPRESSION\",\n    \"logicalOperator\":\"AND\",\n    \"elements\":[{\n      \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n      \"name\":\"synthetic.testId\",\n      \"operator\":\"EQUALS\"\n    }, {\n      \"name\": \"synthetic.locationId\", \n      \"operator\": \"EQUALS\", \n      \"stringValue\": \"abcdefgXSJmQsehOWg1S\"\n    }]\n  },\n  \"timeFrame\": {\n    \"to\": 0,\n    \"windowSize\": 1800000\n  }\n}\n```\n\n### Sample payload to get the custom metrics of a Synthetic SSLCertificate test\n```json\n{\n  \"syntheticMetrics\":[\"synthetic.customMetrics\"],\n  \"tagFilters\":[{\n    \"stringValue\":\"dk6yzb9fxCDlB6axIhUu\",\n    \"name\":\"synthetic.testId\",\n    \"operator\":\"EQUALS\"\n  }],\n  \"timeFrame\": {\n    \"to\": 0,\n    \"windowSize\": 172800000\n  }\n}\n```\n\n## Get a list of Synthetic tests with Success Rate and Average Response Time data\nThe endpoint returns a list of Synthetic tests with Success Rate and Average Response Time result data\n\n### Mandatory Parameters\n\n**metrics**\n1. *metric* select a particular metric. Right now, only synthetic.metricsResponseTime (ms) is supported.\n2. *aggregation* MEAN\n3. *granularity* 60\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n\n### Optional Parameters\n\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, \"synthetic.metricsResponseTime\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results. The name of a tagFilter is one of the following: \nsynthetic.syntheticType, synthetic.locationId, and synthetic.applicationId.\nIt will be replaced by **tagFilterExpression**.\n```\n\"tagFilters\":[{\n  \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n  \"name\":\"synthetic.applicationId\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n```\n\"tagFilterExpression\": { \n  \"type\":\"EXPRESSION\",\n  \"logicalOperator\":\"AND\",\n  \"elements\":[{\n    \"name\": \"synthetic.metricsStatus\", \n    \"operator\": \"EQUALS\", \n    \"numberValue\": 1\n  }, {\n    \"name\": \"synthetic.locationId\", \n    \"operator\": \"EQUALS\", \n    \"stringValue\":\"WnjlKKbgzLDnyGra6PAs\"\n  }]\n}\n```\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\nTo narrow down the result set you have three options to search for a test.\n\n**syntheticType | locationId | applicationId**\n\n* *synthetic.syntheticType:* filter by syntheticType, either HTTPAction or HTTPScript\n\n* *synthetic.locationId:* filter by locationId\n\n* *synthetic.applicationId:* filter by applicationId\n\n\nTests can also be filtered by their active state (`true`/`false`) using the custom property label `synthetic.testActive`.\n```\n\"tagFilters\": [{ \n  \"name\":\"synthetic.testActive\", \n  \"operator\":\"EQUALS\",\n  \"booleanValue\": false \n}]\n```\n\n### Defaults\n\n**syntheticType | locationId | applicationId**\n* no filters are applied in the default call\n\n### Sample payload to get a list of active Synthetic tests with SuccessRate and Average Response Time results\n```\n{\n    \"metrics\": [\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 60,    \n        \"metric\": \"synthetic.metricsResponseTime\"\n     }],\n     \"tagFilterExpression\": { \n        \"type\":\"EXPRESSION\",\n        \"logicalOperator\":\"AND\",\n        \"elements\":[{\n          \"name\": \"synthetic.locationId\", \n          \"operator\": \"EQUALS\", \n          \"stringValue\": \"abcdefgXSJmQsehOWg1S\"\n        }, {\n          \"name\": \"synthetic.testActive\",\n          \"operator\": \"EQUALS\",\n          \"booleanValue\": true\n        }]\n     },\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 3600000  \n     }\n}\n```\n\n## Get a list of Synthetic locations with Last Test Run on (each location) data\nThe endpoint returns a list of Synthetic locations with Last Test Run on (each location) result data\n\n### Mandatory Parameters\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n\n### Optional Parameters\n\n**pagination** if you use pagination you should use the same timeFrame for all of the pages you want to query\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic locations you want to return with one query\n\n**order** You can order the returned items alphanumerically by label, either ascending or descending\n1. *by* Use the metric name, e.g., \"location_name\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n   The sorting can be done on the following metrics: location_name, location_label, status, type, total_tests,\n   last_test_run, and namespace\n\n**tagFilters** It serves as a filter to narrow down return results. The name of a tagFilter is one of the following: \nsynthetic.locationName, synthetic.locationLabel, and synthetic.locationId.\nIt will be replaced by **tagFilterExpression**.\n```\n\"tagFilters\":[{\n  \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n  \"name\":\"synthetic.locationId\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n```\n\"tagFilterExpression\": { \n  \"type\":\"EXPRESSION\",\n  \"logicalOperator\":\"OR\",\n  \"elements\":[{\n    \"name\": \"synthetic.locationId\", \n    \"operator\": \"EQUALS\", \n    \"stringValue\":\"WnjlKKbgzLDnyGra6PAs\"\n  }]\n}\n```\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\n### Sample payload to get a list of Synthetic locations with Last Test Run on (each location) data\n```\n{\n    \"order\": {\n     \t\"by\": \"status\", \n     \t\"direction\": \"Desc\"\n     },\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 3600000  \n     }\n}\n```\n\n## Get Synthetic test playback result detail data\n\n### Query Parameters\n**type** The type of the detailed data. Its value is one of these types: SUBTRANSACTIONS, LOGS, and HAR.\n\n**name** The name of the file to be retrieved, if more than one file available for the same type. Used when the type equals to LOGS or IMAGES\n\n## Download a Synthetic test playback result detail data file\n\n### Query Parameter\n**type** The type of a single compressed file. Its value is one of these types: SUBTRANSACTIONS, LOGS, IMAGES, VIDEOS, and HAR."
    },
    {
      "name": "Action Catalog"
    },
    {
      "name": "Action History"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Authentication"
    }
  ],
  "paths": {
    "/api/apdex/report/{apdexId}": {
      "get": {
        "description": "Generate Apdex Report for a specified Apdex ID.",
        "operationId": "getApdexReport",
        "parameters": [
          {
            "description": "apdexId",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "path",
            "name": "apdexId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix Timestamp milliseconds (13-digit)",
            "example": 1706713140000,
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Unix Timestamp milliseconds (13-digit)",
            "example": 1706813100000,
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "apdexId": "nCtEoR6NSPqG61QkIkwwCw",
                  "from": 1706713140000,
                  "to": 1706813100000,
                  "apdexScore": [
                    [
                      1706713140000,
                      0.5
                    ],
                    [
                      1706779500000,
                      0.5
                    ]
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApdexReport"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Generate Apdex report",
        "tags": [
          "Apdex Report"
        ]
      }
    },
    "/api/application-monitoring/analyze/backend-correlation": {
      "get": {
        "description": "Resolves backend trace IDs using correlation IDs from website and mobile app monitoring beacons.",
        "operationId": "getCorrelatedTraces",
        "parameters": [
          {
            "description": "Here, the `backendTraceId` is typically used which can be obtained from the `Get all beacons` API endpoint for website and mobile app monitoring.\nFor XHR, fetch, or HTTP beacons, the `beaconId` retrieved from the same API endpoint can also serve as the `correlationId`.\n",
            "example": "0v7f55879ca12345",
            "in": "query",
            "name": "correlationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "traceId": "c606ccf3578135c6"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackendTraceReference"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Resolve Trace IDs from Monitoring Beacons.",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/analyze/call-groups": {
      "post": {
        "operationId": "getCallGroup",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "group": {
                  "groupbyTag": "service.name",
                  "groupbyTagEntity": "DESTINATION"
                },
                "metrics": [
                  {
                    "aggregation": "SUM",
                    "metric": "calls"
                  },
                  {
                    "aggregation": "P75",
                    "metric": "latency",
                    "granularity": 360
                  }
                ],
                "includeInternal": false,
                "includeSynthetic": false,
                "order": {
                  "by": "calls",
                  "direction": "DESC"
                },
                "pagination": {
                  "retrievalSize": 20
                },
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "call.type",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "DATABASE"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "service.name",
                      "operator": "EQUALS",
                      "entity": "DESTINATION",
                      "value": "ratings"
                    }
                  ]
                },
                "timeFrame": {
                  "to": "1688366990000",
                  "windowSize": "600000"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetCallGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "name": "ratings",
                      "timestamp": 1688366520000,
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1688980829000,
                        "offset": 1
                      },
                      "metrics": {
                        "latency.p75.360": [
                          [
                            1688366520000,
                            1
                          ]
                        ]
                      }
                    }
                  ],
                  "canLoadMore": false,
                  "totalHits": 1,
                  "totalRepresentedItemCount": 1,
                  "totalRetainedItemCount": 1,
                  "adjustedTimeframe": {
                    "windowSize": 360000,
                    "to": 1688366880000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CallGroupsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped call metrics",
        "tags": [
          "Application Analyze"
        ],
        "description": "This endpoint retrieves the metrics for calls.\r\n\r\n## Deprecated Parameters\r\n**tagFilters:** The list of tag filters. It is replaced by **tagFilterExpression**, **includeInternal** and **includeSynthetic**."
      }
    },
    "/api/application-monitoring/analyze/trace-groups": {
      "post": {
        "operationId": "getTraceGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": "{\n     \"group\": {\n         \"groupbyTag\": \"trace.endpoint.name\",\n         \"groupbyTagEntity\": \"NOT_APPLICABLE\"\n     },\n     \"metrics\": [\n         {\n             \"aggregation\": \"SUM\",\n             \"metric\": \"latency\"\n         }\n     ],\n     \"order\": {\n         \"by\": \"latency\",\n         \"direction\": \"ASC\"\n     },\n     \"pagination\": {\n          \"retrievalSize\": 20\n     }\n     \"tagFilterExpression\": {\n          \"type\": \"EXPRESSION\",\n          \"logicalOperator\": \"AND\",\n          \"elements\": [\n              {\n                  \"type\": \"TAG_FILTER\",\n                  \"name\": \"call.type\",\n                  \"operator\": \"EQUALS\",\n                  \"entity\": \"NOT_APPLICABLE\",\n                  \"value\": \"DATABASE\"\n              },\n              {\n                  \"type\": \"TAG_FILTER\",\n                  \"name\": \"service.name\",\n                  \"operator\": \"EQUALS\",\n                  \"entity\": \"DESTINATION\",\n                  \"value\": \"ratings\"\n              }\n          ]\n      },\n }\n",
              "schema": {
                "$ref": "#/components/schemas/GetTraceGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "name": "GET /api/cart-total",
                      "timestamp": 1688542673148,
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1688543264000,
                        "offset": 1
                      },
                      "metrics": {
                        "latency.sum": [
                          [
                            1688543260000,
                            31
                          ]
                        ]
                      }
                    }
                  ],
                  "canLoadMore": true,
                  "totalHits": 2595,
                  "totalRepresentedItemCount": 2595,
                  "totalRetainedItemCount": 2595,
                  "adjustedTimeframe": {
                    "windowSize": 600000,
                    "to": 1687939110000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TraceGroupsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped trace metrics",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/analyze/traces": {
      "post": {
        "operationId": "getTraces",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "analyze/traces": {
                  "description": "Currently Order by is not supported\n",
                  "value": {
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "pagination": {
                      "retrievalSize": 20
                    },
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "endpoint.name",
                          "operator": "EQUALS",
                          "entity": "DESTINATION",
                          "value": "alerting_integrations"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "service.name",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE",
                          "value": "catalog"
                        }
                      ]
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetTraces"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "trace": {
                        "id": "c11d056d778b4202",
                        "label": "POST /shipping/anonymous-526093",
                        "startTime": 1688447998665,
                        "duration": 2,
                        "erroneous": false,
                        "service": {
                          "id": "8bfb4e1aa590eab8f08f837b97acf5803a5737ed",
                          "label": "cart",
                          "types": [],
                          "technologies": [],
                          "snapshotIds": [],
                          "entityType": "SERVICE"
                        },
                        "endpoint": null
                      },
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1688448014000,
                        "offset": 1
                      }
                    }
                  ],
                  "canLoadMore": true,
                  "totalHits": 12393,
                  "totalRepresentedItemCount": 12393,
                  "totalRetainedItemCount": 12393,
                  "adjustedTimeframe": {
                    "windowSize": 600000,
                    "to": 1687938300000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TraceResult"
                }
              }
            },
            "description": "OK",
            "x-example": "TraceResult"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all traces",
        "tags": [
          "Application Analyze"
        ],
        "x-code-samples": [
          {
            "lang": "JAVA",
            "source": "CloseableHttpClient client = HttpClients.createDefault();\nString url = \"https://unit-tenant.instana.com/api/application-monitoring/analyze/traces\";\nHttpPost httpPost = new HttpPost(url);\nString json = \"{\"\n            + \"\\\"pagination\\\":{\\\"retrievalSize\\\":20,\\\"offset\\\":0},\"\n            + \"\\\"timeFrame\\\":{\\\"windowSize\\\":3600000}\"\n            + \"}\"\nStringEntity entity = new StringEntity(json);\nhttpPost.setEntity(entity);\nhttpPost.setHeader(\"Accept\", \"application/json\");\nhttpPost.setHeader(\"Content-type\", \"application/json\");\nhttpPost.setHeader(\"Authorization\", \"apiToken xxxxxxxx\");\n\nCloseableHttpResponse response = client.execute(httpPost);\n\nassertThat(response.getStatusLine().getStatusCode(), equalTo(200));\nString traceResult = EntityUtils.toString(response.getEntity());\nclient.close();\n"
          },
          {
            "lang": "SHELL",
            "source": "curl --request POST \\\n  --url https://unit-tenant.instana.io/api/application-monitoring/analyze/call-groups \\\n  --header 'authorization: apiToken {apiToken}}' \\\n  --header 'content-type: application/json' \\\n  --data '{ \n\n\"timeFrame\": { \n\"windowSize\": 36000000 \n}, \n\"order\":{\n\t\"by\": \"errors\", \n\"direction\": \"DESC\" \n},\n\"group\": { \n\"groupbyTag\": \"application.name\"\n},  \n\"metrics\": [ \n{ \n\"metric\": \"errors\", \n\"aggregation\": \"MEAN\" \n} \n] \n} '"
          }
        ],
        "description": "This endpoint retrieves the metrics for traces.\r\n\r\n**Manditory Paramters:**\r\n\r\n**Optional Paramters:**\r\n\r\n**Defaults:**\r\n\r\n**Limits:**\r\n\r\n**Tips:**\r\n"
      }
    },
    "/api/application-monitoring/analyze/traces/{id}": {
      "get": {
        "deprecated": true,
        "description": "Replaced by /api/application-monitoring/v2/analyze/traces/{id}",
        "operationId": "getTrace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "c606ccf3578135c6",
                  "totalErrorCount": 0,
                  "rootSpan": {
                    "id": "7757e58f78fff3c8",
                    "parentId": "",
                    "foreignParentId": "",
                    "callId": "7757e58f78fff3c8",
                    "name": "node.http.server",
                    "label": "GET /products",
                    "start": 1688365739882,
                    "duration": 22,
                    "calculatedSelfTime": 4,
                    "errorCount": 0,
                    "batchSize": 1,
                    "batchSelfTime": 22,
                    "kind": "ENTRY",
                    "isSynthetic": false,
                    "data": {
                      "http": {
                        "rawUrl": "/products",
                        "path": "/products",
                        "method": "GET",
                        "host": "localhost:8000",
                        "path_tpl": "/products",
                        "status": 200
                      }
                    },
                    "source": {
                      "applications": [],
                      "service": {
                        "id": "ROOT",
                        "label": "",
                        "types": [],
                        "technologies": [],
                        "snapshotIds": [],
                        "entityType": "SERVICE"
                      },
                      "endpoint": {
                        "id": "kVZuxJ7SE8F89iXn6dJ6rdEjQzY",
                        "label": "Robot-Shop",
                        "type": "HTTP",
                        "serviceId": "",
                        "technologies": [],
                        "syntheticType": "NON_SYNTHETIC",
                        "entityType": "ENDPOINT"
                      },
                      "physicalContext": {}
                    },
                    "destination": {
                      "applications": [
                        {
                          "id": "Jv83WpUmSKiiCWIpi-reSQ",
                          "label": "Robot-Shop",
                          "boundaryScope": "INBOUND",
                          "entityType": "APPLICATION"
                        },
                        {
                          "id": "sYoqGlu8SVy2ILv-4lh5aw",
                          "label": "All Services",
                          "boundaryScope": "INBOUND",
                          "entityType": "APPLICATION"
                        },
                        {
                          "id": "R0ZWCcK1ShiFXEW4JHjTZg",
                          "label": "node.js Services",
                          "boundaryScope": "INBOUND",
                          "entityType": "APPLICATION"
                        }
                      ],
                      "service": {
                        "id": "8939fc2f4b7a964c5c7d40e881daa9d883478be7",
                        "label": "eum-sim",
                        "types": [],
                        "technologies": [],
                        "snapshotIds": [],
                        "entityType": "SERVICE"
                      },
                      "endpoint": {
                        "id": "dIgIisQFGd-eVZmYaAwhM5sesPA",
                        "label": "GET /products",
                        "type": "HTTP",
                        "serviceId": "",
                        "technologies": [],
                        "syntheticType": "NON_SYNTHETIC",
                        "entityType": "ENDPOINT"
                      },
                      "physicalContext": {
                        "process": {
                          "id": "dzP4kVCxYu9o8pcesl2WRAc_lJc",
                          "time": 1687520911000,
                          "label": "eum-sim v2.0.0",
                          "plugin": "nodeJsRuntimePlatform",
                          "data": null
                        },
                        "container": {
                          "id": "3w4-kfSCVJeSsYv5VFf9OCL0s4I",
                          "time": 1687520634000,
                          "label": "eum-sim (eum/eum-sim-7549958c6d-pkx98)",
                          "plugin": "docker",
                          "data": null
                        },
                        "host": {
                          "id": "dHBz3ZRZdpsKcXGd-cNuwej-j6Y",
                          "time": 1688187888000,
                          "label": "Host-1",
                          "plugin": "host",
                          "data": {
                            "cpu.count": 4,
                            "os.name": "Linux",
                            "memory.total": 15729750016
                          }
                        }
                      }
                    },
                    "stackTrace": [],
                    "childSpans": []
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FullTrace"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get trace detail",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/applications": {
      "get": {
        "description": "Use this API endpoint if one wants to retrieve a list of Application Perspectives.\nA use case could be to view the application id of an Application Perspective.\n",
        "operationId": "getApplications",
        "parameters": [
          {
            "description": "Name of application",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "boundaryScope": "INBOUND",
                      "entityType": "APPLICATION",
                      "id": "e8krH1wNRV6daAo-NEmG8g",
                      "label": "Robot Shop"
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get applications",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/applications/services": {
      "get": {
        "description": "Use this API endpoint if one wants to retrieve a list of Application/Services.\nA use case could be to view the application id or service ID of an Application Perspective or a Service.\n",
        "operationId": "getApplicationServices",
        "parameters": [
          {
            "description": "Name of application/service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ]
            }
          },
          {
            "description": "Include snapshot ids in the results",
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "entityType": "SERVICE",
                      "id": "79f1430f4a42a707a97621ca00617e40bd51c31d",
                      "label": "www.paypal.com",
                      "snapshotIds": [
                        "CywiRxmGIwtQIKezVs-XMcTX2xg"
                      ],
                      "technologies": [
                        "kafkaCluster"
                      ],
                      "types": [
                        "MESSAGING"
                      ]
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get applications/services",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/applications/services/endpoints": {
      "get": {
        "description": "Use this API endpoint if one wants to retrieve a list of Endpoints.\nA use case could be to view the endpoint id of an Endpoint.\n",
        "operationId": "getApplicationEndpoints",
        "parameters": [
          {
            "description": "Name of service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of Endpoint",
            "in": "query",
            "name": "types",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "description": "List of technologies",
            "in": "query",
            "name": "technologies",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "entityType": "ENDPOINT",
                      "id": "IWeMKSzcvJHijAQoaA-luyHriDQ",
                      "label": "websites",
                      "serviceId": "a25c02069636022456e6139ebfe4f4bfec23ae31",
                      "synthetic": false,
                      "syntheticType": "NON_SYNTHETIC",
                      "technologies": [
                        "postgreSqlDatabase"
                      ],
                      "type": "DATABASE"
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/EndpointResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get endpoints",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/catalog": {
      "get": {
        "operationId": "getApplicationTagCatalog",
        "parameters": [
          {
            "description": "The start of the timestamp expreseed in Unix epoch time in milliseconds which will fetch list of queryable tags until current timestamp.\nEg: `1719875833000` (1 July 2024 23:17:13 GMT) will fetch list of queryable tags from that time till current time.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The source from where queryable tags should be fetched from. In Unbounded Analytics, Application Perspectives has 2 sources; `Calls` and `Traces`.",
            "in": "query",
            "name": "dataSource",
            "schema": {
              "type": "string",
              "enum": [
                "CALLS",
                "TRACES"
              ]
            }
          },
          {
            "description": "The subset of queryable tags that is available for a particular use case.\nFor eg: If you select `dataSource` as `TRACES` and useCase as `Grouping`. The tags available for querying are `trace.endpoint.name` and `trace.service.name`.\nuseCase is helpful when one wants to know which tags are supported for querying.\n",
            "in": "query",
            "name": "useCase",
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tagTree": [
                    {
                      "label": "Agent",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Zone",
                          "icon": "lib_views_tag",
                          "tagName": "agent.zone",
                          "queryable": true,
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    }
                  ],
                  "tags": [
                    {
                      "name": "marathon.label",
                      "label": "Label",
                      "type": "KEY_VALUE_PAIR",
                      "description": "marathon label",
                      "canApplyToSource": true,
                      "canApplyToDestination": true,
                      "idTag": false
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get application tag catalog",
        "tags": [
          "Application Catalog"
        ],
        "description": "Use this API endpoint to retrieve a list of tags.\nThis API endpoint also shows tags which are grouped together. This grouping also denotes the dimensionality of an event. Eg: `Call` can have 9 attributes.\nAlso these tags have cardinality ranging from low to high which will help in examining broad or narrow patterns during the analysis.\nQueryable tags are a powerful enabler for slice and dice analysis in `Query Builder`.  `Query Builder` can be found in `Unbounded Analytics`."
      }
    },
    "/api/application-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getApplicationCatalogMetrics",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "metricId": "calls",
                    "label": "Call count",
                    "formatter": "NUMBER",
                    "description": "Number of received calls",
                    "aggregations": [
                      "PER_SECOND",
                      "SUM"
                    ],
                    "defaultAggregation": null
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDescription"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Metric catalog",
        "tags": [
          "Application Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions for application monitoring.\n"
      }
    },
    "/api/application-monitoring/catalog/tags": {
      "get": {
        "deprecated": true,
        "operationId": "getApplicationTags",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "dataSource",
            "schema": {
              "type": "string",
              "enum": [
                "CALLS",
                "TRACES"
              ]
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get application tags",
        "tags": [
          "Application Catalog"
        ],
        "description": "This endpoint retrieves all available tags for your monitored system.\n\nThese tags can be used to group metric results.\n```\n\"group\": {\n  \"groupbyTag\": \"service.name\"\n}\n```\n\nThese tags can be used to filter metric results.\n```\n\"tagFilters\": [{\n\t\"name\": \"application.name\",\n\t\"operator\": \"EQUALS\",\n\t\"value\": \"example\"\n}]\n```\n"
      }
    },
    "/api/application-monitoring/metrics/applications": {
      "post": {
        "description": "Use this API endpoint if one wants to retrieve one or more supported aggregation of supported metrics for an Application Perspective.\nFor eg: retrieve `MEAN` aggregation of `latency` metric for an Application Perspective `app`.\nFor more information on supported metrics, refer `Get Metric catalog`.\n",
        "operationId": "getApplicationMetrics",
        "parameters": [
          {
            "description": "If enabled, fill the missing data points in the metric result with timestamp and value 0.",
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "metrics/applications": {
                  "description": "Attribute in \"order by\" should\nbe provided in \"metrics\" as well\n",
                  "value": {
                    "metrics": [
                      {
                        "aggregation": "MEAN",
                        "metric": "latency"
                      }
                    ],
                    "order": {
                      "by": "latency",
                      "direction": "DESC"
                    },
                    "pagination": {
                      "page": 1,
                      "pageSize": 1
                    },
                    "timeFrame": {
                      "to": 1646037122400,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetApplications"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "application": {
                        "id": "Jv83WpUmSKiiCWIpi-reSQ",
                        "label": "demoApp",
                        "boundaryScope": "ALL",
                        "entityType": "APPLICATION"
                      },
                      "metrics": {
                        "latency.mean": [
                          [
                            1669190580000,
                            4
                          ]
                        ]
                      }
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1616,
                  "adjustedTimeframe": {
                    "windowSize": 3600000,
                    "to": 1646037120000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Application Metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/metrics/endpoints": {
      "post": {
        "description": "Use this API endpoint if one wants to retrieve one or more supported aggregation of supported metrics for an Endpoint.\nFor eg: retrieve `MEAN` aggregation of `latency` metric for an Endpoint `GET /api/foo`.\nFor more information on supported metrics, refer `Get Metric catalog`.\n",
        "operationId": "getEndpointsMetrics",
        "parameters": [
          {
            "description": "If enabled, fill the missing data points in the metric result with timestamp and value 0.",
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "metrics/endpoints": {
                  "description": "Order by is supported for following attributes: endpointLabel or valid metrics if provided such as latency.mean\n",
                  "value": {
                    "applicationBoundaryScope": "ALL",
                    "endpointId": "murzTwzJlGyqc_CFtEKx8INVCfY",
                    "excludeSynthetic": true,
                    "metrics": [
                      {
                        "aggregation": "MEAN",
                        "metric": "latency"
                      }
                    ],
                    "order": {
                      "by": "latency.mean",
                      "direction": "ASC"
                    },
                    "pagination": {
                      "page": 1,
                      "pageSize": 1
                    },
                    "timeFrame": {
                      "to": 1669190589000,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetEndpoints"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "endpoint": {
                        "id": "murzTwzJlGyqc_CFtEKx8INVCfY",
                        "label": "robot-shop",
                        "type": "MESSAGING",
                        "serviceId": "05b145cfb6fbc24d08a8e01155c0aa2bf8460c87",
                        "technologies": [
                          "golangRuntimePlatform",
                          "kubernetesService"
                        ],
                        "syntheticType": "NON_SYNTHETIC",
                        "synthetic": false,
                        "entityType": "ENDPOINT"
                      },
                      "metrics": {
                        "latency.mean": [
                          [
                            1669190580000,
                            2434.5625
                          ]
                        ]
                      }
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1,
                  "adjustedTimeframe": {
                    "windowSize": 3600000,
                    "to": 1669190580000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Endpoint metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/metrics/services": {
      "post": {
        "description": "Use this API endpoint if one wants to retrieve one or more supported aggregation of supported metrics for a Service.\nFor eg: retrieve `MEAN` aggregation of `latency` metric for a Service `payment`.\nFor more information on supported metrics, refer `Get Metric catalog`.\n",
        "operationId": "getServicesMetrics",
        "parameters": [
          {
            "description": "If enabled, fill the missing data points in the metric result with timestamp and value 0.",
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "metrics/services": {
                  "description": "Order by is supported for following attributes: types, technologies, serviceLabel and\n valid metrics if provided such as latency.mean\n",
                  "value": {
                    "applicationBoundaryScope": "ALL",
                    "contextScope": "NONE",
                    "metrics": [
                      {
                        "aggregation": "mean",
                        "metric": "latency"
                      }
                    ],
                    "order": {
                      "by": "latency.mean",
                      "direction": "DESC"
                    },
                    "pagination": {
                      "page": 1,
                      "pageSize": 1
                    },
                    "serviceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                    "technologies": [
                      "springbootApplicationContainer"
                    ],
                    "timeFrame": {
                      "to": 1669190589000,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetServices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "service": {
                        "id": "c467ca0fa21477fee3cde75a140b2963307388a7",
                        "label": "discount",
                        "types": [
                          "HTTP"
                        ],
                        "technologies": [
                          "springbootApplicationContainer"
                        ],
                        "snapshotIds": [],
                        "entityType": "SERVICE"
                      },
                      "metrics": {
                        "endpoints.distinct_count": [
                          [
                            1669190580000,
                            4
                          ]
                        ]
                      }
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1,
                  "adjustedTimeframe": {
                    "windowSize": 3600000,
                    "to": 1669190580000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Service metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/services": {
      "get": {
        "description": "Use this API endpoint if one wants to retrieve a list of Services.\nA use case could be to view the service id of a Service.\n",
        "operationId": "getServices",
        "parameters": [
          {
            "description": "Name of service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Include snapshot ids in the results",
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "entityType": "SERVICE",
                      "id": "79f1430f4a42a707a97621ca00617e40bd51c31d",
                      "label": "Robot Shop",
                      "snapshotIds": [
                        "CywiRxmGIwtQIKezVs-XMcTX2xg"
                      ],
                      "technologies": [
                        "kafkaCluster"
                      ],
                      "types": [
                        "MESSAGING"
                      ]
                    }
                  ],
                  "page": 1,
                  "pageSize": 1,
                  "totalHits": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get services",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/settings/application": {
      "get": {
        "operationId": "getApplicationConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "CxJ55sRbQwqBIfw5DzpRmQ",
                    "label": "Discount Canary Build 6987",
                    "matchSpecification": null,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "kubernetes.label",
                          "stringValue": "stage=canary",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": "stage",
                          "value": "canary",
                          "operator": "EQUALS",
                          "entity": "DESTINATION"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "kubernetes.label",
                          "stringValue": "build=6987",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": "build",
                          "value": "6987",
                          "operator": "EQUALS",
                          "entity": "DESTINATION"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "kubernetes.label",
                          "stringValue": "app=discount",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": "app",
                          "value": "discount",
                          "operator": "EQUALS",
                          "entity": "DESTINATION"
                        }
                      ]
                    },
                    "scope": "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
                    "boundaryScope": "INBOUND",
                    "accessRules": [
                      {
                        "accessType": "READ_WRITE",
                        "relationType": "GLOBAL",
                        "relatedId": null
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All Application configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "addApplicationConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accessRules": [
                  {
                    "accessType": "READ_WRITE",
                    "relationType": "GLOBAL",
                    "relatedId": null
                  }
                ],
                "boundaryScope": "INBOUND",
                "label": "Discount Build 6987",
                "scope": "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "stage=canary",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "stage",
                      "value": "canary",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "build=6987",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "build",
                      "value": "6987",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "app=discount",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "app",
                      "value": "discount",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/NewApplicationConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "oLyuFtIfQ3eKzAqM5vBGkQ",
                  "label": "Discount Build 6987",
                  "matchSpecification": null,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "stage=canary",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "stage",
                        "value": "canary",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "build=6987",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "build",
                        "value": "6987",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "app=discount",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "app",
                        "value": "discount",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      }
                    ]
                  },
                  "scope": "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
                  "boundaryScope": "INBOUND",
                  "accessRules": [
                    {
                      "accessType": "READ_WRITE",
                      "relationType": "GLOBAL",
                      "relatedId": null
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add application configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Create a new Application Perspective.\n\n## Deprecated Parameters\n**matchSpecification:** A binary tree sturcture of match expression connected with binary operator AND or OR. It is replaced by **tagFilterExpression** which is also used in Application Analyze API endpoints."
      }
    },
    "/api/application-monitoring/settings/application/{id}": {
      "delete": {
        "operationId": "deleteApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete application configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "CxJ55sRbQwqBIfw5DzpRmQ",
                  "label": "Discount Canary Build 6987",
                  "matchSpecification": null,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "stage=canary",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "stage",
                        "value": "canary",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "build=6987",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "build",
                        "value": "6987",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "app=discount",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "app",
                        "value": "discount",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      }
                    ]
                  },
                  "scope": "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
                  "boundaryScope": "INBOUND",
                  "accessRules": [
                    {
                      "accessType": "READ_WRITE",
                      "relationType": "GLOBAL",
                      "relatedId": null
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Application configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "putApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accessRules": [
                  {
                    "accessType": "READ",
                    "relationType": "ROLE"
                  }
                ],
                "boundaryScope": "INBOUND",
                "id": "CxJ55sRbQwqBIfw5DzpRmQ",
                "label": "Discount Build 1",
                "scope": "INCLUDE_NO_DOWNSTREAM",
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "stage=canary",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "stage",
                      "value": "canary",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "build=6987",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "build",
                      "value": "6987",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "kubernetes.label",
                      "stringValue": "app=discount",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": "app",
                      "value": "discount",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "CxJ55sRbQwqBIfw5DzpRmQ",
                  "label": "Discount Canary Build 6987",
                  "matchSpecification": null,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "stage=canary",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "stage",
                        "value": "canary",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "build=6987",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "build",
                        "value": "6987",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.label",
                        "stringValue": "app=discount",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": "app",
                        "value": "discount",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      }
                    ]
                  },
                  "scope": "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
                  "boundaryScope": "INBOUND",
                  "accessRules": [
                    {
                      "accessType": "READ_WRITE",
                      "relationType": "GLOBAL",
                      "relatedId": null
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update application configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Update an existing Application Perspective.\n\n## Deprecated Parameters\n**matchSpecification:** A binary tree sturcture of match expression connected with binary operator AND or OR. It is replaced by **tagFilterExpression** which is also used in Application Analyze API endpoints."
      }
    },
    "/api/application-monitoring/settings/endpoint": {
      "get": {
        "operationId": "getEndpointConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                    "endpointCase": "LOWER",
                    "endpointNameByFirstPathSegmentRuleEnabled": false,
                    "endpointNameByCollectedPathTemplateRuleEnabled": false,
                    "rules": null
                  },
                  {
                    "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                    "endpointCase": "UPPER",
                    "endpointNameByFirstPathSegmentRuleEnabled": false,
                    "endpointNameByCollectedPathTemplateRuleEnabled": false,
                    "rules": null
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All Endpoint configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "createEndpointConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                "endpointCase": "LOWER",
                "endpointNameByFirstPathSegmentRuleEnabled": false,
                "endpointNameByCollectedPathTemplateRuleEnabled": false,
                "rules": null
              },
              "schema": {
                "$ref": "#/components/schemas/EndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                  "endpointCase": "LOWER",
                  "endpointNameByFirstPathSegmentRuleEnabled": false,
                  "endpointNameByCollectedPathTemplateRuleEnabled": false,
                  "rules": null
                },
                "schema": {
                  "$ref": "#/components/schemas/EndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Create endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/endpoint/{id}": {
      "delete": {
        "operationId": "deleteEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                  "endpointCase": "LOWER",
                  "endpointNameByFirstPathSegmentRuleEnabled": false,
                  "endpointNameByCollectedPathTemplateRuleEnabled": false,
                  "rules": null
                },
                "schema": {
                  "$ref": "#/components/schemas/EndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "updateEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40",
                "endpointNameByCollectedPathTemplateRuleEnabled": true,
                "endpointNameByFirstPathSegmentRuleEnabled": true,
                "rules": [
                  {
                    "enabled": true,
                    "pathSegments": [
                      {
                        "name": "api",
                        "type": "FIXED"
                      },
                      {
                        "name": "version",
                        "type": "PARAMETER"
                      }
                    ],
                    "testCases": [
                      "/api/v2/users"
                    ]
                  }
                ],
                "endpointCase": "UPPER"
              },
              "schema": {
                "$ref": "#/components/schemas/EndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40",
                  "endpointNameByCollectedPathTemplateRuleEnabled": true,
                  "endpointNameByFirstPathSegmentRuleEnabled": true,
                  "rules": [
                    {
                      "enabled": true,
                      "pathSegments": [
                        {
                          "name": "api",
                          "type": "FIXED"
                        },
                        {
                          "name": "version",
                          "type": "PARAMETER"
                        }
                      ],
                      "testCases": [
                        "/api/v2/users"
                      ]
                    }
                  ],
                  "endpointCase": "UPPER"
                },
                "schema": {
                  "$ref": "#/components/schemas/EndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/http-endpoint": {
      "get": {
        "deprecated": true,
        "operationId": "getHttpEndpointConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "serviceId": "d0cedae516f2182ede16f57f67476dd4c7dab9cd",
                  "endpointNameByFirstPathSegmentRuleEnabled": true,
                  "endpointNameByCollectedPathTemplateRuleEnabled": true,
                  "rules": [
                    {
                      "enabled": true,
                      "pathSegments": [
                        {
                          "name": "api",
                          "type": "FIXED"
                        },
                        {
                          "name": "version",
                          "type": "PARAMETER"
                        },
                        {
                          "type": "MATCH_ALL"
                        }
                      ],
                      "testCases": [
                        "/api/v2/users"
                      ]
                    }
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HttpEndpointConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All HTTP endpoint configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "createHttpEndpointConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "endpointNameByCollectedPathTemplateRuleEnabled": true,
                "endpointNameByFirstPathSegmentRuleEnabled": true,
                "rules": [
                  {
                    "enabled": true,
                    "pathSegments": [
                      {
                        "type": "MATCH_ALL"
                      }
                    ],
                    "testCases": [
                      "/api/v2/users"
                    ]
                  }
                ],
                "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40"
              },
              "schema": {
                "$ref": "#/components/schemas/HttpEndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40",
                  "endpointNameByFirstPathSegmentRuleEnabled": true,
                  "endpointNameByCollectedPathTemplateRuleEnabled": true,
                  "rules": [
                    {
                      "enabled": true,
                      "pathSegments": [
                        {
                          "type": "MATCH_ALL"
                        }
                      ],
                      "testCases": [
                        "/api/v2/users"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Create HTTP endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/http-endpoint/{id}": {
      "delete": {
        "deprecated": true,
        "operationId": "deleteHttpEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete HTTP endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "deprecated": true,
        "operationId": "getHttpEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "endpointNameByCollectedPathTemplateRuleEnabled": true,
                  "endpointNameByFirstPathSegmentRuleEnabled": true,
                  "rules": [
                    {
                      "enabled": true,
                      "pathSegments": [
                        {
                          "name": "api",
                          "type": "FIXED"
                        },
                        {
                          "name": "version",
                          "type": "PARAMETER"
                        },
                        {
                          "type": "MATCH_ALL"
                        }
                      ],
                      "testCases": [
                        "/api/v2/users"
                      ]
                    }
                  ],
                  "serviceId": "20ba31821b079e7d845a08096124880db3eeeb47"
                },
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "HTTP Endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "updateHttpEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "endpointNameByCollectedPathTemplateRuleEnabled": true,
                "endpointNameByFirstPathSegmentRuleEnabled": true,
                "rules": [
                  {
                    "enabled": true,
                    "pathSegments": [
                      {
                        "name": "api",
                        "type": "FIXED"
                      },
                      {
                        "name": "version",
                        "type": "PARAMETER"
                      },
                      {
                        "type": "MATCH_ALL"
                      }
                    ],
                    "testCases": [
                      "/api/v2/users"
                    ]
                  }
                ],
                "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40"
              },
              "schema": {
                "$ref": "#/components/schemas/HttpEndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "endpointNameByCollectedPathTemplateRuleEnabled": true,
                  "endpointNameByFirstPathSegmentRuleEnabled": true,
                  "rules": [
                    {
                      "enabled": true,
                      "pathSegments": [
                        {
                          "name": "api",
                          "type": "FIXED"
                        },
                        {
                          "name": "version",
                          "type": "PARAMETER"
                        },
                        {
                          "type": "MATCH_ALL"
                        }
                      ],
                      "testCases": [
                        "/api/v2/users"
                      ]
                    }
                  ],
                  "serviceId": "20ba31821b079e7d845a08096124880db3eeeb40"
                },
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update HTTP endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/manual-service": {
      "get": {
        "operationId": "getAllManualServiceConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "wh49Z209S82aGvRl8ZZ0dQ",
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "name": "call.database.connection",
                      "stringValue": "redis:6379",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": null,
                      "value": "redis:6379",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE"
                    },
                    "unmonitoredServiceName": null,
                    "existingServiceId": "2224a6ad91373ef2504dc6b5795d421bff8e4a4d",
                    "description": null,
                    "enabled": true
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualServiceConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All manual service configurations",
        "tags": [
          "Application Settings"
        ],
        "description": "Get all manual service configurations.\n\n**This is an experimental endpoint to workaround service mapping issues.**"
      },
      "post": {
        "operationId": "addManualServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Map source service example",
                "enabled": true,
                "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "service.name",
                  "stringValue": "front",
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": "front",
                  "operator": "EQUALS",
                  "entity": "SOURCE"
                },
                "unmonitoredServiceName": null
              },
              "schema": {
                "$ref": "#/components/schemas/NewManualServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "FpG0_9tZT5OjzYM7m5VgUQ",
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "service.name",
                    "stringValue": "front",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "front",
                    "operator": "EQUALS",
                    "entity": "SOURCE"
                  },
                  "unmonitoredServiceName": null,
                  "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                  "description": "Map source service example",
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/ManualServiceConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Add a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      },
      "put": {
        "operationId": "replaceAllManualServiceConfigs",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "description": "Map source service",
                  "enabled": true,
                  "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "service.name",
                    "stringValue": "front",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "front",
                    "operator": "EQUALS",
                    "entity": "SOURCE"
                  },
                  "unmonitoredServiceName": null
                }
              ],
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NewManualServiceConfig"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "undcnbu-S7OWi_4q4BnG4Q",
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "name": "service.name",
                      "stringValue": "front",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": null,
                      "value": "front",
                      "operator": "EQUALS",
                      "entity": "SOURCE"
                    },
                    "unmonitoredServiceName": null,
                    "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                    "description": "Map source service",
                    "enabled": true
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualServiceConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Replace all manual service configurations",
        "tags": [
          "Application Settings"
        ],
        "description": "Replace all manual service configurations.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      }
    },
    "/api/application-monitoring/settings/manual-service/{id}": {
      "delete": {
        "operationId": "deleteManualServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Delete a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**"
      },
      "put": {
        "operationId": "updateManualServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Map source service example",
                "enabled": true,
                "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                "id": "BDGeDcG4TRSzRkJ1mGOk-Q",
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "service.name",
                  "stringValue": "front",
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": "front",
                  "operator": "EQUALS",
                  "entity": "SOURCE"
                },
                "unmonitoredServiceName": null
              },
              "schema": {
                "$ref": "#/components/schemas/ManualServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "BDGeDcG4TRSzRkJ1mGOk-Q",
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "service.name",
                    "stringValue": "front",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "front",
                    "operator": "EQUALS",
                    "entity": "SOURCE"
                  },
                  "unmonitoredServiceName": null,
                  "existingServiceId": "c467ca0fa21477fee3cde75a140b2963307388a7",
                  "description": "Map source service example",
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/ManualServiceConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Update a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      }
    },
    "/api/application-monitoring/settings/service": {
      "get": {
        "operationId": "getServiceConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "MyhomcyCRz2DF3O2KNXpGg",
                    "name": "Rule",
                    "comment": null,
                    "label": "{docker.container.name}",
                    "enabled": false,
                    "matchSpecification": [
                      {
                        "key": "docker.container.name",
                        "value": ".*"
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All service configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "addServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "comment": null,
                "enabled": true,
                "label": "{gce.zone}-{jvm.args.abc}",
                "matchSpecification": [
                  {
                    "key": "gce.zone",
                    "value": ".*"
                  },
                  {
                    "key": "jvm.args.abc",
                    "value": ".*"
                  }
                ],
                "name": "ABC is good"
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "oMsVfR0fSCuTKF2TFdYRmQ",
                  "name": "ABC is good",
                  "comment": null,
                  "label": "{gce.zone}-{jvm.args.abc}",
                  "enabled": true,
                  "matchSpecification": [
                    {
                      "key": "gce.zone",
                      "value": ".*"
                    },
                    {
                      "key": "jvm.args.abc",
                      "value": ".*"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "replaceAll",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "comment": null,
                  "enabled": true,
                  "id": "8C-jGYx8Rsue854tzkh8KQ",
                  "label": "{docker.container.name}",
                  "matchSpecification": [
                    {
                      "key": "docker.container.name",
                      "value": ".*"
                    }
                  ],
                  "name": "Rule"
                }
              ],
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "9uma4MhnTTSyBzwu_FKBJA",
                    "name": "Rule",
                    "comment": null,
                    "label": "{docker.container.name}",
                    "enabled": true,
                    "matchSpecification": [
                      {
                        "key": "docker.container.name",
                        "value": ".*"
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceConfig"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Replace all service configurations",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/service/order": {
      "put": {
        "operationId": "orderServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                "9uma4MhnTTSyBzwu_FKBJA",
                "oMsVfR0fSCuTKF2TFdYRmQ"
              ],
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Order of service configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/service/{id}": {
      "delete": {
        "operationId": "deleteServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "P_37IlGQT0qQy9fxLxvFqA",
                  "name": "Rule",
                  "comment": null,
                  "label": "{docker.container.name}",
                  "enabled": true,
                  "matchSpecification": [
                    {
                      "key": "docker.container.name",
                      "value": ".*"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "putServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "comment": null,
                "enabled": true,
                "id": "9uma4MhnTTSyBzwu_FKBJA",
                "label": "{gce.zone}-{jvm.args.abc}",
                "matchSpecification": [
                  {
                    "key": "gce.zone",
                    "value": ".*"
                  },
                  {
                    "key": "jvm.args.abc",
                    "value": ".*"
                  }
                ],
                "name": "DEF is good"
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "9uma4MhnTTSyBzwu_FKBJA",
                  "name": "DEF is good",
                  "comment": null,
                  "label": "{gce.zone}-{jvm.args.abc}",
                  "enabled": true,
                  "matchSpecification": [
                    {
                      "key": "gce.zone",
                      "value": ".*"
                    },
                    {
                      "key": "jvm.args.abc",
                      "value": ".*"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update service configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/topology/services": {
      "get": {
        "operationId": "getServicesMap",
        "parameters": [
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Filter by application ID",
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by application scope, i.e., INBOUND or ALL. The default value is INBOUND. Applies only if application ID filter is specified.",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "connections": [
                    {
                      "from": "8bfb4e1aa590eab8f08f837b97acf5803a5737ed",
                      "to": "f17e7efb3b9b2d62bfec6b07905759fb81e99797",
                      "calls": 2179,
                      "latency": 1.6103717301514455,
                      "errorRate": 0
                    }
                  ],
                  "services": [
                    {
                      "id": "f17e7efb3b9b2d62bfec6b07905759fb81e99797",
                      "label": "robot-shop",
                      "types": [
                        "MESSAGING"
                      ],
                      "technologies": [
                        "kubernetesService",
                        "rabbitMq"
                      ],
                      "snapshotIds": [],
                      "entityType": "SERVICE"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceMap"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Gets the service topology",
        "tags": [
          "Application Topology"
        ]
      }
    },
    "/api/application-monitoring/v2/analyze/traces/{id}": {
      "get": {
        "operationId": "getTraceDownload",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "retrievalSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 10000,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "ingestionTime",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "id": "daa9141549aea210",
                      "timestamp": 1688544599223,
                      "parentId": null,
                      "foreignParentId": null,
                      "name": "GET /api/shipping/cities/dk",
                      "duration": 30,
                      "minSelfTime": 1,
                      "networkTime": null,
                      "callCount": 1,
                      "errorCount": 0,
                      "destination": {
                        "service": {
                          "id": "ce4b152bac7b99744d8314838e49b799afd6dd96",
                          "label": "nginx-web"
                        },
                        "endpoint": {
                          "id": "wAS2omB44e0EK4xqL7f-e-wt4C4",
                          "label": "upstream shipping",
                          "type": "HTTP"
                        },
                        "technologies": []
                      },
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1688547327000,
                        "offset": 1
                      }
                    }
                  ],
                  "canLoadMore": false,
                  "totalHits": 3,
                  "totalRepresentedItemCount": 3,
                  "totalRetainedItemCount": 3
                },
                "schema": {
                  "$ref": "#/components/schemas/TraceDownloadResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get trace detail",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/v2/analyze/traces/{traceId}/calls/{callId}/details": {
      "get": {
        "operationId": "getCallDetails",
        "parameters": [
          {
            "in": "path",
            "name": "traceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "callId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "14219b3deb6a6bc5",
                  "label": "GET /api/shipping/cities/bg",
                  "start": 1707295859759,
                  "duration": 3597,
                  "minSelfTime": 2,
                  "networkTime": null,
                  "errorCount": 0,
                  "batchSize": 1,
                  "batchSelfTime": 3597,
                  "source": {
                    "applications": [],
                    "service": {
                      "id": "ROOT",
                      "label": ""
                    },
                    "endpoint": {
                      "id": "XCjGvnwuiak0m3ISke3naE-NrGA",
                      "label": "Unspecified",
                      "type": "UNDEFINED"
                    },
                    "physicalContext": {}
                  },
                  "destination": {
                    "applications": [],
                    "service": {
                      "id": "ce4b152bac7b99744d8314838e49b799afd6dd96",
                      "label": "nginx-web"
                    },
                    "endpoint": {
                      "id": "wAS2omB44e0EK4xqL7f-e-wt4C4",
                      "label": "upstream shipping",
                      "type": "HTTP"
                    },
                    "physicalContext": {
                      "process": {
                        "id": "jXvrnXHuBqfhlZQTux-ck1PYd6Y",
                        "time": 1707258023000,
                        "label": "Node @30303",
                        "plugin": "nginx",
                        "data": null
                      }
                    }
                  },
                  "spans": [
                    {
                      "id": "14219b3deb6a6bc5",
                      "parentId": "",
                      "name": "sdk.http.entry",
                      "kind": "ENTRY",
                      "foreignParentId": "",
                      "start": 1707295859759,
                      "duration": 3597,
                      "errorCount": 0,
                      "stackTrace": [],
                      "data": {
                        "service": "nginx-web",
                        "http": {
                          "path": "/api/shipping/cities/bg",
                          "protocol": "http",
                          "route_id": "upstream shipping",
                          "method": "GET",
                          "host": "web:8080",
                          "url": "http://web:8080//api/shipping/cities/bg",
                          "status": 200
                        }
                      }
                    }
                  ],
                  "logs": [],
                  "synthetic": false
                },
                "schema": {
                  "$ref": "#/components/schemas/TraceActivityTreeNodeDetails"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get call detail",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/v2/metrics": {
      "post": {
        "description": "Use this API endpoint if one wants to retrieve one or more supported aggregation of supported metrics for a combination of entities.\nFor eg: retrieve `MEAN` aggregation of `latency` metric for an Endpoint `GET /api/foo`, Service `payment` and Application Perspective `app`.\nConsider this API endpoint an upgraded version of `Get Application Metrics`, `Get Endpoint metrics` and `Get Service metrics`.\nFor more information on supported metrics, refer `Get Metric catalog`.\n",
        "operationId": "getApplicationDataMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "includeInternal": true,
                "includeSynthetic": true,
                "metrics": [
                  {
                    "aggregation": "MEAN",
                    "metric": "latency"
                  }
                ],
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "service.name",
                  "operator": "EQUALS",
                  "entity": "NOT_APPLICABLE",
                  "value": "warehouse"
                },
                "timeFrame": {
                  "to": 1669190589000,
                  "windowSize": 3600000
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetApplicationMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "metrics": {
                    "latency.mean": [
                      [
                        1669190580000,
                        106.85055708882756
                      ]
                    ]
                  },
                  "adjustedTimeframe": {
                    "windowSize": 3600000,
                    "to": 1669190580000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Application Data Metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/automation/actioninstances": {
      "delete": {
        "operationId": "deleteActionInstances",
        "parameters": [
          {
            "description": "From date filter in milliseconds (13-digit) to look up the Action Instances to delete",
            "example": 1706713140000,
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "To date filter in milliseconds (13-digit) to look up the Action Instances to delete",
            "example": 1706713140000,
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Target snapshot ID to look up the Action Instances to delete",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "query",
            "name": "targetSnapshotId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Event ID filter to look up the Action Instances to delete",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "query",
            "name": "eventId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Event specification ID filter to look up the Action Instances to delete",
            "example": 1706713140000,
            "in": "query",
            "name": "eventSpecificationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Text in Action Instance name, description and event name to filter the Action Instances to delete",
            "example": 1706713140000,
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Action type filter to look up the Action Instances to delete",
            "example": "One or more of the following types HTTP, SCRIPT, ANSIBLE, GITHUB, GITLAB, JIRA",
            "in": "query",
            "name": "types",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Action status filter to look up the Action Instances to delete",
            "example": "One or more of the following status SUBMITTED, IN_PROGRESS, SUCCESS, FAILED, TIMEOUT",
            "in": "query",
            "name": "actionStatuses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of action IDs  to filter the Action Instances to delete",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "query",
            "name": "actionIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "deletedDocumentsCount": "2"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canDeleteAutomationActionHistory"
            ]
          }
        ],
        "summary": "Delete automation action instances",
        "tags": [
          "Action History"
        ]
      },
      "get": {
        "operationId": "getActionInstances",
        "parameters": [
          {
            "description": "Window size filter in milliseconds (to compute the from date) to get the action instance details",
            "example": 10000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "To date filter in milliseconds (13-digit) to get the action instance details",
            "example": 1706713140000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Page to fetch -- used for paging the action instance records",
            "example": 2,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of records to return in each page -- used for paging the action instance records",
            "example": 50,
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Target snapshot ID filter to get the action instance details",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "query",
            "name": "targetSnapshotId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Event ID filter to get the action instance details",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "query",
            "name": "eventId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Event specification ID filter to get the action instance details",
            "example": 1706713140000,
            "in": "query",
            "name": "eventSpecificationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Text in Action Instance name, description and event name filter to get the action instance details",
            "example": 1706713140000,
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Action type filter to get the action instance details",
            "example": "One or more of the following types HTTP, SCRIPT, ANSIBLE, GITHUB, GITLAB, JIRA",
            "in": "query",
            "name": "types",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Action status filter to get the action instance details",
            "example": "One or more of the following status SUBMITTED, IN_PROGRESS, SUCCESS, FAILED, TIMEOUT",
            "in": "query",
            "name": "actionStatuses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Action instance column to order the result set.",
            "example": "Name of the action instance column. Default is action instance start date.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Action instance column to order direction.",
            "example": "asc or desc",
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "actionInstanceId": "fqiH0HOgR1-4Ygoy5EDycw",
                      "actionId": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                      "actionName": "Hello World",
                      "type": "SCRIPT",
                      "status": "SUCCESS",
                      "createdDate": 1710162882369,
                      "startDate": 1710162882653,
                      "endDate": 1710162882826,
                      "eventId": "M3wuBxuaSDyecZJ7ICioiw",
                      "eventSpecificationId": "en0FW6XRWu7aRsD4055dbMLAuSU",
                      "problemText": "Test event",
                      "hostSnapshotId": "2nIOVtEW-iPbsEIi89-yDqJHi2g",
                      "targetSnapshotId": "jfSmhACY-Oa3a8zfjJxvOxJeDSk",
                      "metadata": []
                    }
                  ],
                  "page": 1,
                  "pageSize": 50,
                  "totalHits": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all automation action instances",
        "tags": [
          "Action History"
        ]
      },
      "post": {
        "operationId": "addActionInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "hostId": "aHostId",
                "actionId": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                "policyId": "2nIOVtEW-iPbsEIi89-yDqJabc",
                "inputParameters": [
                  {
                    "name": "name",
                    "type": "type",
                    "value": "value"
                  }
                ],
                "eventId": "M3wuBxuaSDyecZJ7ICioiw",
                "async": "true",
                "timeout": "600"
              },
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actionInstanceId": "fqiH0HOgR1-4Ygoy5EDycw",
                  "actionId": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                  "actionName": "Hello World",
                  "type": "SCRIPT",
                  "status": "SUBMITTED",
                  "createdDate": 1710162882369,
                  "eventId": "M3wuBxuaSDyecZJ7ICioiw",
                  "eventSpecificationId": "en0FW6XRWu7aRsD4055dbMLAuSU",
                  "problemText": "Test event",
                  "hostSnapshotId": "2nIOVtEW-iPbsEIi89-yDqJHi2g",
                  "targetSnapshotId": "jfSmhACY-Oa3a8zfjJxvOxJeDSk",
                  "inputParameters": [],
                  "outputParameters": [],
                  "metadata": [],
                  "externalSourceType": "",
                  "actorId": "5ee5195fbea6150001758c40",
                  "actorName": "Stan",
                  "actorType": "USER",
                  "eventEntityType": "",
                  "actionDescription": "Simple script action for testing",
                  "policyId": "2nIOVtEW-iPbsEIi89-yDqJabc"
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionInstance"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canRunAutomationActions"
            ]
          }
        ],
        "summary": "Run an automation action",
        "tags": [
          "Action History"
        ]
      }
    },
    "/api/automation/actioninstances/{actionInstanceId}": {
      "delete": {
        "operationId": "deleteActionInstance",
        "parameters": [
          {
            "description": "Action Instance ID to delete",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "path",
            "name": "actionInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "From date filter in milliseconds (13-digit) to look up the Action Instance ID",
            "example": 1706713140000,
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "To date filter in milliseconds (13-digit) to look up the Action Instance ID",
            "example": 1706713140000,
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "deletedDocumentsCount": "2"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canDeleteAutomationActionHistory"
            ]
          }
        ],
        "summary": "Delete an automation action instance",
        "tags": [
          "Action History"
        ]
      },
      "get": {
        "operationId": "getActionInstance",
        "parameters": [
          {
            "description": "Action Instance ID to get action instance details",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "path",
            "name": "actionInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Window size filter in milliseconds (to compute the from date) to get the action instance details",
            "example": 10000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "To date filter in milliseconds (13-digit) to get the action instance details",
            "example": 1706713140000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actionInstanceId": "fqiH0HOgR1-4Ygoy5EDycw",
                  "actionId": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                  "actionName": "Hello World",
                  "type": "SCRIPT",
                  "status": "SUCCESS",
                  "returnCode": 0,
                  "errorMessage": "",
                  "createdDate": 1710162882369,
                  "startDate": 1710162882653,
                  "endDate": 1710162882826,
                  "eventId": "M3wuBxuaSDyecZJ7ICioiw",
                  "eventSpecificationId": "en0FW6XRWu7aRsD4055dbMLAuSU",
                  "problemText": "Test event",
                  "hostSnapshotId": "2nIOVtEW-iPbsEIi89-yDqJHi2g",
                  "inputParameters": [],
                  "outputParameters": [],
                  "metadata": [],
                  "targetSnapshotId": "jfSmhACY-Oa3a8zfjJxvOxJeDSk",
                  "externalSourceType": "",
                  "actorId": "5ee5195fbea6150001758c40",
                  "actorName": "Stan",
                  "actorType": "USER",
                  "eventEntityType": "",
                  "actionDescription": "Simple script action for testing",
                  "policyId": "2nIOVtEW-iPbsEIi89-yDqJabc",
                  "output": "Hello world!"
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionInstance"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get action instance details",
        "tags": [
          "Action History"
        ]
      }
    },
    "/api/automation/actions": {
      "get": {
        "operationId": "getActions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                    "name": "Hello World",
                    "description": "Simple script action for testing",
                    "type": "SCRIPT",
                    "fields": [
                      {
                        "name": "subtype",
                        "description": "script subtype",
                        "encoding": "base64",
                        "value": "YmFzaA==",
                        "secured": false
                      },
                      {
                        "name": "script_ssh",
                        "description": "script content",
                        "encoding": "base64",
                        "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                        "secured": false
                      },
                      {
                        "name": "timeout",
                        "description": "timeout of the action execution in seconds",
                        "encoding": "ascii",
                        "value": "",
                        "secured": false
                      }
                    ],
                    "inputParameters": [],
                    "tags": [
                      "Test"
                    ],
                    "createdAt": 1694442511.129923,
                    "modifiedAt": 1703191040.321448
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all automation actions",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/actions/tags": {
      "get": {
        "operationId": "getActionsTags",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all the tags from all the non-builtin automation actions",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/actions/{id}": {
      "get": {
        "operationId": "getActionByID",
        "parameters": [
          {
            "description": "Automation action ID",
            "example": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                  "name": "Hello World",
                  "description": "Simple script action for testing",
                  "type": "SCRIPT",
                  "fields": [
                    {
                      "name": "subtype",
                      "description": "script subtype",
                      "encoding": "base64",
                      "value": "YmFzaA==",
                      "secured": false
                    },
                    {
                      "name": "script_ssh",
                      "description": "script content",
                      "encoding": "base64",
                      "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                      "secured": false
                    },
                    {
                      "name": "timeout",
                      "description": "timeout of the action execution in seconds",
                      "encoding": "ascii",
                      "value": "",
                      "secured": false
                    }
                  ],
                  "inputParameters": [],
                  "tags": [
                    "Test"
                  ],
                  "createdAt": 1694442511.129923,
                  "modifiedAt": 1703191040.321448
                },
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Automation action not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get an automation action by ID",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/ai/action/match": {
      "post": {
        "operationId": "getActionMatches",
        "parameters": [
          {
            "in": "query",
            "name": "targetSnapshotId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "CPU spends significant time waiting for input/output",
                "description": "Checks whether the system spends significant time waiting for input/output."
              },
              "schema": {
                "$ref": "#/components/schemas/ActionSearchSpace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "score": 0.12087341955930318,
                    "action": {
                      "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                      "name": "Hello World",
                      "description": "Simple script action for testing",
                      "type": "SCRIPT",
                      "fields": [
                        {
                          "name": "subtype",
                          "description": "script subtype",
                          "encoding": "base64",
                          "value": "YmFzaA==",
                          "secured": false
                        },
                        {
                          "name": "script_ssh",
                          "description": "script content",
                          "encoding": "base64",
                          "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                          "secured": false
                        },
                        {
                          "name": "timeout",
                          "description": "timeout of the action execution in seconds",
                          "encoding": "ascii",
                          "value": "",
                          "secured": false
                        }
                      ],
                      "inputParameters": [],
                      "tags": [
                        "sample"
                      ],
                      "createdAt": 1694442511.129923,
                      "modifiedAt": 1703191040.321448
                    },
                    "color": "low",
                    "confidence": "low",
                    "aiEngine": "NLP"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/ActionMatch"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get actions from event matching data",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/parameters/dynamic": {
      "put": {
        "operationId": "resolve",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "eventId": "7UPTIakhR3uVaMnSQuG3TA",
                "timestamp": 1710168530000,
                "parameters": [
                  {
                    "name": "Application name",
                    "tagName": "application.name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/GetDynamicParameterValues"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "eventId": "7UPTIakhR3uVaMnSQuG3TA",
                  "timestamp": 1710168530000,
                  "parameters": [
                    {
                      "name": "Application name",
                      "tagName": "application.name",
                      "resolvedValue": "[\"Demo Application\"]"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/GetDynamicParameterValues"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canRunAutomationActions"
            ]
          }
        ],
        "summary": "Resolve dynamic parameter values",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/parameters/dynamic/catalog": {
      "get": {
        "operationId": "getDynamicParametersTagCatalog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tagTree": [
                    {
                      "label": "Application",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Name",
                          "icon": "lib_application",
                          "tagName": "application.name",
                          "queryable": true,
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    }
                  ],
                  "tags": [
                    {
                      "name": "application.name",
                      "label": "Name",
                      "type": "STRING_SET",
                      "description": null,
                      "canApplyToSource": true,
                      "canApplyToDestination": true,
                      "idTag": false
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get tag catalog for dynamic parameters",
        "tags": [
          "Action Catalog"
        ]
      }
    },
    "/api/automation/policies": {
      "get": {
        "operationId": "getPolicies",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "a14700b0-401b-47eb-a751-deda0035fde3",
                    "name": "Policy for test",
                    "description": "Policy for test",
                    "trigger": {
                      "type": "customEvent",
                      "id": "C3Ha8PffQHfJ0Hk6",
                      "name": "Test Event"
                    },
                    "typeConfigurations": [
                      {
                        "name": "manual",
                        "runnable": {
                          "type": "action",
                          "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                          "runConfiguration": {
                            "actions": [
                              {
                                "action": {
                                  "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                                  "name": "Hello World",
                                  "description": "Simple script action for testing",
                                  "type": "SCRIPT",
                                  "fields": [
                                    {
                                      "name": "subtype",
                                      "description": "script subtype",
                                      "encoding": "base64",
                                      "value": "YmFzaA==",
                                      "secured": false
                                    },
                                    {
                                      "name": "script_ssh",
                                      "description": "script content",
                                      "encoding": "base64",
                                      "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                                      "secured": false
                                    },
                                    {
                                      "name": "timeout",
                                      "description": "timeout of the action execution in seconds",
                                      "encoding": "ascii",
                                      "value": "",
                                      "secured": false
                                    }
                                  ],
                                  "inputParameters": [],
                                  "tags": [
                                    "Test",
                                    "idempotent"
                                  ],
                                  "createdAt": 1694442511.129923,
                                  "modifiedAt": 1703191040.321448
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Policy"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all automation policies",
        "tags": [
          "Policies"
        ]
      },
      "post": {
        "operationId": "addPolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "builtin-action-custom-event",
                "trigger": {
                  "name": "test event",
                  "type": "customEvent",
                  "id": "2X5r-Un18MIE59rE"
                },
                "typeConfigurations": [
                  {
                    "name": "manual",
                    "runnable": {
                      "type": "action",
                      "id": "c5ba4453-0bc2-3c3e-bdbe-b3ce68239145",
                      "runConfiguration": {
                        "actions": [
                          {
                            "action": {
                              "id": "c5ba4453-0bc2-3c3e-bdbe-b3ce68239145"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "a14700b0-401b-47eb-a751-deda0035fde3",
                  "name": "Policy for test",
                  "description": "Policy for test",
                  "trigger": {
                    "type": "customEvent",
                    "id": "C3Ha8PffQHfJ0Hk6",
                    "name": "Test Event"
                  },
                  "typeConfigurations": [
                    {
                      "name": "manual",
                      "runnable": {
                        "type": "action",
                        "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                        "runConfiguration": {
                          "actions": [
                            {
                              "action": {
                                "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                                "name": "Hello World",
                                "description": "Simple script action for testing",
                                "type": "SCRIPT",
                                "fields": [
                                  {
                                    "name": "subtype",
                                    "description": "script subtype",
                                    "encoding": "base64",
                                    "value": "YmFzaA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "script_ssh",
                                    "description": "script content",
                                    "encoding": "base64",
                                    "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "timeout",
                                    "description": "timeout of the action execution in seconds",
                                    "encoding": "ascii",
                                    "value": "",
                                    "secured": false
                                  }
                                ],
                                "inputParameters": [],
                                "tags": [
                                  "Test"
                                ],
                                "createdAt": 1694442511.129923,
                                "modifiedAt": 1703191040.321448
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Invalid request body"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAutomationPolicies"
            ]
          }
        ],
        "summary": "Create an automation policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/api/automation/policies/bulk": {
      "post": {
        "operationId": "addPolicies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Policy"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAutomationPolicies"
            ]
          }
        ],
        "summary": "Create automation policies",
        "tags": [
          "Policies"
        ]
      }
    },
    "/api/automation/policies/tags": {
      "get": {
        "operationId": "getPoliciesTags",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all the tags from all the automation policies",
        "tags": [
          "Policies"
        ]
      }
    },
    "/api/automation/policies/{id}": {
      "delete": {
        "operationId": "deletePolicy",
        "parameters": [
          {
            "description": "Automation policy ID",
            "example": "a14700b0-401b-47eb-a751-deda0035fde3",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Automation policy successfully deleted"
          },
          "400": {
            "description": "Automation policy does not exist"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAutomationPolicies"
            ]
          }
        ],
        "summary": "Deletes an automation policy",
        "tags": [
          "Policies"
        ]
      },
      "get": {
        "operationId": "getPolicyByID",
        "parameters": [
          {
            "description": "Automation policy ID",
            "example": "a14700b0-401b-47eb-a751-deda0035fde3",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "a14700b0-401b-47eb-a751-deda0035fde3",
                  "name": "Policy for test",
                  "description": "Policy for test",
                  "trigger": {
                    "type": "customEvent",
                    "id": "C3Ha8PffQHfJ0Hk6",
                    "name": "Test Event"
                  },
                  "typeConfigurations": [
                    {
                      "name": "manual",
                      "runnable": {
                        "type": "action",
                        "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                        "runConfiguration": {
                          "actions": [
                            {
                              "action": {
                                "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                                "name": "Hello World",
                                "description": "Simple script action for testing",
                                "type": "SCRIPT",
                                "fields": [
                                  {
                                    "name": "subtype",
                                    "description": "script subtype",
                                    "encoding": "base64",
                                    "value": "YmFzaA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "script_ssh",
                                    "description": "script content",
                                    "encoding": "base64",
                                    "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "timeout",
                                    "description": "timeout of the action execution in seconds",
                                    "encoding": "ascii",
                                    "value": "",
                                    "secured": false
                                  }
                                ],
                                "inputParameters": [],
                                "tags": [
                                  "Test"
                                ],
                                "createdAt": 1694442511.129923,
                                "modifiedAt": 1703191040.321448
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Automation policy not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get an automation policy by ID",
        "tags": [
          "Policies"
        ]
      },
      "put": {
        "operationId": "updatePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "builtin-action-custom-event",
                "trigger": {
                  "name": "test event",
                  "type": "customEvent",
                  "id": "2X5r-Un18MIE59rE"
                },
                "typeConfigurations": [
                  {
                    "name": "manual",
                    "runnable": {
                      "type": "action",
                      "id": "c5ba4453-0bc2-3c3e-bdbe-b3ce68239145",
                      "runConfiguration": {
                        "actions": [
                          {
                            "action": {
                              "id": "c5ba4453-0bc2-3c3e-bdbe-b3ce68239145"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "a14700b0-401b-47eb-a751-deda0035fde3",
                  "name": "Policy for test",
                  "description": "Policy for test",
                  "trigger": {
                    "type": "customEvent",
                    "id": "C3Ha8PffQHfJ0Hk6",
                    "name": "Test Event"
                  },
                  "typeConfigurations": [
                    {
                      "name": "manual",
                      "runnable": {
                        "type": "action",
                        "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                        "runConfiguration": {
                          "actions": [
                            {
                              "action": {
                                "id": "d473c1b0-0740-4d08-95fe-31e5d0a9faff",
                                "name": "Hello World",
                                "description": "Simple script action for testing",
                                "type": "SCRIPT",
                                "fields": [
                                  {
                                    "name": "subtype",
                                    "description": "script subtype",
                                    "encoding": "base64",
                                    "value": "YmFzaA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "script_ssh",
                                    "description": "script content",
                                    "encoding": "base64",
                                    "value": "ZWNobyBoZWxsbyB3b3JsZA==",
                                    "secured": false
                                  },
                                  {
                                    "name": "timeout",
                                    "description": "timeout of the action execution in seconds",
                                    "encoding": "ascii",
                                    "value": "",
                                    "secured": false
                                  }
                                ],
                                "inputParameters": [],
                                "tags": [
                                  "Test"
                                ],
                                "createdAt": 1694442511.129923,
                                "modifiedAt": 1703191040.321448
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Invalid request body"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAutomationPolicies"
            ]
          }
        ],
        "summary": "Updates an automation policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/api/business-monitoring/activities": {
      "post": {
        "operationId": "getActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetActivities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursorPaginatedBusinessActivityItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Business Activities",
        "tags": [
          "Business Monitoring"
        ]
      }
    },
    "/api/business-monitoring/activities/csv": {
      "post": {
        "operationId": "getActivitiesCsv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetActivities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessActivity"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Download Business Activities",
        "tags": [
          "Business Monitoring"
        ]
      }
    },
    "/api/business-monitoring/business-perspectives": {
      "get": {
        "operationId": "getBusinessPerspectives",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "gBwNFIbjS6Ozwt0a12regg",
                    "label": "biz-perspective",
                    "name": "biz-perspective",
                    "description": "This is an example business perspective",
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "EXPRESSION",
                          "logicalOperator": "AND",
                          "elements": [
                            {
                              "type": "EXPRESSION",
                              "logicalOperator": "OR",
                              "elements": [
                                {
                                  "type": "TAG_FILTER",
                                  "name": "service.name",
                                  "stringValue": "my-service-1",
                                  "numberValue": null,
                                  "booleanValue": null,
                                  "key": null,
                                  "value": "my-service-1",
                                  "operator": "EQUALS",
                                  "entity": "DESTINATION"
                                },
                                {
                                  "type": "TAG_FILTER",
                                  "name": "service.name",
                                  "stringValue": "my-service-2",
                                  "numberValue": null,
                                  "booleanValue": null,
                                  "key": null,
                                  "value": "my-service-2",
                                  "operator": "EQUALS",
                                  "entity": "DESTINATION"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerspectiveConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all business perspectives",
        "tags": [
          "Business Monitoring"
        ]
      },
      "post": {
        "operationId": "createBusinessPerspective",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "label": "biz-perspective",
                "name": "biz-perspective",
                "description": "This is an example business perspective",
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "EXPRESSION",
                          "logicalOperator": "OR",
                          "elements": [
                            {
                              "type": "TAG_FILTER",
                              "name": "service.name",
                              "stringValue": "my-service-1",
                              "numberValue": null,
                              "booleanValue": null,
                              "key": null,
                              "value": "my-service-1",
                              "operator": "EQUALS",
                              "entity": "DESTINATION"
                            },
                            {
                              "type": "TAG_FILTER",
                              "name": "service.name",
                              "stringValue": "my-service-2",
                              "numberValue": null,
                              "booleanValue": null,
                              "key": null,
                              "value": "my-service-2",
                              "operator": "EQUALS",
                              "entity": "DESTINATION"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/NewBusinessPerspectiveConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "gBwNFIbjS6Ozwt0a12regg",
                  "label": "biz-perspective",
                  "name": "biz-perspective",
                  "description": "This is an example business perspective",
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": [
                          {
                            "type": "EXPRESSION",
                            "logicalOperator": "OR",
                            "elements": [
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-1",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-1",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              },
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-2",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-2",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerspectiveConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Create business perspective",
        "tags": [
          "Business Monitoring"
        ]
      }
    },
    "/api/business-monitoring/business-perspectives/{id}": {
      "delete": {
        "operationId": "deleteBusinessPerspective",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Delete business perspective",
        "tags": [
          "Business Monitoring"
        ]
      },
      "get": {
        "operationId": "getBusinessPerspective",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "gBwNFIbjS6Ozwt0a12regg",
                  "label": "biz-perspective",
                  "name": "biz-perspective",
                  "description": "This is an example business perspective",
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": [
                          {
                            "type": "EXPRESSION",
                            "logicalOperator": "OR",
                            "elements": [
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-1",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-1",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              },
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-2",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-2",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerspectiveConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get business perspective",
        "tags": [
          "Business Monitoring"
        ]
      },
      "put": {
        "operationId": "updateBusinessPerspective",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "label": "biz-perspective",
                "name": "biz-perspective",
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "EXPRESSION",
                          "logicalOperator": "OR",
                          "elements": [
                            {
                              "type": "TAG_FILTER",
                              "name": "service.name",
                              "stringValue": "my-service-1",
                              "numberValue": null,
                              "booleanValue": null,
                              "key": null,
                              "value": "my-service-1",
                              "operator": "EQUALS",
                              "entity": "DESTINATION"
                            },
                            {
                              "type": "TAG_FILTER",
                              "name": "service.name",
                              "stringValue": "my-service-2",
                              "numberValue": null,
                              "booleanValue": null,
                              "key": null,
                              "value": "my-service-2",
                              "operator": "EQUALS",
                              "entity": "DESTINATION"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/UpdatedBusinessPerspectiveConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "gBwNFIbjS6Ozwt0a12regg",
                  "label": "biz-perspective",
                  "name": "biz-perspective",
                  "description": "This is an example business perspective",
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": [
                          {
                            "type": "EXPRESSION",
                            "logicalOperator": "OR",
                            "elements": [
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-1",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-1",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              },
                              {
                                "type": "TAG_FILTER",
                                "name": "service.name",
                                "stringValue": "my-service-2",
                                "numberValue": null,
                                "booleanValue": null,
                                "key": null,
                                "value": "my-service-2",
                                "operator": "EQUALS",
                                "entity": "DESTINATION"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerspectiveConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Update business perspective",
        "tags": [
          "Business Monitoring"
        ]
      }
    },
    "/api/business-monitoring/catalog": {
      "get": {
        "operationId": "getBusinessTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tagTree": [
                    {
                      "label": "Region or Environment",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Zone",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Agent Zone",
                              "tagName": "agent.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 Zone",
                              "tagName": "aws.ec2.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Azure Zone",
                              "tagName": "azure.zone",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        },
                        {
                          "label": "Cloud",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Aws Arn",
                              "tagName": "aws.arn",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 Ipv4",
                              "tagName": "aws.ec2.ipv4",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 PublicName",
                              "tagName": "aws.ec2.publicName",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 Tag",
                              "tagName": "aws.ec2.tag",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 Zone",
                              "tagName": "aws.ec2.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Ecs Cluster Name",
                              "tagName": "aws.ecs.cluster.name",
                              "type": "TAG"
                            },
                            {
                              "label": "Azure Zone",
                              "tagName": "azure.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Gce Tag",
                              "tagName": "gce.tag",
                              "type": "TAG"
                            },
                            {
                              "label": "Gce Zone",
                              "tagName": "gce.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Cloud Provider",
                              "tagName": "cloud.provider",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        },
                        {
                          "label": "Host",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Http Host",
                              "tagName": "call.http.host",
                              "type": "TAG"
                            },
                            {
                              "label": "Host Fqdn",
                              "tagName": "host.fqdn",
                              "type": "TAG"
                            },
                            {
                              "label": "Host Ip",
                              "tagName": "host.ip",
                              "type": "TAG"
                            },
                            {
                              "label": "Host Name",
                              "tagName": "host.name",
                              "type": "TAG"
                            },
                            {
                              "label": "Host Zone",
                              "tagName": "host.zone",
                              "type": "TAG"
                            },
                            {
                              "label": "Jboss Node Name",
                              "tagName": "jboss.node.name",
                              "type": "TAG"
                            },
                            {
                              "label": "Kubernetes Cluster Name",
                              "tagName": "kubernetes.cluster.name",
                              "type": "TAG"
                            },
                            {
                              "label": "Kubernetes Node Name",
                              "tagName": "kubernetes.node.name",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    },
                    {
                      "label": "custom",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "HTTP",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Http Header",
                              "tagName": "call.http.header",
                              "type": "TAG"
                            },
                            {
                              "label": "Http Params",
                              "tagName": "call.http.params",
                              "type": "TAG"
                            },
                            {
                              "label": "Http PathTemplate",
                              "tagName": "call.http.pathTemplate",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        },
                        {
                          "label": "Miscellaneous",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Agent Tag",
                              "tagName": "agent.tag",
                              "type": "TAG"
                            },
                            {
                              "label": "Ec2 Tag",
                              "tagName": "aws.ec2.tag",
                              "type": "TAG"
                            },
                            {
                              "label": "Call Tag",
                              "tagName": "call.tag",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        },
                        {
                          "label": "Platform",
                          "description": null,
                          "icon": null,
                          "children": [
                            {
                              "label": "Docker Label",
                              "tagName": "docker.label",
                              "type": "TAG"
                            },
                            {
                              "label": "Kubernetes Label",
                              "tagName": "kubernetes.label",
                              "type": "TAG"
                            },
                            {
                              "label": "Kubernetes Deployment Label",
                              "tagName": "kubernetes.deployment.label",
                              "type": "TAG"
                            },
                            {
                              "label": "Kubernetes Pod Label",
                              "tagName": "kubernetes.pod.label",
                              "type": "TAG"
                            },
                            {
                              "label": "Openshift Deploymentconfig Label",
                              "tagName": "openshift.deploymentconfig.label",
                              "type": "TAG"
                            }
                          ],
                          "type": "LEVEL",
                          "queryable": false
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    }
                  ],
                  "tags": []
                },
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get business tag catalog",
        "tags": [
          "Business Monitoring"
        ]
      }
    },
    "/api/custom-dashboard": {
      "get": {
        "description": "Get all accessible custom dashboards details.",
        "operationId": "getCustomDashboards",
        "parameters": [
          {
            "description": "query",
            "example": "BeeInstana",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "pageSize",
            "example": 2,
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "page",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "gBtvG96xRpScauwsclG-KA",
                    "title": "BeeInstana - aggregator",
                    "annotations": [
                      "SHARED"
                    ]
                  },
                  {
                    "id": "UtaUyPjGSTOAmPFICSbwqw",
                    "title": "BeeInstana - alerting",
                    "annotations": [
                      "SHARED"
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomDashboardPreview"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get accessible custom dashboards",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "post": {
        "operationId": "addCustomDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomDashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "When attempting to share dashboards without the canCreatePublicCustomDashboards permission."
          },
          "422": {
            "description": "When the custom dashboard payload is invalid."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Add custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/shareable-api-tokens": {
      "get": {
        "description": "Get all API tokens that have access to shareable custom dashboards.",
        "operationId": "getShareableApiTokens",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "foJfJVpyS5eAQAhfxSRctw",
                    "name": "New API Token"
                  },
                  {
                    "id": "O_OKWG48S2WemaL_e3j_vQ",
                    "name": "New API Token"
                  },
                  {
                    "id": "ATBzggrzTE-aRpUMBLmG9g",
                    "name": "New API Token"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardApiToken"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "CreatePublicCustomDashboards"
            ]
          }
        ],
        "summary": "Get all API tokens.",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/shareable-users": {
      "get": {
        "description": "Get all users (without invitations) that have access to shareable custom dashboards.",
        "operationId": "getShareableUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "63721be55108940001ead6fa",
                    "email": "JohnMcClane@instana.com",
                    "fullName": "John McClane"
                  },
                  {
                    "id": "6360a5ad034a430001c500d0",
                    "email": "HansGruber@instana.com",
                    "fullName": "Hans Gruber"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBasicResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "CreatePublicCustomDashboards"
            ]
          }
        ],
        "summary": "Get all users (without invitations).",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/{customDashboardId}": {
      "delete": {
        "operationId": "deleteCustomDashboard",
        "parameters": [
          {
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Custom dashboard successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Remove custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "get": {
        "description": "Get all Custom Dashboard Info for specified customDashboardId.",
        "operationId": "getCustomDashboard",
        "parameters": [
          {
            "description": "customDashboardId",
            "example": "alHaYV5aSkKku_wcg53teQ",
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "alHaYV5aSkKku_wcg53teQ",
                  "title": "{string}",
                  "accessRules": [
                    {
                      "accessType": "READ_WRITE",
                      "relationType": "USER",
                      "relatedId": "5ee8a3e8cd70020001ecb007"
                    },
                    {
                      "accessType": "READ",
                      "relationType": "GLOBAL",
                      "relatedId": null
                    }
                  ],
                  "widgets": [
                    {
                      "id": "dIxxq0LCdqZomve2",
                      "title": "SUM of bytes received for a particular container",
                      "width": 2,
                      "height": 4,
                      "x": 0,
                      "y": 0,
                      "type": "bigNumber",
                      "config": {
                        "formatter": "bytes.detailed",
                        "comparisonDecreaseColor": "greenish",
                        "metricConfiguration": {
                          "metric": "network.rx.bytes",
                          "timeShift": 0,
                          "tagFilterExpression": {
                            "name": "docker.containerId",
                            "type": "TAG_FILTER",
                            "value": "faaa7f1732d16faa7fc27a0cb49fdf5c07716f3d3be1315e20f24d099657bbe0",
                            "entity": "NOT_APPLICABLE",
                            "operator": "EQUALS"
                          },
                          "aggregation": "SUM",
                          "source": "INFRASTRUCTURE_METRICS",
                          "crossSeriesAggregation": "SUM",
                          "type": "docker"
                        },
                        "comparisonIncreaseColor": "redish"
                      }
                    }
                  ],
                  "writable": true
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "put": {
        "operationId": "updateCustomDashboard",
        "parameters": [
          {
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomDashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "When attempting to share dashboards without the canCreatePublicCustomDashboards permission."
          },
          "422": {
            "description": "When the custom dashboard payload is invalid."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Update custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/events": {
      "get": {
        "description": "Get all Events within a timeframe. The timeframe is defined as `[from, to]` or `[to - windowSize, to]`. ",
        "operationId": "getEvents",
        "parameters": [
          {
            "description": "A Unix timestamp representing the end of the requested timeframe. Defaults to the current system time",
            "example": 1704096000000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The size of the requested timeframe, in milliseconds, relative to the 'to' parameter. Defaults to 10 minutes (600000 milliseconds) if neither 'windowSize' nor 'from' are provided. Resulting timeframe range = [to - windowSize, to]",
            "example": 600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "A Unix timestamp representing the start of the requested timeframe. Can be used as an alternative to 'windowSize' to define the timeframe. If both 'from' and 'windowSize' are provided, 'from' takes precedence. Resulting timeframe range = [from, to]",
            "example": 1672560000000,
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Flag to filter the results to only show events with state changes within the timeframe.",
            "example": true,
            "in": "query",
            "name": "filterEventUpdates",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Flag to filter the results to exclude events that have been triggered before the timeframe. This also filters out events with state changes within the timeframe if the events' start times begin before the timeframe.",
            "example": true,
            "in": "query",
            "name": "excludeTriggeredBefore",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "deprecated": true,
            "description": "Flag to filter the results to include Agent Monitoring Issues.",
            "example": true,
            "in": "query",
            "name": "includeAgentMonitoringIssues",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "deprecated": true,
            "description": "Flag to filter the results to include Kubernetes Info Events.",
            "example": true,
            "in": "query",
            "name": "includeKubernetesInfoEvents",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A string representing an event type - an INCIDENT, ISSUE, or CHANGE. This query can be repeated to use multiple filters.",
            "example": "INCIDENT",
            "in": "query",
            "name": "eventTypeFilters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCIDENT",
                  "ISSUE",
                  "CHANGE"
                ]
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "eventId": "gM73SycATrOFMcL5qspByQ",
                    "start": 1706774419000,
                    "end": 1706783931000,
                    "type": "incident",
                    "state": "open",
                    "problem": "New Event-test-01",
                    "detail": "test",
                    "severity": 5,
                    "entityName": ".NET App",
                    "entityLabel": "powershell.exe",
                    "metrics": [
                      {
                        "metricName": "threads.lck_crs",
                        "snapshotId": "zqEuPom1v7YK61jRU8cEpRhCI1w",
                        "entityId": {
                          "steadyId": "55428",
                          "pluginId": "com.instana.forge.infrastructure.runtime.clr.ClrRuntimePlatform",
                          "host": "00:15:5d:ff:fe:98:d1:f6"
                        }
                      }
                    ],
                    "entityType": "INFRASTRUCTURE",
                    "fixSuggestion": "test",
                    "snapshotId": "zqEuPom1v7YK61jRU8cEpRhCI1w",
                    "recentEvents": [
                      {
                        "eventId": "ZzaptuusSOutGLGmqD-wzA"
                      },
                      {
                        "eventId": "oeqTbltKQw6pp1OJi_QH_Q"
                      },
                      {
                        "eventId": "Cnv-8y96SOW2CzZbn7SK7Q"
                      },
                      {
                        "eventId": "vidr6ZX9QmqhtdvBrYFR3Q"
                      },
                      {
                        "eventId": "NWfYJEUjSLSPJbxfCEW6kA"
                      },
                      {
                        "eventId": "iJ2Bm8Y5Qq-Fh-IAwAnRqQ"
                      },
                      {
                        "eventId": "kHiCKKByTdW0sMhhjxvgQg"
                      },
                      {
                        "eventId": "w-hl_-8NQXKEIemcNR5ouw"
                      },
                      {
                        "eventId": "Vn0weJOGROaFKwRtqNDaeg"
                      },
                      {
                        "eventId": "Z9yz38EOR3aR0rYlBN3oRQ"
                      },
                      {
                        "eventId": "h7-N1PT9Sim4dCbyM-sf3g"
                      },
                      {
                        "eventId": "nnWCZ2L2STi8lXFbPNUgUg"
                      },
                      {
                        "eventId": "j1NlsfUYTz69t3dqSMekPQ"
                      }
                    ],
                    "probableCause": [],
                    "probableCauseMetadata": {}
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all Events",
        "tags": [
          "Events"
        ]
      },
      "post": {
        "description": "Gets a set of events by their IDs. ",
        "operationId": "getEventsByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                "VOMNl0OgRv2HXlsR0iUYGg",
                "h66yezD9Sfi5YNh_cmeG7Q"
              ],
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "eventId": "VOMNl0OgRv2HXlsR0iUYGg",
                    "start": 1722027687446,
                    "end": 1722028317446,
                    "type": "issue",
                    "state": "open",
                    "problem": "Calls are slower than usual",
                    "detail": "Calls are slower or equal to 50 ms based on latency (90th).",
                    "severity": 5,
                    "entityName": "Endpoint",
                    "entityLabel": "POST /integration/slack/event",
                    "metrics": [
                      {
                        "metricAggregation": "P90",
                        "metricName": "latency"
                      }
                    ],
                    "entityType": "ENDPOINT",
                    "fixSuggestion": "Calls are slower or equal to 50 ms based on latency (90th).",
                    "snapshotId": "A-fDmFeA5Mzl3yIs8hXs5Megwz8",
                    "endpointId": "A-fDmFeA5Mzl3yIs8hXs5Megwz8",
                    "endpointServiceId": "fc3b86a089d24ed3b7d50ac3a7639c682101d6b9",
                    "applicationId": "qOlcrsSlS_eWLGnBjooqWA"
                  },
                  {
                    "eventId": "h66yezD9Sfi5YNh_cmeG7Q",
                    "start": 1721764921276,
                    "end": 1722028014839,
                    "type": "issue",
                    "state": "open",
                    "problem": "_RP Static camunda Archive Invoice for k8s-demo",
                    "detail": "Calls are slower or equal to the expectation based on latency (90th).",
                    "severity": 5,
                    "entityName": "Endpoint",
                    "entityLabel": "Archive Invoice",
                    "metrics": [
                      {
                        "metricAggregation": "P90",
                        "metricName": "latency"
                      }
                    ],
                    "entityType": "ENDPOINT",
                    "fixSuggestion": "Calls are slower or equal to the expectation based on latency (90th).",
                    "snapshotId": "MN1thidNpDc15zM-NP4ilfJs87k",
                    "endpointId": "MN1thidNpDc15zM-NP4ilfJs87k",
                    "endpointServiceId": "1f0ee2b46a33c2dbfedfec9c45ad81ff1c8e7e37",
                    "applicationId": "acfRC1IqTVi41OMLAJU4Cw"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested events do not exist."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Events by IDs",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/events/agent-monitoring-events": {
      "get": {
        "description": "Gets all Agent Monitoring Events within a timeframe. The timeframe is defined as `[from, to]` or `[to - windowSize, to]`. ",
        "operationId": "agentMonitoringEvents",
        "parameters": [
          {
            "description": "A Unix timestamp representing the end of the requested timeframe. Defaults to the current system time",
            "example": 1704096000000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The size of the requested timeframe, in milliseconds, relative to the 'to' parameter. Defaults to 10 minutes (600000 milliseconds) if neither 'windowSize' nor 'from' are provided. Resulting timeframe range = [to - windowSize, to]",
            "example": 600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "A Unix timestamp representing the start of the requested timeframe. Can be used as an alternative to 'windowSize' to define the timeframe. If both 'from' and 'windowSize' are provided, 'from' takes precedence. Resulting timeframe range = [from, to]",
            "example": 1672560000000,
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Flag to filter the results to only show events with state changes within the timeframe.",
            "example": true,
            "in": "query",
            "name": "filterEventUpdates",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Flag to filter the results to exclude events that have been triggered before the timeframe. This also filters out events with state changes within the timeframe if the events' start times begin before the timeframe.",
            "example": true,
            "in": "query",
            "name": "excludeTriggeredBefore",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "eventId": "n8DamRZKSs6Z2f0wiZ9tVQ",
                    "start": 1707472014671,
                    "end": 1707472674671,
                    "type": "agent_monitoring_issue",
                    "state": "open",
                    "problem": "Monitoring issue: jvm_attach_generic",
                    "detail": "Our Agent observed a problem with monitoring the linked process. To resolve this issue, please check our docs (https://www.instana.com/docs/) for error code: jvm_attach_generic",
                    "severity": 5,
                    "entityName": "Process",
                    "entityLabel": "java",
                    "entityType": "INFRASTRUCTURE",
                    "fixSuggestion": "Our Agent observed a problem with monitoring the linked process. To resolve this issue, please check our docs (https://www.instana.com/docs/) for error code: jvm_attach_generic",
                    "snapshotId": "2fDFOytDpF4FYKrTdfwdlklDOPY"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Agent Monitoring Events",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/events/kubernetes-info-events": {
      "get": {
        "description": "Gets all Kubernetes Info Events within a timeframe. The timeframe is defined as `[from, to]` or `[to - windowSize, to]`. ",
        "operationId": "kubernetesInfoEvents",
        "parameters": [
          {
            "description": "A Unix timestamp representing the end of the requested timeframe. Defaults to the current system time",
            "example": 1704096000000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The size of the requested timeframe, in milliseconds, relative to the 'to' parameter. Defaults to 10 minutes (600000 milliseconds) if neither 'windowSize' nor 'from' are provided. Resulting timeframe range = [to - windowSize, to]",
            "example": 600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "A Unix timestamp representing the start of the requested timeframe. Can be used as an alternative to 'windowSize' to define the timeframe. If both 'from' and 'windowSize' are provided, 'from' takes precedence. Resulting timeframe range = [from, to]",
            "example": 1672560000000,
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Flag to filter the results to only show events with state changes within the timeframe.",
            "example": true,
            "in": "query",
            "name": "filterEventUpdates",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Flag to filter the results to exclude events that have been triggered before the timeframe. This also filters out events with state changes within the timeframe if the events' start times begin before the timeframe.",
            "example": true,
            "in": "query",
            "name": "excludeTriggeredBefore",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "eventId": "nOYcBAncQIyZHdVNnBRmzQ",
                    "start": 1707472297000,
                    "end": 1707472297000,
                    "type": "change",
                    "state": "closed",
                    "problem": "BackOff",
                    "detail": "Back-off pulling image \"gcr.io/kubernetes-helm/tiller:v2.14.1\"",
                    "severity": -2,
                    "entityName": "Kubernetes Pod",
                    "entityLabel": "kube-system/tiller-deploy-7bf78cdbf7-gnjg5 (pod)",
                    "entityType": "INFRASTRUCTURE",
                    "fixSuggestion": "Back-off pulling image \"gcr.io/kubernetes-helm/tiller:v2.14.1\"",
                    "snapshotId": "wTRNW3DaFeQhk7G3Cx5bKC5Psgk"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Kubernetes Info Events",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/events/settings/alertingChannels": {
      "get": {
        "description": "Gets all the alerting channels.",
        "operationId": "getAlertingChannels",
        "parameters": [
          {
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "example": "[YbcFlaG8k5oIkxD0, OYcbU9gdP6OTBThJ, qbhfsL9vTtlaBOAt]",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "18iiwkDxHD7_A4mIlouise",
                    "name": "Email Alert Channel",
                    "customEmailSubjectPrefix": null,
                    "emails": [
                      "youremail@email.com"
                    ],
                    "kind": "EMAIL"
                  },
                  {
                    "id": "1pFirIMvrZk9NO2R",
                    "name": "Stan Test Slack Channel",
                    "webhookUrl": "https://hooks.slack.com/testwebhook",
                    "iconUrl": "",
                    "channel": "team-stan-test-channel",
                    "emojiRendering": false,
                    "kind": "SLACK"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbstractIntegration"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Get all Alerting Channels",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/infos": {
      "get": {
        "description": "Gets the overview information of all alerting channels.",
        "operationId": "getAlertingChannelsOverview",
        "parameters": [
          {
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "example": "[YbcFlaG8k5oIkxD0, OYcbU9gdP6OTBThJ, qbhfsL9vTtlaBOAt]",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "qbhfsL9vTtlaBOAt",
                    "kind": "WEB_HOOK",
                    "name": "alert-response-generic-webhook",
                    "properties": {}
                  },
                  {
                    "id": "V_gYaoRFPe6S-T-l",
                    "kind": "OPS_GENIE",
                    "name": "OpsGenie QA",
                    "properties": {
                      "Alias": "",
                      "Tags": "k8s-test"
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationOverview"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Get Overview of Alerting Channels",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/test": {
      "put": {
        "description": "Sends a test alert to an alert channel. This is for testing if an potential alert channel is able to receive alerts from Instana.",
        "operationId": "sendTestAlerting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractIntegration"
              }
            }
          },
          "required": true,
          "x-example": "alertingChannelTestCall"
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Test Alerting Channel",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/{id}": {
      "delete": {
        "description": "Deletes an alert channel.",
        "operationId": "deleteAlertingChannel",
        "parameters": [
          {
            "description": "ID of the Alerting Channel to delete.",
            "example": "YbcFlaG8k5oIkxD0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the alert channel setting"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Delete Alerting Channel",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Gets an alerting channel.",
        "operationId": "getAlertingChannel",
        "parameters": [
          {
            "description": "ID of the Alerting Channel to get.",
            "example": "YbcFlaG8k5oIkxD0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "18iiwkDxHD7_A4mIlouise",
                  "name": "Email Alert Channel",
                  "customEmailSubjectPrefix": null,
                  "emails": [
                    "youremail@email.com"
                  ],
                  "kind": "EMAIL"
                },
                "schema": {
                  "$ref": "#/components/schemas/AbstractIntegration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Get Alerting Channel",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "description": "Updates an alerting channel.",
        "operationId": "putAlertingChannel",
        "parameters": [
          {
            "description": "ID of the Alerting Channel to update.",
            "example": "YbcFlaG8k5oIkxD0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractIntegration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "18iiwkDxHD7_A4mIlouise",
                  "name": "Email Alert Channel",
                  "customEmailSubjectPrefix": null,
                  "emails": [
                    "youremail@email.com"
                  ],
                  "kind": "EMAIL"
                },
                "schema": {
                  "$ref": "#/components/schemas/AbstractIntegration"
                }
              }
            },
            "description": "Updated the alert channel setting"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Failed updating the alert channel setting"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Update Alert Channel",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts": {
      "get": {
        "description": "Gets all Alert Configurations",
        "operationId": "getAlerts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "5GJXiK9aciVaBPnu",
                    "alertName": "CMH Alert Test",
                    "muteUntil": 9007199254740991,
                    "integrationIds": [
                      "GcqLyri-worP8sXX"
                    ],
                    "eventFilteringConfiguration": {
                      "query": "entity.host.fqdn:robot-shop-pink1.fyre.ibm.com",
                      "ruleIds": [
                        "roILHzyaMBRDZE3FxaeZ5T_wx4Q"
                      ],
                      "eventTypes": [],
                      "applicationAlertConfigIds": [],
                      "validVersion": 1
                    },
                    "customPayloadFields": [
                      {
                        "type": "staticString",
                        "key": "cmhtest",
                        "value": "cmhval"
                      }
                    ],
                    "lastUpdated": 1702590551696,
                    "invalid": false,
                    "alertChannelNames": [
                      "CMH Email test"
                    ],
                    "applicationNames": []
                  },
                  {
                    "id": "E8Z88ThbA7RDPgbz",
                    "alertName": "SQL Server Write txns Alert",
                    "muteUntil": 0,
                    "integrationIds": [
                      "Hrigl1epXxAc0Tym"
                    ],
                    "eventFilteringConfiguration": {
                      "query": null,
                      "ruleIds": [
                        "v1jc5yEjHRNbX8_i"
                      ],
                      "eventTypes": [],
                      "applicationAlertConfigIds": [],
                      "validVersion": 1
                    },
                    "customPayloadFields": [],
                    "lastUpdated": 1702590551748,
                    "invalid": false,
                    "alertChannelNames": [
                      "Servicenow Webhook Sunny"
                    ],
                    "applicationNames": []
                  },
                  {
                    "id": "Z9eXY8LOfTuAf43e",
                    "alertName": "IBM i All Alerts",
                    "muteUntil": 0,
                    "integrationIds": [],
                    "eventFilteringConfiguration": {
                      "query": "entity.ibmi.os.hostname:ut31p37.rch.stglabs.ibm.com AND event.text:*",
                      "ruleIds": [],
                      "eventTypes": [
                        "warning"
                      ],
                      "applicationAlertConfigIds": [],
                      "validVersion": 1
                    },
                    "customPayloadFields": [],
                    "lastUpdated": 1704894496752,
                    "invalid": false,
                    "alertChannelNames": [],
                    "applicationNames": []
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidatedAlertingConfiguration"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Get all Alert Configurations",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts/infos": {
      "get": {
        "operationId": "getAlertingConfigurationInfos",
        "parameters": [
          {
            "in": "query",
            "name": "integrationId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidatedAlertingChannelInputInfo"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All alerting configuration info",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts/{id}": {
      "delete": {
        "operationId": "deleteAlert",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete Alert Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Get a specific Alert Configuration by ID.",
        "operationId": "getAlert",
        "parameters": [
          {
            "description": "ID of a specific Alert Configuration to retrieve.",
            "example": "iSjG7UWK3Dy6bDUc",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "iSjG7UWK3Dy6bDUc",
                  "alertName": "test-email-alert",
                  "muteUntil": 0,
                  "integrationIds": [
                    "B1PdA6BUdA9JJRZG"
                  ],
                  "eventFilteringConfiguration": {
                    "query": "event.text:*BRUCE*",
                    "ruleIds": [],
                    "eventTypes": [
                      "warning",
                      "incident",
                      "critical"
                    ],
                    "applicationAlertConfigIds": [],
                    "validVersion": 1
                  },
                  "customPayloadFields": [],
                  "lastUpdated": 1718828552918
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertingConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Get Alert Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "putAlert",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertingConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertingConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Update Alert Configuration",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/application-alert-configs": {
      "get": {
        "description": "Gets all the Smart Alert Configurations pertaining to a specific application. Configurations are sorted by creation date in descending order.",
        "operationId": "findActiveApplicationAlertConfigs",
        "parameters": [
          {
            "description": "The ID of a specific Application.",
            "example": "IYS1XOEcTNiT1eOD8pxgXg",
            "in": "query",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of Smart Alert Configuration IDs. This allows fetching of a specific set of Configurations. This query can be repeated to use multiple IDs.",
            "example": "IYS1XOEcTNiT1eOD8pxgXg",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "Erroneous call rate is higher than normal",
                    "description": "The erroneous call rate is higher or equal to 4%.",
                    "boundaryScope": "ALL",
                    "applicationId": "IYS1XOEcTNiT1eOD8pxgXg",
                    "applications": {
                      "IYS1XOEcTNiT1eOD8pxgXg": {
                        "applicationId": "IYS1XOEcTNiT1eOD8pxgXg",
                        "inclusive": true,
                        "services": {}
                      }
                    },
                    "severity": 5,
                    "triggering": false,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "rule": {
                      "alertType": "errors",
                      "metricName": "errors",
                      "aggregation": "MEAN"
                    },
                    "threshold": {
                      "type": "staticThreshold",
                      "operator": ">=",
                      "value": 0.04,
                      "lastUpdated": 0
                    },
                    "alertChannelIds": [],
                    "granularity": 600000,
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "timeWindow": 600000
                    },
                    "evaluationType": "PER_AP",
                    "customPayloadFields": [],
                    "id": "A5VvSXR_SVG6z7YbnIHiHQ",
                    "created": 1707751873882,
                    "initialCreated": 1707751873882,
                    "readOnly": false,
                    "enabled": true,
                    "derivedFromGlobalAlert": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested application doesn't exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all Smart Alert Configs",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "post": {
        "description": "Creates a new Smart Alert Configuration.",
        "operationId": "createApplicationAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Calls are slower than usual",
                "description": "Calls are slower or equal to the expectation based on latency (90th).",
                "boundaryScope": "INBOUND",
                "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                "applications": {
                  "ZOi0te_ERE-mRm-9zsbwdg": {
                    "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                    "inclusive": true,
                    "services": {}
                  }
                },
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "endpoint.name",
                  "stringValue": null,
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": null,
                  "operator": "NOT_EMPTY",
                  "entity": "DESTINATION"
                },
                "includeInternal": false,
                "includeSynthetic": false,
                "rule": {
                  "alertType": "slowness",
                  "aggregation": "P90",
                  "metricName": "latency"
                },
                "threshold": {
                  "type": "historicBaseline",
                  "operator": ">=",
                  "seasonality": "DAILY",
                  "baseline": [
                    [
                      0,
                      1,
                      3
                    ],
                    [
                      600000,
                      1,
                      3
                    ]
                  ],
                  "deviationFactor": 3,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "evaluationType": "PER_AP",
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Calls are slower than usual",
                  "description": "Calls are slower or equal to the expectation based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                  "applications": {
                    "ZOi0te_ERE-mRm-9zsbwdg": {
                      "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "endpoint.name",
                    "stringValue": null,
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": null,
                    "operator": "NOT_EMPTY",
                    "entity": "DESTINATION"
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        1,
                        3
                      ],
                      [
                        600000,
                        1,
                        3
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "DKp0JArJRAiQIav9CoKSWQ",
                  "created": 1706617456952,
                  "initialCreated": 1706617456952,
                  "readOnly": false,
                  "enabled": true,
                  "derivedFromGlobalAlert": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Smart Alert Configuration created."
          },
          "400": {
            "description": "Invalid Configuration."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Create Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}": {
      "delete": {
        "description": "Deletes an Smart Alert Configuration.",
        "operationId": "deleteApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to delete.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Smart Alert Configuration deleted."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "get": {
        "description": "Gets a specific Smart Alert Configuration. This may return a deleted Configuration.",
        "operationId": "findApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to retrieve.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the Configuration was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1706617456952,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Calls are slower than usual",
                  "description": "Calls are slower or equal to the expectation based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                  "applications": {
                    "ZOi0te_ERE-mRm-9zsbwdg": {
                      "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "endpoint.name",
                    "stringValue": null,
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": null,
                    "operator": "NOT_EMPTY",
                    "entity": "DESTINATION"
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        1,
                        3
                      ],
                      [
                        600000,
                        1,
                        3
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "DKp0JArJRAiQIav9CoKSWQ",
                  "created": 1706617456952,
                  "initialCreated": 1706617456952,
                  "readOnly": false,
                  "enabled": true,
                  "derivedFromGlobalAlert": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "post": {
        "description": "Updates an existing Smart Alert Configuration.",
        "operationId": "updateApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to update.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Calls are slower than usual",
                "description": "Calls are slower or equal to the expectation based on latency (90th).",
                "boundaryScope": "INBOUND",
                "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                "applications": {
                  "ZOi0te_ERE-mRm-9zsbwdg": {
                    "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                    "inclusive": true,
                    "services": {}
                  }
                },
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "endpoint.name",
                  "stringValue": null,
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": null,
                  "operator": "NOT_EMPTY",
                  "entity": "DESTINATION"
                },
                "includeInternal": false,
                "includeSynthetic": false,
                "rule": {
                  "alertType": "slowness",
                  "aggregation": "P90",
                  "metricName": "latency"
                },
                "threshold": {
                  "type": "historicBaseline",
                  "operator": ">=",
                  "seasonality": "DAILY",
                  "baseline": [
                    [
                      0,
                      1,
                      3
                    ],
                    [
                      600000,
                      1,
                      3
                    ]
                  ],
                  "deviationFactor": 3,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "evaluationType": "PER_AP",
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Calls are slower than usual",
                  "description": "Calls are slower or equal to the expectation based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                  "applications": {
                    "ZOi0te_ERE-mRm-9zsbwdg": {
                      "applicationId": "ZOi0te_ERE-mRm-9zsbwdg",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "endpoint.name",
                    "stringValue": null,
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": null,
                    "operator": "NOT_EMPTY",
                    "entity": "DESTINATION"
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        1,
                        3
                      ],
                      [
                        600000,
                        1,
                        3
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "DKp0JArJRAiQIav9CoKSWQ",
                  "created": 1706617456952,
                  "initialCreated": 1706617456952,
                  "readOnly": false,
                  "enabled": true,
                  "derivedFromGlobalAlert": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Smart Alert Configuration updated."
          },
          "204": {
            "description": "Smart Alert Configuration did not change."
          },
          "400": {
            "description": "Invalid Application ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          },
          "500": {
            "description": "Internal error."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Update Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/disable": {
      "put": {
        "description": "Disables an Smart Alert Configuration.",
        "operationId": "disableApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to disable.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smart Alert Configuration disabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/enable": {
      "put": {
        "description": "Enables an Smart Alert Configuration.",
        "operationId": "enableApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to enable.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smart Alert Configuration enabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/restore/{created}": {
      "put": {
        "description": "Restores a deleted Smart Alert Configuration.",
        "operationId": "restoreApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to restore.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp representing the creation time of a specific Smart Alert Configuration.",
            "example": 1707726529124,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smart Alert Configuration restored."
          },
          "400": {
            "description": "Invalid Configuration provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Smart Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/update-baseline": {
      "post": {
        "description": "Recalculates and updates the historic baseline (static seasonal threshold) of a Configuration. The `LastUpdated` field of the Configuration is changed to the current time.",
        "operationId": "updateApplicationHistoricBaseline",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to recalculate.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Smart Alert Configuration baseline recalculated"
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Recalculate Smart Alert Config Baseline",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/versions": {
      "get": {
        "description": "Gets all versions of an Smart Alert Configuration. This may return deleted Configurations. Configurations are sorted by creation date in descending order.",
        "operationId": "findApplicationAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of a specific Smart Alert Configuration to retrieve.",
            "example": "DKp0JArJRAiQIav9CoKSWQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "DKp0JArJRAiQIav9CoKSWQ",
                    "created": 1706617456952,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "5ee8a3e8cd70020001ecb007",
                        "type": "USER",
                        "fullName": "Stan"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Smart Alert Config Versions",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/custom-payload-configurations": {
      "delete": {
        "description": "Deletes a Global Custom Payload Configuration",
        "operationId": "deleteCustomPayloadConfiguration",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Delete Custom Payload Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Returns All Global Custom Payload Configurations",
        "operationId": "getCustomPayloadConfigurations",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string",
              "default": "ALL",
              "description": "The type of Smart Alert that the custom payload is associated with.",
              "enum": [
                "ALL",
                "APPLICATION",
                "WEBSITE",
                "SYNTHETIC",
                "MOBILE_APP",
                "INFRA",
                "LOG"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "fields": [
                      {
                        "type": "dynamic",
                        "key": "zone",
                        "value": {
                          "tagName": "agent.zone",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "podName",
                        "value": {
                          "tagName": "kubernetes.pod.name",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "HostName",
                        "value": {
                          "tagName": "host.name",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "FQDN",
                        "value": {
                          "tagName": "host.fqdn",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "deploymentName",
                        "value": {
                          "tagName": "kubernetes.deployment.name",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "deploymentNamespace",
                        "value": {
                          "tagName": "kubernetes.deployment.namespace",
                          "key": null
                        }
                      },
                      {
                        "type": "dynamic",
                        "key": "KafkaClusterName",
                        "value": {
                          "tagName": "kafka.cluster.name",
                          "key": null
                        }
                      },
                      {
                        "type": "staticString",
                        "key": "global_custom_payload",
                        "value": "42+1"
                      },
                      {
                        "type": "staticString",
                        "key": "string",
                        "value": "customValue"
                      },
                      {
                        "type": "staticString",
                        "key": "string",
                        "value": "globalCustomValue-1"
                      },
                      {
                        "type": "staticString",
                        "key": "string",
                        "value": "globalCustomValue-2"
                      },
                      {
                        "type": "staticString",
                        "key": "string",
                        "value": "customValue"
                      }
                    ],
                    "lastUpdated": 1723212859513
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/CustomPayloadWithLastUpdated"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized Request: API Token is invalid."
          },
          "403": {
            "description": "Forbidden Request"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Retrieve Global Custom Payload Configurations",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "description": "Create or Update Global Custom Payload Configuration",
        "operationId": "upsertCustomPayloadConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "fields": [
                  {
                    "type": "staticString",
                    "key": "string",
                    "value": "customValue"
                  },
                  {
                    "type": "dynamic",
                    "key": "string",
                    "value": {
                      "tagName": "agent.zone",
                      "key": "string"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomPayloadConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "fields": [
                      {
                        "type": "staticString",
                        "key": "string",
                        "value": "customValue"
                      },
                      {
                        "type": "dynamic",
                        "key": "string",
                        "value": {
                          "tagName": "agent.zone",
                          "key": "string"
                        }
                      }
                    ],
                    "lastUpdated": 1723212859513
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomPayloadWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized Request: API Token is invalid."
          },
          "403": {
            "description": "Forbidden Request"
          },
          "422": {
            "description": "Unable to process request, request data is invalid."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Manage Global Custom Payload Configuration",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/custom-payload-configurations/catalog": {
      "get": {
        "operationId": "getCustomPayloadTagCatalog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Get tag catalog for custom payload in alerting",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in": {
      "get": {
        "operationId": "getBuiltInEventSpecifications",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}": {
      "delete": {
        "operationId": "deleteBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete built-in event specification",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "operationId": "getBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecification"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Built-in event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}/disable": {
      "post": {
        "operationId": "disableBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}/enable": {
      "post": {
        "operationId": "enableBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom": {
      "get": {
        "description": " This API helps in getting all the custom event specifications.",
        "operationId": "getCustomEventSpecifications",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "Yojfl6Yn9SXaFhJG",
                    "name": "DP_Domain_MemoryUsage",
                    "entityType": "ibmDataPowerDomain",
                    "query": null,
                    "triggering": true,
                    "description": "Average Memory Usage for the DP Domain >= 0%",
                    "expirationTime": 60000,
                    "enabled": true,
                    "rules": [
                      {
                        "ruleType": "threshold",
                        "metricName": "currentMemUsage",
                        "metricPattern": null,
                        "rollup": 0,
                        "window": 600000,
                        "aggregation": "avg",
                        "conditionOperator": ">=",
                        "conditionValue": 0,
                        "severity": 5
                      }
                    ],
                    "ruleLogicalOperator": "AND",
                    "lastUpdated": 1670404707763,
                    "validVersion": 1,
                    "actions": null,
                    "migrated": false,
                    "applicationAlertConfigId": null,
                    "deleted": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All custom event specifications",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "operationId": "postCustomEventSpecification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEventSpecification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create new custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint creates a new Custom Event Specification.\n\n## Mandatory Parameters:\n\n- **name:** Name for the custom event\n\n- **entityType:** Name of the available plugins for the selected source\n\n- **rules.ruleType:** Type of the rule being set for the custom event\n\n### Rule-type specific parameters\n\nDepending on the chosen `ruleType`, there are further required parameters:\n\n#### Threshold Rule using a dynamic built-in metric by pattern :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricPattern.prefix:** Prefix pattern for the metric\n\n- **rules.metricPattern.operator:** Operator for matching the metric\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\"name\":\"Event for OpenAPI documentation\",\n\"query\":<Query>, \n\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":null, \"metricPattern\":{\"prefix\":\"fs\", \"postfix\":\"free\", \"operator\":\"endsWith\", \"placeholder\":\"/xvda1\"},\n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\nThe above example creates a custom event that matches disk devices that end with \"/xvda1\" for the metric \"fs.{device}.free\" for any host in scope.\n\n#### Threshold Rule using fixed metric :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricName:** Metric name for the event\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation fixed Metric\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation fixed metric\",\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":\"fs./dev/xvda1.free\", \n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\n\n#### System Rule:\n\n- **rules.systemRuleId:** Id of the System Rule being set \n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation System Rule\", \"enabled\":true,\"entityType\":\"any\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation System Rule\", \"rules\":[{\"ruleType\":\"system\", \"systemRuleId\":\"entity.offline\",\"severity\":10}], \"triggering\":false\n}'\n```\n\n#### Entity Verification Rule:\n\n- **rules.matchingEntityType:** Type of the Entity\n- **rules.matchingOperator:** Operator for matching the Entity name\n- **rules.matchingEntityLabel:** Name Pattern for the Entity\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI Entity Verification Rule\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI Entity Verification Rule\",\n\"rules\":[{\"matchingEntityLabel\":\"test\", \"matchingEntityType\":\"jvmRuntimePlatform\",\"matchingOperator\":\"startsWith\",\"offlineDuration\":1800000, \n\"ruleType\":\"entity_verification\",\"severity\": 5}], \"triggering\":false\n}'\n```\n\n### Deprecations:\n\nThe entity types `application`, `service` and `endpoint` are deprecated for custom events and need to be migrated to a Smart Alert soon. We advise to configure a respective Smart Alert instead of a custom Event. For more information please [refer to our documentation](https://www.ibm.com/docs/en/obi/current?topic=applications-smart-alerts).\n"
      }
    },
    "/api/events/settings/event-specifications/custom/systemRules": {
      "get": {
        "description": "This API helps to get all the system rules for custom event specifications.",
        "operationId": "getSystemRules",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "entity.offline",
                    "name": "Offline event detection (System Rule)"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemRuleLabel"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All system rules for custom event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}": {
      "delete": {
        "operationId": "deleteCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint deletes a Custom Event Specification.\n\nBy default, the ID of a deleted configuration cannot be reused anymore to enable links in previous Issues or Incidents to stay valid.\nHowever, check out the docs for [updating a configuration](#operation/putCustomEventSpecification) how this default behavior can be changed using the `allowRestore` query parameter.\n\n\n## Mandatory Parameters:\n\n- **eventSpecificationId (Path Parameter):** A unique identifier for the custom event specification to delete.\n\n\n# Example:\n\n```\ncurl --request DELETE 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json'\n```\n"
      },
      "get": {
        "description": "This API helps to get the Custom Event specification for the given ID.",
        "operationId": "getCustomEventSpecification",
        "parameters": [
          {
            "description": "eventSpecificationId",
            "example": "Yojfl6Yn9SXaFhJG",
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "Yojfl6Yn9SXaFhJG",
                  "name": "DP_Domain_MemoryUsage",
                  "entityType": "ibmDataPowerDomain",
                  "query": null,
                  "triggering": true,
                  "description": "Average Memory Usage for the DP Domain >= 0%",
                  "expirationTime": 60000,
                  "enabled": true,
                  "rules": [
                    {
                      "ruleType": "threshold",
                      "severity": 5,
                      "metricName": "currentMemUsage",
                      "rollup": 0,
                      "window": 600000,
                      "metricPattern": null,
                      "aggregation": "avg",
                      "conditionOperator": ">=",
                      "conditionValue": 0,
                      "metricLabel": "Current Memory Usage",
                      "metricFormat": "PERCENTAGE"
                    }
                  ],
                  "ruleLogicalOperator": "AND",
                  "lastUpdated": 1670404707763,
                  "validVersion": 1,
                  "actions": null,
                  "migrated": false,
                  "applicationAlertConfigId": null,
                  "deleted": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Custom event specification",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "putCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "allowRestore",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEventSpecification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create or update custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint creates or updates a Custom Event Specification.\n\n## Mandatory Parameters:\n\n- **eventSpecificationId (Path Parameter):** A unique identifier for each custom event\n\n- **name:** Name for the custom event\n\n- **entityType:** Name of the available plugins for the selected source\n\n- **rules.ruleType:** Type of the rule being set for the custom event\n\n### Rule-type specific parameters\n\nDepending on the chosen `ruleType`, there are further required parameters:\n\n#### Threshold Rule using a dynamic built-in metric by pattern :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricPattern.prefix:** Prefix pattern for the metric\n\n- **rules.metricPattern.operator:** Operator for matching the metric\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\"name\":\"Event for OpenAPI documentation\",\n\"query\":<Query>, \n\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":null, \"metricPattern\":{\"prefix\":\"fs\", \"postfix\":\"free\", \"operator\":\"endsWith\", \"placeholder\":\"/xvda1\"},\n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\nThe above example creates a custom event that matches disk devices that end with \"/xvda1\" for the metric \"fs.{device}.free\" for any host in scope.\n\n#### Threshold Rule using fixed metric :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricName:** Metric name for the event\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation fixed Metric\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation fixed metric\",\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":\"fs./dev/xvda1.free\", \n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\n\n#### System Rule:\n\n- **rules.systemRuleId:** Id of the System Rule being set \n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation System Rule\", \"enabled\":true,\"entityType\":\"any\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation System Rule\", \"rules\":[{\"ruleType\":\"system\", \"systemRuleId\":\"entity.offline\",\"severity\":10}], \"triggering\":false\n}'\n```\n\n#### Entity Verification Rule:\n\n- **rules.matchingEntityType:** Type of the Entity\n- **rules.matchingOperator:** Operator for matching the Entity name\n- **rules.matchingEntityLabel:** Name Pattern for the Entity\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI Entity Verification Rule\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI Entity Verification Rule\",\n\"rules\":[{\"matchingEntityLabel\":\"test\", \"matchingEntityType\":\"jvmRuntimePlatform\",\"matchingOperator\":\"startsWith\",\"offlineDuration\":1800000, \n\"ruleType\":\"entity_verification\",\"severity\": 5}], \"triggering\":false\n}'\n```\n\n## Optional Parameters:\n\n- **allowRestore (Query Parameter):** Allows to restore a custom event specification that was previously deleted or migrated when set to `true`. This allows to have idempotent operations that can be useful in _configuration as code_ scenarios. By default, the ID of a deleted configuration cannot be reused anymore to enable links in previous Issues or Incidents to stay valid.\n\n### Deprecations:\n\nThe entity types `application`, `service` and `endpoint` are deprecated for custom events and need to be migrated to a Smart Alert soon. We advise to configure a respective Smart Alert instead of a custom Event. For more information please [refer to our documentation](https://www.ibm.com/docs/en/obi/current?topic=applications-smart-alerts).\n"
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}/disable": {
      "post": {
        "operationId": "disableCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable custom event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}/enable": {
      "post": {
        "operationId": "enableCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable custom event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/infos": {
      "get": {
        "description": "This API helps to get the summary of all build-in and custom event specifications",
        "operationId": "getEventSpecificationInfos",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "yBGNFSh-pcKzZVBFnxoBu_36Yw4",
                    "name": "Frequent TCP errors",
                    "description": "Checks whether the host has an unusual high number of TCP errors.",
                    "entityType": "host",
                    "type": "BUILT_IN",
                    "severity": 5,
                    "triggering": false,
                    "invalid": false,
                    "enabled": true,
                    "migrated": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSpecificationInfo"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Summary of all built-in and custom event specifications",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Summary of all built-in and custom event specifications by IDs",
        "operationId": "getEventSpecificationInfosByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSpecificationInfo"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All built-in and custom event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications": {
      "get": {
        "description": "Gets all Global Smart Alert Configuration. Configurations are sorted by creation date in descending order.",
        "operationId": "findActiveGlobalApplicationAlertConfigs",
        "parameters": [
          {
            "description": "The ID of a specific global application.",
            "example": "j02SxMRTSf-NCBXf5IdsjQ",
            "in": "query",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of Global Smart Alert Configuration IDs. This allows fetching of a specific set of Configurations. This query can be repeated to use multiple IDs.",
            "example": "IYS1XOEcTNiT1eOD8pxgXg",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "Slow calls than usual",
                    "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                    "boundaryScope": "INBOUND",
                    "applications": {
                      "j02SxMRTSf-NCBXf5IdsjQ": {
                        "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                        "inclusive": true,
                        "services": {}
                      }
                    },
                    "applicationIds": [
                      "j02SxMRTSf-NCBXf5IdsjQ"
                    ],
                    "severity": 5,
                    "triggering": false,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "rule": {
                      "alertType": "slowness",
                      "aggregation": "P90",
                      "metricName": "latency"
                    },
                    "threshold": {
                      "type": "staticThreshold",
                      "operator": ">=",
                      "value": 2,
                      "lastUpdated": 0
                    },
                    "alertChannelIds": [],
                    "granularity": 600000,
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "timeWindow": 600000
                    },
                    "evaluationType": "PER_AP",
                    "customPayloadFields": [],
                    "id": "vlFnxhVTS3KVb-wsN26PeQ",
                    "created": 1707305626330,
                    "initialCreated": 1707305626330,
                    "readOnly": false,
                    "enabled": true,
                    "builtIn": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested website doesn't exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all Global Smart Alert Configs",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "post": {
        "description": "Creates a new Global Smart Alert Configuration.",
        "operationId": "createGlobalApplicationAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Slow calls than usual",
                "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                "boundaryScope": "INBOUND",
                "applications": {
                  "j02SxMRTSf-NCBXf5IdsjQ": {
                    "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                    "inclusive": true,
                    "services": {}
                  }
                },
                "applicationIds": [
                  "j02SxMRTSf-NCBXf5IdsjQ"
                ],
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "includeInternal": false,
                "includeSynthetic": false,
                "rule": {
                  "alertType": "slowness",
                  "aggregation": "P90",
                  "metricName": "latency"
                },
                "threshold": {
                  "type": "staticThreshold",
                  "operator": ">=",
                  "value": 2,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "evaluationType": "PER_AP",
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/GlobalApplicationsAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Slow calls than usual",
                  "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applications": {
                    "j02SxMRTSf-NCBXf5IdsjQ": {
                      "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "applicationIds": [
                    "j02SxMRTSf-NCBXf5IdsjQ"
                  ],
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 2,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "vlFnxhVTS3KVb-wsN26PeQ",
                  "created": 1707305626330,
                  "initialCreated": 1707305626330,
                  "readOnly": false,
                  "enabled": true,
                  "builtIn": false
                },
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Global Smart Alert Configuration created."
          },
          "400": {
            "description": "Invalid Configuration."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Create Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}": {
      "delete": {
        "description": "Deletes a Global Smart Alert Configuration.",
        "operationId": "deleteGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to delete.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Global Smart Alert Configuration deleted."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "get": {
        "description": "Gets a specific Global Smart Alert Configuration. This may return a deleted Configuration.",
        "operationId": "findGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to retrieve.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the Configuration was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1707305626330,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Slow calls than usual",
                  "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applications": {
                    "j02SxMRTSf-NCBXf5IdsjQ": {
                      "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "applicationIds": [
                    "j02SxMRTSf-NCBXf5IdsjQ"
                  ],
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 2,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "vlFnxhVTS3KVb-wsN26PeQ",
                  "created": 1707305626330,
                  "initialCreated": 1707305626330,
                  "readOnly": false,
                  "enabled": true,
                  "builtIn": false
                },
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "post": {
        "description": "Updates an existing Global Smart Alert Configuration.",
        "operationId": "updateGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to update.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Slow calls than usual",
                "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                "boundaryScope": "INBOUND",
                "applications": {
                  "j02SxMRTSf-NCBXf5IdsjQ": {
                    "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                    "inclusive": true,
                    "services": {}
                  }
                },
                "applicationIds": [
                  "j02SxMRTSf-NCBXf5IdsjQ"
                ],
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "includeInternal": false,
                "includeSynthetic": false,
                "rule": {
                  "alertType": "slowness",
                  "aggregation": "P90",
                  "metricName": "latency"
                },
                "threshold": {
                  "type": "staticThreshold",
                  "operator": ">=",
                  "value": 2,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "evaluationType": "PER_AP",
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/GlobalApplicationsAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Slow calls than usual",
                  "description": "Calls are slower or equal to 2 ms based on latency (90th).",
                  "boundaryScope": "INBOUND",
                  "applications": {
                    "j02SxMRTSf-NCBXf5IdsjQ": {
                      "applicationId": "j02SxMRTSf-NCBXf5IdsjQ",
                      "inclusive": true,
                      "services": {}
                    }
                  },
                  "applicationIds": [
                    "j02SxMRTSf-NCBXf5IdsjQ"
                  ],
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "rule": {
                    "alertType": "slowness",
                    "aggregation": "P90",
                    "metricName": "latency"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 2,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "evaluationType": "PER_AP",
                  "customPayloadFields": [],
                  "id": "vlFnxhVTS3KVb-wsN26PeQ",
                  "created": 1707305626330,
                  "initialCreated": 1707305626330,
                  "readOnly": false,
                  "enabled": true,
                  "builtIn": false
                },
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Global Smart Alert Configuration updated."
          },
          "204": {
            "description": "Global Smart Alert Configuration did not change."
          },
          "400": {
            "description": "Invalid Application ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          },
          "500": {
            "description": "Internal error."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Update Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/disable": {
      "put": {
        "description": "Disables a Global Smart Alert Configuration.",
        "operationId": "disableGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to disable.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Global Smart Alert Configuration disabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/enable": {
      "put": {
        "description": "Enables a Global Smart Alert Configuration.",
        "operationId": "enableGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to enable.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Global Smart Alert Configuration enabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/restore/{created}": {
      "put": {
        "description": "Restores a deleted Global Smart Alert Configuration.",
        "operationId": "restoreGlobalApplicationAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to restore.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp representing the creation time of a specific Global Smart Alert Configuration.",
            "example": 1707305626330,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Global Smart Alert Configuration restored."
          },
          "400": {
            "description": "Invalid Configuration provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalApplicationSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Global Smart Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/versions": {
      "get": {
        "description": "Gets all versions of a Global Smart Alert Configuration. This may return deleted Configurations. Configurations are sorted by creation date in descending order.",
        "operationId": "findGlobalApplicationAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of a specific Global Smart Alert Configuration to retrieve.",
            "example": "vlFnxhVTS3KVb-wsN26PeQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "vlFnxhVTS3KVb-wsN26PeQ",
                    "created": 1707305626330,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "5ee8a3e8cd70020001ecb007",
                        "type": "USER",
                        "fullName": "Stan"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Global Smart Alert Config Versions",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveLogAlertConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Log Alert Configs",
        "tags": [
          "Log Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createLogAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Create Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs/{id}": {
      "delete": {
        "operationId": "deleteLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Log Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogAlertConfigWithMetadata"
                }
              }
            },
            "description": "Log Smart Alert successfully updated"
          },
          "204": {
            "description": "Log Smart Alert did not change"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Update Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs/{id}/disable": {
      "put": {
        "operationId": "disableLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs/{id}/enable": {
      "put": {
        "operationId": "enableLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreLogAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalLogSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/logs/{id}/versions": {
      "get": {
        "description": "Find all versions of a Log Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findLogAlertConfigVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Log Alert Config",
        "tags": [
          "Log Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveServiceLevelsAlertConfigs",
        "parameters": [
          {
            "description": "Service Levels Objective(SLO) Configuration ID",
            "example": "SLOEANnWh9tQOa2h88kGxK6wQ",
            "in": "query",
            "name": "sloId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of Service Levels Alert Configuration IDs",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Error Budget Remaining is low",
                  "description": "Error Budget Remaining is less than or equal to 5%.",
                  "severity": 5,
                  "triggering": true,
                  "rule": {
                    "alertType": "ERROR_BUDGET",
                    "metric": "BURNED_PERCENTAGE"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 0.05,
                    "lastUpdated": 1716454787342
                  },
                  "sloIds": [
                    "SLOEANnWh9tQOa2h88kGxK6wQ"
                  ],
                  "alertChannelIds": [],
                  "timeThreshold": {
                    "expiry": null,
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "id": "ln3IGogYS-S7CPqcOQYTNA",
                  "created": 1717668384754,
                  "initialCreated": 1717668384754,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Service levels Alert Configs",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createServiceLevelsAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "alertChannelIds": [],
                "customPayloadFields": [
                  {
                    "key": "foo",
                    "id": "avvh9tbxpfRE65t",
                    "type": "staticString",
                    "value": "bar"
                  }
                ],
                "description": "Error Budget Remaining is less than or equal to 5%.",
                "name": "Error Budget Remaining is low",
                "rule": {
                  "alertType": "ERROR_BUDGET",
                  "metric": "BURNED_PERCENTAGE"
                },
                "severity": 5,
                "sloIds": [
                  "SLOEANnWh9tQOa2h88kGxK6wQ"
                ],
                "threshold": {
                  "type": "staticThreshold",
                  "value": 0.05,
                  "operator": ">=",
                  "lastUpdated": 1716454787342
                },
                "timeThreshold": {
                  "timeWindow": 600000
                },
                "triggering": true
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelsAlertConfig"
              }
            }
          },
          "description": "Create Request Body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Error Budget Remaining is low",
                  "description": "Error Budget Remaining is less than or equal to 5%.",
                  "severity": 5,
                  "triggering": true,
                  "rule": {
                    "alertType": "ERROR_BUDGET",
                    "metric": "BURNED_PERCENTAGE"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 0.05,
                    "lastUpdated": 1716454787342
                  },
                  "sloIds": [
                    "SLOEANnWh9tQOa2h88kGxK6wQ"
                  ],
                  "alertChannelIds": [],
                  "timeThreshold": {
                    "expiry": null,
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "id": "ln3IGogYS-S7CPqcOQYTNA",
                  "created": 1717668384754,
                  "initialCreated": 1717668384754,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Website SLOs do not support triggering -> true"
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "Service levels Alert Config with Website SLOs do not support triggering"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Create Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels/{id}": {
      "delete": {
        "operationId": "deleteServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Delete Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Service levels Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Service Levels Alert Version Creation Date",
            "example": 1706617456952,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Error Budget Remaining is low",
                  "description": "Error Budget Remaining is less than or equal to 5%.",
                  "severity": 5,
                  "triggering": true,
                  "rule": {
                    "alertType": "ERROR_BUDGET",
                    "metric": "BURNED_PERCENTAGE"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 0.05,
                    "lastUpdated": 1716454787342
                  },
                  "sloIds": [
                    "SLOEANnWh9tQOa2h88kGxK6wQ"
                  ],
                  "alertChannelIds": [],
                  "timeThreshold": {
                    "expiry": null,
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "id": "ln3IGogYS-S7CPqcOQYTNA",
                  "created": 1717668384754,
                  "initialCreated": 1717668384754,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Config with id: -DZZjflTQTmZ7yGvBilPlQ is not found"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                }
              }
            },
            "description": "Service levels Alert Config with given ID not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "alertChannelIds": [],
                "customPayloadFields": [
                  {
                    "key": "foo",
                    "id": "avvh9tbxpfRE65t",
                    "type": "staticString",
                    "value": "bar"
                  }
                ],
                "description": "Error Budget Remaining is less than or equal to 5%.",
                "name": "Error Budget Remaining is low",
                "rule": {
                  "alertType": "ERROR_BUDGET",
                  "metric": "BURNED_PERCENTAGE"
                },
                "severity": 5,
                "sloIds": [
                  "SLOEANnWh9tQOa2h88kGxK6wQ"
                ],
                "threshold": {
                  "type": "staticThreshold",
                  "value": 0.05,
                  "operator": ">=",
                  "lastUpdated": 1716454787342
                },
                "timeThreshold": {
                  "timeWindow": 600000
                },
                "triggering": true
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelsAlertConfig"
              }
            }
          },
          "description": "Update Request Body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "Error Budget Remaining is low",
                  "description": "Error Budget Remaining is less than or equal to 5%.",
                  "severity": 5,
                  "triggering": true,
                  "rule": {
                    "alertType": "ERROR_BUDGET",
                    "metric": "BURNED_PERCENTAGE"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 0.05,
                    "lastUpdated": 1716454787342
                  },
                  "sloIds": [
                    "SLOEANnWh9tQOa2h88kGxK6wQ"
                  ],
                  "alertChannelIds": [],
                  "timeThreshold": {
                    "expiry": null,
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "id": "ln3IGogYS-S7CPqcOQYTNA",
                  "created": 1717668384754,
                  "initialCreated": 1717668384754,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                }
              }
            },
            "description": "Service levels Smart Alert successfully updated"
          },
          "204": {
            "description": "Service levels Smart Alert did not change"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Website SLOs do not support triggering -> true"
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "Service levels Alert Config with Website SLOs do not support triggering"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Update Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels/{id}/disable": {
      "put": {
        "operationId": "disableServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Disable Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels/{id}/enable": {
      "put": {
        "operationId": "enableServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Enable Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreServiceLevelsAlertConfig",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Service Levels Alert Version Creation Date",
            "example": 1706617456952,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureServiceLevelsAlerts"
            ]
          }
        ],
        "summary": "Restore Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/service-levels/{id}/versions": {
      "get": {
        "description": "Find all versions of a Service levels Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findServiceLevelsAlertConfigVersions",
        "parameters": [
          {
            "description": "Service Levels Alert Configuration ID",
            "example": "ln3IGogYS-S7CPqcOQYTNA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "ln3IGogYS-S7CPqcOQYTNA",
                    "created": 1717507017767,
                    "enabled": false,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "DISABLE",
                      "author": {
                        "id": "SCzqyU_LTtmO9CCnvvVOAg",
                        "type": "API",
                        "fullName": "userToken"
                      }
                    }
                  },
                  {
                    "id": "ln3IGogYS-S7CPqcOQYTNA",
                    "created": 1717506979607,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "SCzqyU_LTtmO9CCnvvVOAg",
                        "type": "API",
                        "fullName": "userToken"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Config with id: -DZZjflTQTmZ7yGvBilPlQ is not found"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelseAlertConfigWithMetadata"
                }
              }
            },
            "description": "Service levels Alert Config with given ID not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Service levels Alert Config",
        "tags": [
          "Service Levels Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics": {
      "get": {
        "description": "Gets all the Synthetic Smart Alert Configuration pertaining to a specific synthetic test. Configurations are sorted by creation date in descending order.",
        "operationId": "findActiveSyntheticAlertConfigs",
        "parameters": [
          {
            "description": "The ID of a specific Synthetic Test. ",
            "example": "ic25Vt1T5dgKzi0K7812",
            "in": "query",
            "name": "syntheticTestId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of Smart Alert Configuration IDs. This allows fetching of a specific set of Configurations. This query can be repeated to use multiple IDs.",
            "example": "smRTFp08juKWtn8I",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "Tests in EU are failing",
                    "description": "Tests in EU failed for 1 consecutive time",
                    "syntheticTestIds": [
                      "ic25Vt1T5dgKzi0K7812",
                      "2gBxQz3oKtXgFXzRoQ6O"
                    ],
                    "severity": 5,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.serviceId",
                          "stringValue": "12",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "12",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.locationLabel",
                          "stringValue": "US-west1",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "123",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        }
                      ]
                    },
                    "rule": {
                      "alertType": "failure",
                      "metricName": "status",
                      "aggregation": "SUM"
                    },
                    "alertChannelIds": [],
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "violationsCount": 1
                    },
                    "customPayloadFields": [],
                    "id": "2K1YQIeaSQKIcIkHPH7D3g",
                    "created": 1707486254161,
                    "initialCreated": 1706531043586,
                    "readOnly": false,
                    "enabled": true
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configurations do not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all Synthetic Smart Alert Configs",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "post": {
        "description": "Creates a new Synthetic Smart Alert Configuration.",
        "operationId": "createSyntheticAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "2 consecutive failures of ${synthetic.testName} at locations${synthetic.locationLabel}",
                "description": "Alert created without test but with AppId - Synthetic test failed for 2 consecutive times",
                "syntheticTestIds": [
                  "ic25Vt1T5dgKzi0K7812",
                  "2gBxQz3oKtXgFXzRoQ6O"
                ],
                "severity": 5,
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "synthetic.applicationId",
                  "stringValue": "2BPCBLz_RBG8J6mjyuxm6w",
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": "2BPCBLz_RBG8J6mjyuxm6w",
                  "operator": "EQUALS",
                  "entity": "NOT_APPLICABLE"
                },
                "rule": {
                  "alertType": "failure",
                  "metricName": "status",
                  "aggregation": "SUM"
                },
                "alertChannelIds": [
                  "0o1ISHPfR8-N4iUK"
                ],
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "violationsCount": 2
                },
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "2 consecutive failures of ${synthetic.testName} at locations${synthetic.locationLabel}",
                  "description": "Alert created without test but with AppId - Synthetic test failed for 2 consecutive times",
                  "syntheticTestIds": [
                    "ic25Vt1T5dgKzi0K7812",
                    "2gBxQz3oKtXgFXzRoQ6O"
                  ],
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "synthetic.applicationId",
                    "stringValue": "2BPCBLz_RBG8J6mjyuxm6w",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "2BPCBLz_RBG8J6mjyuxm6w",
                    "operator": "EQUALS",
                    "entity": "NOT_APPLICABLE"
                  },
                  "rule": {
                    "alertType": "failure",
                    "metricName": "status",
                    "aggregation": "SUM"
                  },
                  "alertChannelIds": [
                    "0o1ISHPfR8-N4iUK"
                  ],
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "violationsCount": 2
                  },
                  "customPayloadFields": [],
                  "id": "qgEwvI0vRfe3Al_D7T7LSA",
                  "created": 1707149760053,
                  "initialCreated": 1707145201046,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            },
            "description": "Synthetic Smart Alert Configuration created."
          },
          "400": {
            "description": "Invalid configuration."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Create Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}": {
      "delete": {
        "description": "Deletes a Synthetic Smart Alert Configuration.",
        "operationId": "deleteSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to delete.",
            "example": "2K1YQIeaSQKIcIkHPH7D3g",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Synthetic Smart Alert Configuration deleted."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "get": {
        "description": "Gets a specific Synthetic Smart Alert Configuration. This may return a deleted Configuration.",
        "operationId": "findSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to retrieve.",
            "example": "qgEwvI0vRfe3Al_D7T7LSA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the Configuration was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1707149760053,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "2 consecutive failures of ${synthetic.testName} at locations${synthetic.locationLabel}",
                  "description": "Alert created without test but with AppId - Synthetic test failed for 2 consecutive times",
                  "syntheticTestIds": [
                    "ic25Vt1T5dgKzi0K7812",
                    "2gBxQz3oKtXgFXzRoQ6O"
                  ],
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "synthetic.applicationId",
                    "stringValue": "2BPCBLz_RBG8J6mjyuxm6w",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "2BPCBLz_RBG8J6mjyuxm6w",
                    "operator": "EQUALS",
                    "entity": "NOT_APPLICABLE"
                  },
                  "rule": {
                    "alertType": "failure",
                    "metricName": "status",
                    "aggregation": "SUM"
                  },
                  "alertChannelIds": [
                    "0o1ISHPfR8-N4iUK"
                  ],
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "violationsCount": 2
                  },
                  "customPayloadFields": [],
                  "id": "qgEwvI0vRfe3Al_D7T7LSA",
                  "created": 1707149760053,
                  "initialCreated": 1707145201046,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "post": {
        "description": "Updates an existing Synthetic Smart Alert Configuration.",
        "operationId": "updateSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to update.",
            "example": "qgEwvI0vRfe3Al_D7T7LSA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "2 consecutive failures of ${synthetic.testName} at locations${synthetic.locationLabel}",
                "description": "Alert created without test but with AppId - Synthetic test failed for 2 consecutive times",
                "syntheticTestIds": [
                  "ic25Vt1T5dgKzi0K7812",
                  "2gBxQz3oKtXgFXzRoQ6O"
                ],
                "severity": 5,
                "tagFilterExpression": {
                  "type": "TAG_FILTER",
                  "name": "synthetic.applicationId",
                  "stringValue": "2BPCBLz_RBG8J6mjyuxm6w",
                  "numberValue": null,
                  "booleanValue": null,
                  "key": null,
                  "value": "2BPCBLz_RBG8J6mjyuxm6w",
                  "operator": "EQUALS",
                  "entity": "NOT_APPLICABLE"
                },
                "rule": {
                  "alertType": "failure",
                  "metricName": "status",
                  "aggregation": "SUM"
                },
                "alertChannelIds": [
                  "0o1ISHPfR8-N4iUK"
                ],
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "violationsCount": 2
                },
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "2 consecutive failures of ${synthetic.testName} at locations${synthetic.locationLabel}",
                  "description": "Alert created without test but with AppId - Synthetic test failed for 2 consecutive times",
                  "syntheticTestIds": [
                    "ic25Vt1T5dgKzi0K7812",
                    "2gBxQz3oKtXgFXzRoQ6O"
                  ],
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "TAG_FILTER",
                    "name": "synthetic.applicationId",
                    "stringValue": "2BPCBLz_RBG8J6mjyuxm6w",
                    "numberValue": null,
                    "booleanValue": null,
                    "key": null,
                    "value": "2BPCBLz_RBG8J6mjyuxm6w",
                    "operator": "EQUALS",
                    "entity": "NOT_APPLICABLE"
                  },
                  "rule": {
                    "alertType": "failure",
                    "metricName": "status",
                    "aggregation": "SUM"
                  },
                  "alertChannelIds": [
                    "0o1ISHPfR8-N4iUK"
                  ],
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "violationsCount": 2
                  },
                  "customPayloadFields": [],
                  "id": "qgEwvI0vRfe3Al_D7T7LSA",
                  "created": 1707149760053,
                  "initialCreated": 1707145201046,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            },
            "description": "Synthetic Smart Alert Configuration updated"
          },
          "204": {
            "description": "Synthetic Smart Alert Configuration did not change"
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          },
          "500": {
            "description": "Internal error."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Update Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/disable": {
      "put": {
        "description": "Disables a Synthetic Smart Alert Configuration.",
        "operationId": "disableSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to disable.",
            "example": "2K1YQIeaSQKIcIkHPH7D3g",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synthetic Smart Alert Configuration disabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/enable": {
      "put": {
        "description": "Enables a Synthetic Smart Alert Configuration.",
        "operationId": "enableSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to enable.",
            "example": "2K1YQIeaSQKIcIkHPH7D3g",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synthetic Smart Alert Configuration enabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/restore/{created}": {
      "put": {
        "description": "Restores a deleted Synthetic Smart Alert Configuration.",
        "operationId": "restoreSyntheticAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to restore.",
            "example": "2K1YQIeaSQKIcIkHPH7D3g",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp representing the creation time of a specific Synthetic Smart Alert Configuration.",
            "example": 1707726529124,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synthetic Smart Alert Configuration restored."
          },
          "400": {
            "description": "Invalid Config provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalSyntheticSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Synthetic Smart Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/versions": {
      "get": {
        "description": "Gets all versions of a Synthetic Smart Alert Configuration. This may return deleted Configurations. Configurations are sorted by creation date in descending order.",
        "operationId": "findSyntheticAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of a specific Synthetic Smart Alert Configuration to retrieve.",
            "example": "qgEwvI0vRfe3Al_D7T7LSA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "qgEwvI0vRfe3Al_D7T7LSA",
                    "created": 1707149760053,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "UPDATE",
                      "author": {
                        "id": "6244073003b38f0001209ec5",
                        "type": "USER",
                        "fullName": "John Doe"
                      }
                    }
                  },
                  {
                    "id": "qgEwvI0vRfe3Al_D7T7LSA",
                    "created": 1707145201046,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "6244073003b38f0001209ec5",
                        "type": "USER",
                        "fullName": "John Doe"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic Smart Alert Config Versions",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveInfraAlertConfigs",
        "parameters": [
          {
            "description": "List of IDs of Infra Smart Alert configurations",
            "example": "[4kxgJAXdSDiu6swQaKXrJw, ZLo28grvQaiMqIaikJK1RQ]",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "high-mean-memory-usage",
                    "description": "Something is going wrong in your infrastructure.",
                    "severity": 5,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "kubernetes.cluster.name",
                          "stringValue": "200_PoP_Cluster",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "200_PoP_Cluster",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        }
                      ]
                    },
                    "groupBy": [
                      "kubernetes.cluster.name",
                      "kubernetes.namespace.name",
                      "kubernetes.pod.name"
                    ],
                    "rule": {
                      "alertType": "genericRule",
                      "metricName": "memory.usage",
                      "entityType": "crio",
                      "aggregation": "MEAN",
                      "crossSeriesAggregation": "MEAN",
                      "regex": false
                    },
                    "threshold": {
                      "type": "staticThreshold",
                      "operator": ">=",
                      "value": 1,
                      "lastUpdated": 1724720573744
                    },
                    "predictiveTrigger": null,
                    "alertChannelIds": [
                      "VjS1NvcXpOARmTvA",
                      "CrLI3QeIZKygaNLH"
                    ],
                    "granularity": 60000,
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "timeWindow": 180000
                    },
                    "id": "4kxgJAXdSDiu6swQaKXrJw",
                    "created": 1724720587414,
                    "initialCreated": 1714766649532,
                    "readOnly": false,
                    "enabled": false,
                    "customPayloadFields": [
                      {
                        "type": "staticString",
                        "key": "testKey",
                        "value": "team-ar"
                      }
                    ],
                    "rules": [
                      {
                        "thresholdOperator": ">=",
                        "rule": {
                          "alertType": "genericRule",
                          "metricName": "memory.usage",
                          "entityType": "crio",
                          "aggregation": "MEAN",
                          "crossSeriesAggregation": "MEAN",
                          "regex": false
                        },
                        "thresholds": {
                          "WARNING": {
                            "type": "staticThreshold",
                            "value": 1
                          },
                          "CRITICAL": {
                            "type": "staticThreshold",
                            "value": 4
                          }
                        }
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InfraAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Infra Alert Configs",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createInfraAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfraAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "high-mean-memory-usage",
                  "description": "Something is going wrong in your infrastructure.",
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.cluster.name",
                        "stringValue": "200_PoP_Cluster",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "200_PoP_Cluster",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  },
                  "groupBy": [
                    "kubernetes.cluster.name",
                    "kubernetes.namespace.name",
                    "kubernetes.pod.name"
                  ],
                  "rule": {
                    "alertType": "genericRule",
                    "metricName": "memory.usage",
                    "entityType": "crio",
                    "aggregation": "MEAN",
                    "crossSeriesAggregation": "MEAN",
                    "regex": false
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 1,
                    "lastUpdated": 1724720573744
                  },
                  "predictiveTrigger": null,
                  "alertChannelIds": [
                    "VjS1NvcXpOARmTvA",
                    "CrLI3QeIZKygaNLH"
                  ],
                  "granularity": 60000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 180000
                  },
                  "id": "4kxgJAXdSDiu6swQaKXrJw",
                  "created": 1724720587414,
                  "initialCreated": 1714766649532,
                  "readOnly": false,
                  "enabled": false,
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "testKey",
                      "value": "team-ar"
                    }
                  ],
                  "rules": [
                    {
                      "thresholdOperator": ">=",
                      "rule": {
                        "alertType": "genericRule",
                        "metricName": "memory.usage",
                        "entityType": "crio",
                        "aggregation": "MEAN",
                        "crossSeriesAggregation": "MEAN",
                        "regex": false
                      },
                      "thresholds": {
                        "WARNING": {
                          "type": "staticThreshold",
                          "value": 1
                        },
                        "CRITICAL": {
                          "type": "staticThreshold",
                          "value": 4
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/InfraAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Create Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs/{id}": {
      "delete": {
        "operationId": "deleteInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration to delete",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Infra Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the config was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1722877985000,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "high-mean-memory-usage",
                  "description": "Something is going wrong in your infrastructure.",
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.cluster.name",
                        "stringValue": "200_PoP_Cluster",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "200_PoP_Cluster",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  },
                  "groupBy": [
                    "kubernetes.cluster.name",
                    "kubernetes.namespace.name",
                    "kubernetes.pod.name"
                  ],
                  "rule": {
                    "alertType": "genericRule",
                    "metricName": "memory.usage",
                    "entityType": "crio",
                    "aggregation": "MEAN",
                    "crossSeriesAggregation": "MEAN",
                    "regex": false
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 1,
                    "lastUpdated": 1724720573744
                  },
                  "predictiveTrigger": null,
                  "alertChannelIds": [
                    "VjS1NvcXpOARmTvA",
                    "CrLI3QeIZKygaNLH"
                  ],
                  "granularity": 60000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 180000
                  },
                  "id": "4kxgJAXdSDiu6swQaKXrJw",
                  "created": 1724720587414,
                  "initialCreated": 1714766649532,
                  "readOnly": false,
                  "enabled": false,
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "testKey",
                      "value": "team-ar"
                    }
                  ],
                  "rules": [
                    {
                      "thresholdOperator": ">=",
                      "rule": {
                        "alertType": "genericRule",
                        "metricName": "memory.usage",
                        "entityType": "crio",
                        "aggregation": "MEAN",
                        "crossSeriesAggregation": "MEAN",
                        "regex": false
                      },
                      "thresholds": {
                        "WARNING": {
                          "type": "staticThreshold",
                          "value": 1
                        },
                        "CRITICAL": {
                          "type": "staticThreshold",
                          "value": 4
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/InfraAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration to update",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfraAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "high-mean-memory-usage",
                  "description": "Something is going wrong in your infrastructure.",
                  "severity": 5,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "kubernetes.cluster.name",
                        "stringValue": "200_PoP_Cluster",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "200_PoP_Cluster",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  },
                  "groupBy": [
                    "kubernetes.cluster.name",
                    "kubernetes.namespace.name",
                    "kubernetes.pod.name"
                  ],
                  "rule": {
                    "alertType": "genericRule",
                    "metricName": "memory.usage",
                    "entityType": "crio",
                    "aggregation": "MEAN",
                    "crossSeriesAggregation": "MEAN",
                    "regex": false
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 1,
                    "lastUpdated": 1724720573744
                  },
                  "predictiveTrigger": null,
                  "alertChannelIds": [
                    "VjS1NvcXpOARmTvA",
                    "CrLI3QeIZKygaNLH"
                  ],
                  "granularity": 60000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 180000
                  },
                  "id": "4kxgJAXdSDiu6swQaKXrJw",
                  "created": 1724720587414,
                  "initialCreated": 1714766649532,
                  "readOnly": false,
                  "enabled": false,
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "testKey",
                      "value": "team-ar"
                    }
                  ],
                  "rules": [
                    {
                      "thresholdOperator": ">=",
                      "rule": {
                        "alertType": "genericRule",
                        "metricName": "memory.usage",
                        "entityType": "crio",
                        "aggregation": "MEAN",
                        "crossSeriesAggregation": "MEAN",
                        "regex": false
                      },
                      "thresholds": {
                        "WARNING": {
                          "type": "staticThreshold",
                          "value": 1
                        },
                        "CRITICAL": {
                          "type": "staticThreshold",
                          "value": 4
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/InfraAlertConfigWithMetadata"
                }
              }
            },
            "description": "Infra Smart Alert successfully updated"
          },
          "204": {
            "description": "Infra Smart Alert did not change"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Update Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs/{id}/disable": {
      "put": {
        "operationId": "disableInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration to disable",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs/{id}/enable": {
      "put": {
        "operationId": "enableInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration to enable",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreInfraAlertConfig",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration to restore",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix Timestamp of when the alert was created",
            "example": 1722877985000,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalInfraSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/infra-alert-configs/{id}/versions": {
      "get": {
        "description": "Find all versions of a Infra Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findInfraAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of the Infra Smart Alert configuration",
            "example": "4kxgJAXdSDiu6swQaKXrJw",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "4kxgJAXdSDiu6swQaKXrJw",
                    "created": 1724720587414,
                    "enabled": false,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "DISABLE",
                      "author": {
                        "id": "5ee8a3e8cd70020001ecb007",
                        "type": "USER",
                        "fullName": "Stan"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Infra Alert Config",
        "tags": [
          "Infrastructure Alert Configuration"
        ]
      }
    },
    "/api/events/settings/manual-close/{eventId}": {
      "post": {
        "description": "Manually close an event (issue or incident). A close notification will be sent out and the event state will be updated accordingly.",
        "operationId": "manuallyCloseEvent",
        "parameters": [
          {
            "example": "exampleEventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualCloseInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The event id refers to an event that is not open."
          },
          "400": {
            "description": "The manual close information is required."
          },
          "404": {
            "description": "The event id refers to an event that is not open."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Manually close an event.",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs": {
      "get": {
        "description": "Gets all the Mobile Smart Alert Configuration pertaining to a specific mobile app.Configurationss are sorted by creation date in descending order.",
        "operationId": "findActiveMobileAppAlertConfigs",
        "parameters": [
          {
            "description": "The ID of a specific Mobile Application.",
            "example": "tk2OLeusR3aQJD5h-rBh2A",
            "in": "query",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of Smart Alert Configuration IDs. This allows Website Smart Alert Configuration of a specific set of Configurations. This query can be repeated to use multiple IDs.",
            "example": "smRTFp08juKWtn8I",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "HTTP Status Code(s): 5XX",
                    "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                    "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                    "severity": 5,
                    "triggering": false,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "rule": {
                      "alertType": "statusCode",
                      "metricName": "httpxxx",
                      "operator": "STARTS_WITH",
                      "value": "5",
                      "aggregation": "SUM"
                    },
                    "threshold": {
                      "type": "staticThreshold",
                      "operator": ">=",
                      "value": 5,
                      "lastUpdated": 0
                    },
                    "alertChannelIds": [],
                    "granularity": 600000,
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "timeWindow": 600000
                    },
                    "customPayloadFields": [],
                    "id": "qOW5jlR5TQafXKWDIceRkA",
                    "created": 1707224011842,
                    "initialCreated": 1707224011842,
                    "readOnly": false,
                    "enabled": true,
                    "completeTagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "mobileBeacon.mobileApp.id",
                          "stringValue": "tk2OLeusR3aQJD5h-rBh2A",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "tk2OLeusR3aQJD5h-rBh2A",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "mobileBeacon.http.status",
                          "stringValue": "5",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "5",
                          "operator": "STARTS_WITH",
                          "entity": "NOT_APPLICABLE"
                        }
                      ]
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested mobile application doesn't exist."
          }
        },
        "summary": "Get all Mobile Smart Alert Configs",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Creates a new Mobile Smart Alert Configuration. ",
        "operationId": "createMobileAppAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "HTTP Status Code(s): 5XX",
                "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "rule": {
                  "alertType": "statusCode",
                  "metricName": "httpxxx",
                  "operator": "STARTS_WITH",
                  "value": "5",
                  "aggregation": "SUM"
                },
                "threshold": {
                  "type": "staticThreshold",
                  "operator": ">=",
                  "value": 5,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/MobileAppAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "HTTP Status Code(s): 5XX",
                  "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                  "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "statusCode",
                    "metricName": "httpxxx",
                    "operator": "STARTS_WITH",
                    "value": "5",
                    "aggregation": "SUM"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 5,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [],
                  "id": "qOW5jlR5TQafXKWDIceRkA",
                  "created": 1707224011842,
                  "initialCreated": 1707224011842,
                  "readOnly": false,
                  "enabled": true,
                  "completeTagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.mobileApp.id",
                        "stringValue": "tk2OLeusR3aQJD5h-rBh2A",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "tk2OLeusR3aQJD5h-rBh2A",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.http.status",
                        "stringValue": "5",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "5",
                        "operator": "STARTS_WITH",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WithMetadata"
                }
              }
            },
            "description": "Mobile Smart Alert Configuration created."
          },
          "400": {
            "description": "Invalid Configuration."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "summary": "Create Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}": {
      "delete": {
        "description": "Deletes a Mobile Smart Alert Configuration",
        "operationId": "deleteMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to delete.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mobile Smart Alert Configuration deleted."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Delete Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Gets a specific Mobile Smart Alert Configuration. This may return a deleted Configuration.",
        "operationId": "findMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to retrieve",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the Configuration was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1722877985000,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "HTTP Status Code(s): 5XX",
                  "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                  "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "statusCode",
                    "metricName": "httpxxx",
                    "operator": "STARTS_WITH",
                    "value": "5",
                    "aggregation": "SUM"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 5,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [],
                  "id": "qOW5jlR5TQafXKWDIceRkA",
                  "created": 1707224011842,
                  "initialCreated": 1707224011842,
                  "readOnly": false,
                  "enabled": true,
                  "completeTagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.mobileApp.id",
                        "stringValue": "tk2OLeusR3aQJD5h-rBh2A",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "tk2OLeusR3aQJD5h-rBh2A",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.http.status",
                        "stringValue": "5",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "5",
                        "operator": "STARTS_WITH",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "summary": "Get Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Updates an existing Mobile Smart Alert Configuration. ",
        "operationId": "updateMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to update.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "HTTP Status Code(s): 5XX",
                "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "rule": {
                  "alertType": "statusCode",
                  "metricName": "httpxxx",
                  "operator": "STARTS_WITH",
                  "value": "5",
                  "aggregation": "SUM"
                },
                "threshold": {
                  "type": "staticThreshold",
                  "operator": ">=",
                  "value": 5,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "customPayloadFields": []
              },
              "schema": {
                "$ref": "#/components/schemas/MobileAppAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "HTTP Status Code(s): 5XX",
                  "description": "Occurrences of HTTP Status Code 5XX (Server Error) is above the expectation.",
                  "mobileAppId": "tk2OLeusR3aQJD5h-rBh2A",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "statusCode",
                    "metricName": "httpxxx",
                    "operator": "STARTS_WITH",
                    "value": "5",
                    "aggregation": "SUM"
                  },
                  "threshold": {
                    "type": "staticThreshold",
                    "operator": ">=",
                    "value": 5,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [],
                  "id": "qOW5jlR5TQafXKWDIceRkA",
                  "created": 1707224011842,
                  "initialCreated": 1707224011842,
                  "readOnly": false,
                  "enabled": true,
                  "completeTagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.mobileApp.id",
                        "stringValue": "tk2OLeusR3aQJD5h-rBh2A",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "tk2OLeusR3aQJD5h-rBh2A",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "mobileBeacon.http.status",
                        "stringValue": "5",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "5",
                        "operator": "STARTS_WITH",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WithMetadata"
                }
              }
            },
            "description": "Mobile Smart Alert Configuration updated."
          },
          "204": {
            "description": "Mobile Smart Alert Configuration did not change."
          },
          "400": {
            "description": "Invalid Mobile App ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          },
          "500": {
            "description": "Internal error."
          }
        },
        "summary": "Update Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}/disable": {
      "put": {
        "description": "Disables a Mobile Smart Alert Configuration.",
        "operationId": "disableMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to disable.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mobile Smart Alert Configuration disabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Disable Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}/enable": {
      "put": {
        "description": "Enables a Mobile Smart Alert Configuration.",
        "operationId": "enableMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to enable.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mobile Smart Alert Configuration enabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Enable Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}/restore/{created}": {
      "put": {
        "description": "Restores a Mobile Smart Alert Configuration.",
        "operationId": "restoreMobileAppAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to restore.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp representing the creation time of a specific Mobile Smart Alert Configuration.",
            "example": 1707726529124,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mobile Smart Alert Configuration restored."
          },
          "400": {
            "description": "Invalid Configuration provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Restore Mobile Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}/update-baseline": {
      "post": {
        "description": "Recalculates and updates the historic baseline (static seasonal threshold) of a Configuration. The `LastUpdated` field of the Configuration is changed to the current time.",
        "operationId": "updateMobileAppHistoricBaseline",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to recalculate.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mobile Smart Alert Configuration baseline recalculated."
          },
          "400": {
            "description": "Invalid Mobile App ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "summary": "Recalculate Mobile Smart Alert Config Baseline",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/mobile-app-alert-configs/{id}/versions": {
      "get": {
        "description": "Gets all versions of a Mobile Smart Alert Configuration. This may return deleted Configurations. Configurations are sorted by creation date in descending order.",
        "operationId": "findMobileAppAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of a specific Mobile Smart Alert Configuration to retrieve.",
            "example": "qOW5jlR5TQafXKWDIceRkA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "qOW5jlR5TQafXKWDIceRkA",
                    "created": 1706686318650,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "5ee8a3e8cd70020001ecb007",
                        "type": "USER",
                        "fullName": "Stan"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "summary": "Get Mobile Smart Alert Config Versions",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs": {
      "get": {
        "description": "Gets all the Website Smart Alert Configuration pertaining to a specific website. Configurationss are sorted by creation date in descending order.",
        "operationId": "findActiveWebsiteAlertConfigs",
        "parameters": [
          {
            "description": "The ID of a specific Website",
            "example": "XIZGGVT1TX2O-0OFeT2Yig",
            "in": "query",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of Smart Alert Configuration IDs. This allows fetching of a specific set of Configurations. This query can be repeated to use multiple IDs.",
            "example": "smRTFp08juKWtn8I",
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "onLoad Time (90th) is too high",
                    "description": "The onLoad Time (90th) is above the expectation.",
                    "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                    "severity": 5,
                    "triggering": false,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "rule": {
                      "alertType": "slowness",
                      "metricName": "onLoadTime",
                      "aggregation": "P90"
                    },
                    "threshold": {
                      "type": "historicBaseline",
                      "operator": ">=",
                      "seasonality": "DAILY",
                      "baseline": [
                        [
                          0,
                          239.164,
                          6.1026
                        ],
                        [
                          600000,
                          240.0013,
                          7.4109
                        ],
                        [
                          85200000,
                          241.3653,
                          3
                        ],
                        [
                          85800000,
                          239.4759,
                          3.9012
                        ]
                      ],
                      "deviationFactor": 3,
                      "lastUpdated": 0
                    },
                    "alertChannelIds": [],
                    "granularity": 600000,
                    "timeThreshold": {
                      "type": "violationsInSequence",
                      "timeWindow": 600000
                    },
                    "customPayloadFields": [
                      {
                        "type": "staticString",
                        "key": "1",
                        "value": "2"
                      },
                      {
                        "type": "dynamic",
                        "key": "2",
                        "value": {
                          "tagName": "beacon.website.name",
                          "key": null
                        }
                      }
                    ],
                    "id": "G-h5p0znTHan2m2U3c-Z1Q",
                    "created": 1707726529124,
                    "initialCreated": 1707726529124,
                    "readOnly": false,
                    "enabled": true
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested website doesn't exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Get all Website Smart Alert Configs",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Creates a new Website Smart Alert Configuration.",
        "operationId": "createWebsiteAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "onLoad Time (90th) is too high",
                "description": "The onLoad Time (90th) is above the expectation.",
                "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "rule": {
                  "alertType": "slowness",
                  "metricName": "onLoadTime",
                  "aggregation": "P90"
                },
                "threshold": {
                  "type": "historicBaseline",
                  "operator": ">=",
                  "seasonality": "DAILY",
                  "baseline": [
                    [
                      0,
                      239.164,
                      6.1026
                    ],
                    [
                      600000,
                      240.0013,
                      7.4109
                    ],
                    [
                      85200000,
                      241.3653,
                      3
                    ],
                    [
                      85800000,
                      239.4759,
                      3.9012
                    ]
                  ],
                  "deviationFactor": 3,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "customPayloadFields": [
                  {
                    "type": "staticString",
                    "key": "1",
                    "value": "2"
                  },
                  {
                    "type": "dynamic",
                    "key": "2",
                    "value": {
                      "tagName": "beacon.website.name",
                      "key": null
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/WebsiteAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "onLoad Time (90th) is too high",
                  "description": "The onLoad Time (90th) is above the expectation.",
                  "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "slowness",
                    "metricName": "onLoadTime",
                    "aggregation": "P90"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        239.164,
                        6.1026
                      ],
                      [
                        600000,
                        240.0013,
                        7.4109
                      ],
                      [
                        85200000,
                        241.3653,
                        3
                      ],
                      [
                        85800000,
                        239.4759,
                        3.9012
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "1",
                      "value": "2"
                    },
                    {
                      "type": "dynamic",
                      "key": "2",
                      "value": {
                        "tagName": "beacon.website.name",
                        "key": null
                      }
                    }
                  ],
                  "id": "G-h5p0znTHan2m2U3c-Z1Q",
                  "created": 1707726529124,
                  "initialCreated": 1707726529124,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            },
            "description": "Website Smart Alert Configuration created."
          },
          "400": {
            "description": "Invalid configuration."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Create Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}": {
      "delete": {
        "description": "Deletes a Website Smart Alert Configuration.",
        "operationId": "deleteWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to delete.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Website Smart Alert Configuration deleted."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Delete Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Gets a specific Website Smart Alert Configuration. This may return a deleted Configuration.",
        "operationId": "findWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to retrieve.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A Unix timestamp representing a specific time the config was active. If no timestamp is provided, the latest active version will be retrieved. ",
            "example": 1722877985000,
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "onLoad Time (90th) is too high",
                  "description": "The onLoad Time (90th) is above the expectation.",
                  "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "slowness",
                    "metricName": "onLoadTime",
                    "aggregation": "P90"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        239.164,
                        6.1026
                      ],
                      [
                        600000,
                        240.0013,
                        7.4109
                      ],
                      [
                        85200000,
                        241.3653,
                        3
                      ],
                      [
                        85800000,
                        239.4759,
                        3.9012
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "1",
                      "value": "2"
                    },
                    {
                      "type": "dynamic",
                      "key": "2",
                      "value": {
                        "tagName": "beacon.website.name",
                        "key": null
                      }
                    }
                  ],
                  "id": "G-h5p0znTHan2m2U3c-Z1Q",
                  "created": 1707726529124,
                  "initialCreated": 1707726529124,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Get Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Updates an existing Website Smart Alert Configuration.",
        "operationId": "updateWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to update.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "onLoad Time (90th) is too high",
                "description": "The onLoad Time (90th) is above the expectation.",
                "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                "severity": 5,
                "triggering": false,
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": []
                },
                "rule": {
                  "alertType": "slowness",
                  "metricName": "onLoadTime",
                  "aggregation": "P90"
                },
                "threshold": {
                  "type": "historicBaseline",
                  "operator": ">=",
                  "seasonality": "DAILY",
                  "baseline": [
                    [
                      0,
                      239.164,
                      6.1026
                    ],
                    [
                      600000,
                      240.0013,
                      7.4109
                    ],
                    [
                      85200000,
                      241.3653,
                      3
                    ],
                    [
                      85800000,
                      239.4759,
                      3.9012
                    ]
                  ],
                  "deviationFactor": 3,
                  "lastUpdated": 0
                },
                "alertChannelIds": [],
                "granularity": 600000,
                "timeThreshold": {
                  "type": "violationsInSequence",
                  "timeWindow": 600000
                },
                "customPayloadFields": [
                  {
                    "type": "staticString",
                    "key": "1",
                    "value": "2"
                  },
                  {
                    "type": "dynamic",
                    "key": "2",
                    "value": {
                      "tagName": "beacon.website.name",
                      "key": null
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/WebsiteAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "onLoad Time (90th) is too high",
                  "description": "The onLoad Time (90th) is above the expectation.",
                  "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                  "severity": 5,
                  "triggering": false,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "AND",
                    "elements": []
                  },
                  "rule": {
                    "alertType": "slowness",
                    "metricName": "onLoadTime",
                    "aggregation": "P90"
                  },
                  "threshold": {
                    "type": "historicBaseline",
                    "operator": ">=",
                    "seasonality": "DAILY",
                    "baseline": [
                      [
                        0,
                        239.164,
                        6.1026
                      ],
                      [
                        600000,
                        240.0013,
                        7.4109
                      ],
                      [
                        85200000,
                        241.3653,
                        3
                      ],
                      [
                        85800000,
                        239.4759,
                        3.9012
                      ]
                    ],
                    "deviationFactor": 3,
                    "lastUpdated": 0
                  },
                  "alertChannelIds": [],
                  "granularity": 600000,
                  "timeThreshold": {
                    "type": "violationsInSequence",
                    "timeWindow": 600000
                  },
                  "customPayloadFields": [
                    {
                      "type": "staticString",
                      "key": "1",
                      "value": "2"
                    },
                    {
                      "type": "dynamic",
                      "key": "2",
                      "value": {
                        "tagName": "beacon.website.name",
                        "key": null
                      }
                    }
                  ],
                  "id": "G-h5p0znTHan2m2U3c-Z1Q",
                  "created": 1707726529124,
                  "initialCreated": 1707726529124,
                  "readOnly": false,
                  "enabled": true
                },
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            },
            "description": "Website Smart Alert Configuration updated."
          },
          "204": {
            "description": "Website Smart Alert Configuration did not change."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "422": {
            "description": "Unprocessable entity."
          },
          "500": {
            "description": "Internal error."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Update Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/disable": {
      "put": {
        "description": "Disables a Website Smart Alert Configuration.",
        "operationId": "disableWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to disable.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Website Smart Alert Configuration disabled."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Disable Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/enable": {
      "put": {
        "description": "Enables a website alert configuration.",
        "operationId": "enableWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to enable.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Website Smart Alert Configuration enabled."
          },
          "400": {
            "description": "Invalid Config ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Enable Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/restore/{created}": {
      "put": {
        "description": "Restores a deleted Website Smart Alert Configuration.",
        "operationId": "restoreWebsiteAlertConfig",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to restore.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp representing the creation time of a specific Website Smart Alert Configuration.",
            "example": 1707726529124,
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Website Smart Alert Configuration restored."
          },
          "400": {
            "description": "Invalid Configuration provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Restore Website Smart Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/update-baseline": {
      "post": {
        "description": "Recalculates and updates the historic baseline (static seasonal threshold) of a Configuration. The `LastUpdated` field of the Configuration is changed to the current time.",
        "operationId": "updateWebsiteHistoricBaseline",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to recalculate.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Website Smart Alert Configuration baseline recalculated."
          },
          "400": {
            "description": "Invalid Configuration ID provided."
          },
          "403": {
            "description": "Insufficient permissions."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Recalculate Website Smart Alert Config Baseline",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/versions": {
      "get": {
        "description": "Gets all versions of a Website Smart Alert Configuration. This may return deleted Configurations. Configurations are sorted by creation date in descending order.",
        "operationId": "findWebsiteAlertConfigVersions",
        "parameters": [
          {
            "description": "ID of a specific Website Smart Alert Configuration to retrieve.",
            "example": "G-h5p0znTHan2m2U3c-Z1Q",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "G-h5p0znTHan2m2U3c-Z1Q",
                    "created": 1706709825308,
                    "enabled": true,
                    "deleted": false,
                    "changeSummary": {
                      "changeType": "CREATE",
                      "author": {
                        "id": "5ee8a3e8cd70020001ecb007",
                        "type": "USER",
                        "fullName": "Stan"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested Configuration does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureWebsiteSmartAlerts"
            ]
          }
        ],
        "summary": "Get Website Smart Alert Config Versions. ",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/{eventId}": {
      "get": {
        "description": "Gets a specific event.",
        "operationId": "getEvent",
        "parameters": [
          {
            "description": "ID of a specific Event to retrieve.",
            "example": "LZOGo1lXR4WeCB2ftgtGGQ",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "eventId": "LZOGo1lXR4WeCB2ftgtGGQ",
                  "start": 1706783553000,
                  "end": 1706783553000,
                  "type": "change",
                  "state": "closed",
                  "problem": "Pulled",
                  "detail": "Successfully pulled image \"registry.redhat.io/redhat/redhat-marketplace-index:v4.14\" in 830.603468ms (830.624088ms including waiting)",
                  "severity": -2,
                  "entityName": "Kubernetes Pod",
                  "entityLabel": "openshift-marketplace/redhat-marketplace-qbn8f (pod)",
                  "entityType": "INFRASTRUCTURE",
                  "fixSuggestion": "Successfully pulled image \"registry.redhat.io/redhat/redhat-marketplace-index:v4.14\" in 830.603468ms (830.624088ms including waiting)",
                  "snapshotId": "xLziJivLyeepxBf0UnNR1ff-9MI"
                },
                "schema": {
                  "$ref": "#/components/schemas/EventResult"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "description": "Insufficient permissions."
          },
          "404": {
            "description": "The requested event does not exist."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Event",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/host-agent": {
      "get": {
        "operationId": "searchHostAgents",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "  {\n    \"items\": [\n        {\n            \"snapshotId\": \"iRsnjcH9cls2rlx3wm8ENPapljk\",\n            \"plugin\": \"instanaAgent\",\n            \"from\": 1706712590000,\n            \"to\": null,\n            \"tags\": [],\n            \"label\": \"Instana Agent @ ip-10-255-207-205\",\n            \"host\": \"EC2-i-0a8be85269f7e2b92\"\n        },\n    ]\n}\n",
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Query host agent snapshots",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/configuration": {
      "post": {
        "operationId": "updateConfigurationByQuery",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigurationUpdate"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Update agent configuration by query",
        "tags": [
          "Host Agent"
        ],
        "description": "This endpoint can be used to initialize or change configuration management settings for all agents selected by the given Dynamic Focus Query.\n\n"
      }
    },
    "/api/host-agent/{hostId}/configuration": {
      "post": {
        "operationId": "updateConfigurationByHost",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigurationUpdate"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Update agent configuration by host",
        "tags": [
          "Host Agent"
        ],
        "description": "This endpoint can be used to initialize or change configuration management settings for a specific host agent.\n\n"
      }
    },
    "/api/host-agent/{hostId}/logs": {
      "get": {
        "operationId": "getAgentLogs",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "download",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "file",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Agent download logs",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/{hostId}/support-info": {
      "get": {
        "operationId": "getAgentSupportInformation",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "supportInfoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Agent download support information",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/{hostId}/update": {
      "post": {
        "operationId": "updateAgent",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Agent update",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/{id}": {
      "get": {
        "operationId": "getAgentSnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "  {\n    \"snapshotId\": \"snapshot id\",\n    \"plugin\": \"instanaAgent\",\n    \"from\": 1706791431000,\n    \"tags\": [],\n    \"label\": \"Instana Agent @ ip-10-255-207-205\",\n    \"entityId\": {\n        \"host\": \"EC2-i-0a8be85269f7e2b92\",\n        \"pluginId\": \"plugin id\",\n        \"steadyId\": \"self\"\n    },\n    \"data\": {\n        \"memory.nativeTotal\": 134217728,\n        \"capabilities\": [\n            \"gitops\",\n            \"logdownload\",\n            \"agentprofiler\",\n            \"agentSupportInfo\",\n            {\n                \"java-trace-commands\": [\n                    \"get-agent-statistics\",\n                    \"get-loader-statistics\",\n                    \"get-tracer-statistics\",\n                    \"get-instrumentation-install-messages\",\n                    \"get-instrumentation-install-errors\",\n                    \"get-instrumentation-runtime-errors\",\n                    \"get-instrumented-classes\",\n                    \"get-raw-matchers\",\n                    \"get-weak-concurrent-maps\",\n                    \"log-reset\",\n                    \"log-trace-context\",\n                    \"log-rejected\",\n                    \"start-debug-tracer\",\n                    \"stop-debug-tracer\"\n                ]\n            },\n            \"log4j-safe-lib\"\n        ],\n        \"origin\": \"public_docker\",\n        \"startedAt\": 1705917107361,\n        \"memory.total\": 181805056,\n        \"pid\": \"29001\",\n        \"mode\": 2,\n        \"hostname\": \"ip-10-255-207-205\",\n        \"java\": {\n            \"vmversion\": \"25.392-b08\",\n            \"version\": \"1.8.0_392\",\n            \"vmname\": \"vm name\",\n            \"vmvendor\": \"vendor name\"\n        },\n        \"git\": {\n            \"present\": true,\n            \"initialized\": false\n        },\n        \"hasCpuLoad\": true,\n        \"updateMode\": \"Auto\",\n        \"log.counts.byMessage\": {\n            \"?:?\": \"WARN ? \"Can no longer query container metrics for k8s.io: 8ac777f1ca6231299050ee5482ecac6c1747b2545b3b1d890f69d0a849b3adb4 ... requesting sensor shutdown\"\"\n        },\n        \"loglevel\": \"INFO\",\n        \"agentVersion\": \"Latest\",\n        \"metrics\": true,\n        \"boot\": \"1.2.30\",\n        \"pids\": [\n            \"14096\",\n            \"19502\",\n            \"2001\",\n            \"29812\",\n            \"981\",\n            \"28411\",\n            \"29522\",\n            \"1267\",\n            \"2475\",\n            \"27182\"\n        ],\n        \"user\": \"root\",\n        \"logAsRate\": true\n    }\n}\n",
                "schema": {
                  "$ref": "#/components/schemas/SnapshotItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get host agent snapshot details",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entities": {
      "post": {
        "description": "This endpoint retrieves entities for a given entity type along with the requested metrics.",
        "operationId": "getEntities",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves a JVM entity labeled \"custom-metrics.jar\" with metrics for memory used and blocked threads (both using a one hour granularity and a one minute granularity).": {
                  "description": "This example retrieves a JVM entity labeled \"custom-metrics.jar\" with metrics for memory used and blocked threads (both using a one hour granularity and a one minute granularity).",
                  "value": {
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "entity": "NOT_APPLICABLE",
                      "name": "label",
                      "operator": "EQUALS",
                      "value": "custom-metrics.jar"
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    },
                    "pagination": {
                      "retrievalSize": 200
                    },
                    "type": "jvmRuntimePlatform",
                    "metrics": [
                      {
                        "metric": "memory.used",
                        "granularity": 3600000,
                        "aggregation": "MAX"
                      },
                      {
                        "metric": "memory.used",
                        "granularity": 600000,
                        "aggregation": "MAX"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetInfrastructureQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureEntitiesResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get infrastructure entities",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entity-groups": {
      "post": {
        "description": "This endpoint groups entities for a given entity type and aggregates metrics for these groups.",
        "operationId": "getEntityGroups",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves JVM entities grouped with the same host name ordered by label, aggregating memory used and blocked threads (both using a one hour granularity and a one minute granularity).": {
                  "description": "This example retrieves JVM entities grouped with the same host name ordered by label, aggregating memory used and blocked threads (both using a one hour granularity and a one minute granularity).",
                  "value": {
                    "timeFrame": {
                      "to": 1674075565075,
                      "windowSize": 3600000
                    },
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "pagination": {
                      "retrievalSize": 20
                    },
                    "groupBy": [
                      "host.name"
                    ],
                    "type": "jvmRuntimePlatform",
                    "metrics": [
                      {
                        "metric": "memory.used",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "memory.used",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      }
                    ],
                    "order": {
                      "by": "label",
                      "direction": "ASC"
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetInfrastructureGroupsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureGroupsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped infrastructure entities with aggregated metrics",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entity-types": {
      "post": {
        "description": "This endpoint retrieves available entity types.",
        "operationId": "getAvailablePlugins",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves all entity types.": {
                  "description": "This example retrieves all entity types.",
                  "value": {
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetAvailablePluginsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailablePlugins"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available entity types",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/metrics": {
      "post": {
        "description": "This endpoint retrieves available metrics for an entity type.",
        "operationId": "getAvailableMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves all available metrics for JVM entities.": {
                  "description": "This example retrieves all available metrics for JVM entities.",
                  "value": {
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    },
                    "query": "",
                    "type": "jvmRuntimePlatform"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetAvailableMetricsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableMetrics"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available metrics",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/metrics/{plugin}": {
      "get": {
        "operationId": "getInfrastructureCatalogMetrics",
        "parameters": [
          {
            "in": "path",
            "name": "plugin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricInstance"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get metric catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions of the requested plugin.\n\n### Path Parameters:\n\n**plugin** The plugin id from [available plugins](#operation/getInfrastructureCatalogPlugins)\n\n### Optional Parameters:\n\n**filter** You can restrict the returned metric definitions by passing a filter.\n\n* `custom` to retrieve custom metric definitions only.\n* `builtin` to retrieve built-in metric definitions only.\n"
      }
    },
    "/api/infrastructure-monitoring/catalog/payloads/{pluginId}": {
      "get": {
        "operationId": "getAvailablePayloadKeysByPluginId",
        "parameters": [
          {
            "description": "plugin id",
            "example": "db2Database",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPayloadKeysResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get payload keys for plugin",
        "tags": [
          "Infrastructure Catalog"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/plugins": {
      "get": {
        "operationId": "getInfrastructureCatalogPlugins",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PluginResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get plugin catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available plugin ids for your monitored system.\n"
      }
    },
    "/api/infrastructure-monitoring/catalog/plugins-with-custom-metrics": {
      "get": {
        "operationId": "getInfrastructureCatalogPluginsWithCustomMetrics",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PluginResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all plugins with custom metrics catalog",
        "tags": [
          "Infrastructure Catalog"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/search": {
      "get": {
        "operationId": "getInfrastructureCatalogSearchFields",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchFieldResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "get search field catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available search keywords for dynamic focus queries.\n\nThese search fields can be accessed via lucene queries. Each field belongs to a context, e.g. to entity, trace or event data.\nSome fields contain a set of possible fixed values, in this case a deviant value is invalid.\n\n```\n?query={keyword}:{value}\n```\n"
      }
    },
    "/api/infrastructure-monitoring/catalog/tags": {
      "get": {
        "description": "This endpoint retrieves the tag catalog.",
        "operationId": "getTagCatalogAll",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available tags",
        "tags": [
          "Infrastructure Catalog"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/tags/{plugin}": {
      "get": {
        "description": "This endpoint retrieves the tag catalog filtered by plugin.",
        "operationId": "getTagCatalog",
        "parameters": [
          {
            "description": "plugin",
            "example": "host",
            "in": "path",
            "name": "plugin",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available tags for a particular plugin",
        "tags": [
          "Infrastructure Catalog"
        ]
      }
    },
    "/api/infrastructure-monitoring/graph/related-hosts/{snapshotId}": {
      "get": {
        "operationId": "getRelatedHosts",
        "parameters": [
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "ZoKkksp277FMLSXIghPKdjZcvfE"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Related hosts",
        "tags": [
          "Infrastructure Topology"
        ]
      }
    },
    "/api/infrastructure-monitoring/metrics": {
      "post": {
        "operationId": "getInfrastructureMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCombinedMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get infrastructure metrics",
        "tags": [
          "Infrastructure Metrics"
        ],
        "description": "- The **offline** parameter is used to allow deeper visibility into snapshots. Set to `false`, the query will return all snapshots that are still available on the given **to** timestamp. However, set to `true`, the query will return all snapshots that have been active within the time window, this must at least include the online result and snapshots terminated within this time.\r\n"
      }
    },
    "/api/infrastructure-monitoring/monitoring-state": {
      "get": {
        "operationId": "getMonitoringState",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "hasEntities": true,
                  "hostCount": 122,
                  "serverlessCount": 7
                },
                "schema": {
                  "$ref": "#/components/schemas/MonitoringState"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Monitored host count",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/payloads/{snapshotId}/{payloadKey}": {
      "get": {
        "operationId": "getPluginPayload",
        "parameters": [
          {
            "description": "Snapshot id.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payload key. Use `/api/infrastructure-monitoring/catalog/payloads` to retrieve the list of possible keys.",
            "example": "topqueries",
            "in": "path",
            "name": "payloadKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End of timeframe expressed as the Unix epoch time in milliseconds.",
            "example": 1689018652000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Window size in milliseconds.",
            "example": 3600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "raw_payload": [
                    {
                      "DEFERRED_VALUE": "64",
                      "DEFERRED_VALUE_FLAGS": "NONE",
                      "VALUE": "64",
                      "NAME": "app_ctl_heap_sz",
                      "VALUE_FLAGS": "NONE"
                    }
                  ],
                  "timestamp": 1707833086000
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a payload for a snapshot",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/snapshots": {
      "get": {
        "operationId": "getSnapshots",
        "parameters": [
          {
            "description": "query to use to filter snapshot retrieval",
            "example": "entity.zone:myZone*",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "end of timeframe expressed as the Unix epoch time in milliseconds",
            "example": 1689018652000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "windowSize in milliseconds",
            "example": 3600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "maximum number of snapshots to retrieve",
            "example": 100,
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "entity type",
            "example": "host",
            "in": "query",
            "name": "plugin",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "retrieve snapshots which were online during the timeframe, otherwise, return only snapshot which were online at the end of the timeframe",
            "example": false,
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "snapshotId": "ZoKkksp277FMLSXIghPKdjZcvfE",
                      "plugin": "host",
                      "from": 1706785156000,
                      "to": null,
                      "tags": [],
                      "label": "ip-10-255-200-30.instana.io",
                      "host": "EC2-i-03afb0ac5188f57f3"
                    },
                    {
                      "snapshotId": "ONRQyD-iztZX6QS9QnjKbFFy-oI",
                      "plugin": "host",
                      "from": 1706756437000,
                      "to": null,
                      "tags": [],
                      "label": "ip-10-255-218-45.instana.io",
                      "host": "EC2-i-091cba86bac58cc77"
                    },
                    {
                      "snapshotId": "0GvRrdko-0Ds9OWPzJVEm0j0vTA",
                      "plugin": "host",
                      "from": 1706785131000,
                      "to": null,
                      "tags": [],
                      "label": "ip-10-255-203-60.instana.io",
                      "host": "EC2-i-0d2743935b9596c85"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Search snapshots",
        "tags": [
          "Infrastructure Resources"
        ],
        "description": "These APIs can be used to retrieve information about hosts, processes, JVMs and other entities that we are calling snapshots. A snapshot represents static information about an entity as it was at a specific point in time. To clarify:\r\n**Static information** is any information which is seldom changing, e.g. process IDs, host FQDNs or a list of host hard disks. The counterpart to static information are metrics which have a much higher change rate, e.g. host CPU usage or JVM garbage collection activity. Snapshots only contain static information.\r\n- Snapshots are **versioned** and represent an entity's state for a specific point in time. While snapshots only contain static information, even that information may change. For example you may add another hard disk to a server. For such a change, a new snapshot would be created.\r\n- The **size** parameter can be used in order to limit the maximum number of retrieved snapshots.\r\n- The **offline** parameter is used to allow deeper visibility into snapshots. Set to `false`, the query will return all snapshots that are still available on the given **to** timestamp. However, set to `true`, the query will return all snapshots that have been active within the time window, this must at least include the online result and snapshots terminated within this time.\r\n"
      },
      "post": {
        "description": "This endpoint retrieves detail information for one or more snapshots. timeFrame defaults to the last 10 minutes if not specified.",
        "operationId": "postSnapshots",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves the detail information for two snapshots.": {
                  "description": "This example retrieves the detail information for two snapshots.",
                  "value": {
                    "snapshotIds": [
                      "AB3DeFGHIJkLm9OpQrstUVwxY_z",
                      "ZY4XwVUTSRqPo8MlKjihGFedC_a"
                    ],
                    "timeFrame": {
                      "to": 1689018652000,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetSnapshotsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSnapshotsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get snapshot details for multiple snapshots",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/snapshots/{id}": {
      "get": {
        "operationId": "getSnapshot",
        "parameters": [
          {
            "description": "snapshot id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "end of timeframe expressed as the Unix epoch time in milliseconds",
            "example": 1689018652000,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "windowSize in milliseconds",
            "example": 3600000,
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "snapshotId": "ZoKkksp277FMLSXIghPKdjZcvfE",
                  "plugin": "host",
                  "from": 1706785156000,
                  "tags": [],
                  "label": "ip-10-255-200-30.instana.io",
                  "entityId": {
                    "host": "EC2-i-03afb0ac5188f57f3",
                    "pluginId": "com.instana.forge.infrastructure.os.host.Host",
                    "steadyId": "h"
                  },
                  "data": {
                    "interfaces": {
                      "eth0": {
                        "addresses": [
                          {
                            "subnet": "10.255.200.0",
                            "fqdn": [
                              "10-255-200-30.instana-agent-headless.instana-agent.svc.cluster.local",
                              "10-255-200-30.instana-agent.instana-agent.svc.cluster.local",
                              "10-255-200-30.prometheus-prometheus-node-exporter.prometheus.svc.cluster.local"
                            ],
                            "ip": "10.255.200.30"
                          }
                        ],
                        "mac": "06:00:E9:32:99:C5"
                      },
                      "eth1": {
                        "addresses": [
                          {
                            "subnet": "10.255.200.0",
                            "ip": "10.255.205.14"
                          }
                        ],
                        "mac": "06:93:A2:5B:97:D9"
                      }
                    },
                    "cpu.model": "AMD EPYC 7R13 Processor",
                    "fqdn": "ip-10-255-200-30.instana.io",
                    "bootId": "3b7e2fe9-7cff-42bb-9879-6b856582fa27",
                    "os.arch": "amd64",
                    "start": 1694791889000,
                    "memory.total": 65994727424,
                    "openFiles.max": 6441978,
                    "filesystems": {
                      "/dev/nvme0n1p1": {
                        "options": "rw,noatime,attr2,inode64,logbufs=8,logbsize=32k,noquota",
                        "mounts": [
                          "/var/lib/kubelet/pods/dc320aef-ef0e-499a-8eb2-56cb454c22d6/volume-subpaths/configuration/instana-agent/11",
                          "/var/lib/kubelet/pods/dc320aef-ef0e-499a-8eb2-56cb454c22d6/volume-subpaths/configuration/instana-agent/14",
                          "/var/lib/kubelet/pods/dc320aef-ef0e-499a-8eb2-56cb454c22d6/volume-subpaths/additional-backend-2/instana-agent/12",
                          "/var/lib/kubelet/pods/dc320aef-ef0e-499a-8eb2-56cb454c22d6/volume-subpaths/additional-backend-3/instana-agent/13",
                          "/"
                        ],
                        "systype": "xfs",
                        "icapacity": 28180816,
                        "mount": "/",
                        "capacity": 83873772
                      }
                    },
                    "os.version": "5.10.186-179.751.amzn2.x86_64",
                    "tags": [],
                    "cpu.count": 8,
                    "hostname": "ip-10-255-200-30",
                    "machineId": "ec2f95ff87a4a46d4672835afb9e2bb5",
                    "systemSerialNumber": "ec2f95ff-87a4-a46d-4672-835afb9e2bb5",
                    "os.name": "Linux"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SnapshotItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get snapshot details",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/software/versions": {
      "get": {
        "description": "Retrieve information about the software that are sensed by the agent remotely, natively, or both. This includes runtime and package manager information.\n\nThe `plugin`, `name`, `version`, `discoveryType`, `softwareType` and `vendor` parameters are optional filters that can be used to reduce the result data set.\nThe `snapshotId` in `usedBy` is either of host or container, if available",
        "operationId": "softwareVersions",
        "parameters": [
          {
            "in": "query",
            "name": "time",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "discoveryType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "softwareType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "plugin",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "[\n  {\n    \"name\": \"errno\",\n    \"plugin\": \"nodeJsRuntimePlatform\",\n    \"version\": \"0.1.8\",\n    \"discoveryType\": \"NATIVE_SENSOR\",\n    \"softwareType\": \"DEPENDENCY\",\n    \"vendor\": \"\",\n    \"metadata\": {},\n    \"usedBy\": [\n      {\n        \"host\": \"instana-centos1.fyre.ibm.com\",\n        \"container\": null,\n        \"process\": \"instana-payload-simulator v1.0.0\",\n        \"snapshotId\": \"nQHb946M0I_rzRNuTFLVVSUorr8\"\n      }\n    ]\n  },\n  {\n    \"name\": \"OpenJDK 64-Bit Server VM\",\n    \"plugin\": \"jvmRuntimePlatform\"\n    \"version\": \"17.0.1\",\n    \"discoveryType\": \"NATIVE_SENSOR\",\n    \"softwareType\": \"RUNTIME\",\n    \"vendor\": \"Azul Systems, Inc.\",\n    \"metadata\": {},\n    \"usedBy\": [\n      {\n        \"host\": \"lima-rancher-desktop\",\n        \"container\": \"elasticsearch/elasticsearch:7.16.2\",\n        \"process\": \"docker-cluster: 0c930ef6c5af\",\n        \"snapshotId\": \"cn06irROoHrvrDEa4fWw9vD6yhc\"\n      }\n    ]\n  }\n]\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SoftwareVersion"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get installed software",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/topology": {
      "get": {
        "operationId": "getTopology",
        "parameters": [
          {
            "in": "query",
            "name": "includeData",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "nodes": [
                    {
                      "id": "nYlAch5BEuXdyzQ1Q1V3QvW9jpY",
                      "plugin": "kubernetesPod",
                      "label": "openshift-console/downloads-6b8f4d6dfc-zv2tx (pod)",
                      "entityId": {
                        "host": "",
                        "pluginId": "com.instana.forge.infrastructure.paas.kubernetes.derivedentity.pod.KubernetesPod",
                        "steadyId": "b3e550f4-5754-4388-bd44-025ecd9f057e"
                      }
                    }
                  ],
                  "edges": [
                    {
                      "source": "i5wh2JGMSHMiSt_TH2sHo1rNLaQ",
                      "destination": "k67B5nn-7mpx6i0oCEiIWvP46ko",
                      "relation": "in"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Topology"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Gets the infrastructure topology",
        "tags": [
          "Infrastructure Topology"
        ]
      }
    },
    "/api/instana/health": {
      "get": {
        "operationId": "getHealthState",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "health": "GREEN",
                  "messages": []
                },
                "schema": {
                  "$ref": "#/components/schemas/HealthState"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Basic health traffic light",
        "tags": [
          "Health"
        ],
        "description": "The returned JSON object will provide a health property which contains a simple traffic light (GREEN/YELLO/RED). For any non-Green-state a list \nof reasons will be provided in the messages array.\n\nPossible messages:\n* No data being processed\n* No data arriving from agents\n"
      }
    },
    "/api/instana/usage/api": {
      "get": {
        "operationId": "getAllUsage",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage by customer",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/api/{day}/{month}/{year}": {
      "get": {
        "operationId": "getUsagePerDay",
        "parameters": [
          {
            "in": "path",
            "name": "day",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage day / month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/api/{month}/{year}": {
      "get": {
        "operationId": "getUsagePerMonth",
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/hosts/{day}/{month}/{year}": {
      "get": {
        "operationId": "getHostsPerDay",
        "parameters": [
          {
            "in": "path",
            "name": "day",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "Host count day / month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/hosts/{month}/{year}": {
      "get": {
        "operationId": "getHostsPerMonth",
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "Host count month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "branch": "develop",
                  "commit": "862420fa8696bd5106224f340a1f93d3c7d86409",
                  "imageTag": "3.267.99-0"
                },
                "schema": {
                  "$ref": "#/components/schemas/InstanaVersionInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "API version information",
        "tags": [
          "Health"
        ]
      }
    },
    "/api/mobile-app-monitoring/analyze/beacon-groups": {
      "post": {
        "operationId": "getMobileAppBeaconGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "metrics": [
                  {
                    "metric": "beaconCount",
                    "aggregation": "SUM",
                    "granularity": 60
                  }
                ],
                "group": {
                  "groupbyTag": "mobileBeacon.view.name"
                },
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "mobileBeacon.mobileApp.name",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "robot-warehouse"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "mobileBeacon.platform",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "iOS"
                    }
                  ]
                },
                "timeFrame": {
                  "to": null,
                  "windowSize": 3600000
                },
                "type": "SESSION_START"
              },
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppBeaconGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "name": "Products",
                      "earliestTimestamp": 1707023340857,
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1707026879283,
                        "offset": 1
                      },
                      "metrics": {
                        "beaconCount.sum.60": [
                          [
                            1707023340000,
                            47
                          ],
                          [
                            1707023400000,
                            43
                          ]
                        ]
                      }
                    }
                  ],
                  "canLoadMore": false,
                  "totalHits": 1,
                  "totalRepresentedItemCount": 1,
                  "totalRetainedItemCount": 1,
                  "adjustedTimeframe": {
                    "windowSize": 3540000,
                    "to": 1707026880000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MobileAppBeaconGroupsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped beacon metrics",
        "tags": [
          "Mobile App Analyze"
        ]
      }
    },
    "/api/mobile-app-monitoring/analyze/beacons": {
      "post": {
        "operationId": "getMobileAppBeacons",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "tagFilters": [
                  {
                    "entity": "NOT_APPLICABLE",
                    "name": "mobileBeacon.mobileApp.name",
                    "operator": "EQUALS",
                    "value": "robot-warehouse"
                  }
                ],
                "timeFrame": {
                  "to": null,
                  "windowSize": 60000
                },
                "type": "SESSION_START"
              },
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppBeacons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "beacon": {
                        "agentVersion": "demoLoadGenerator",
                        "mobileAppId": "Example mobile app",
                        "mobileAppLabel": "robot-warehouse",
                        "timestamp": 1707025556799,
                        "clockSkew": 450,
                        "ingestionTime": 1707025557248,
                        "duration": 0,
                        "batchSize": 1,
                        "sessionId": "d47e3f35-5bf4-481c-ab67-4647bc434fda",
                        "beaconId": "c43d78282ee5b5cf",
                        "parentBeaconId": "",
                        "backendTraceId": "",
                        "type": "sessionStart",
                        "view": "Products",
                        "customEventName": "",
                        "meta": {
                          "feature.testGroup": "beta"
                        },
                        "userIp": "94.134.0.0",
                        "userId": "Example User Id",
                        "userSessionId": "",
                        "userName": "Example User Name",
                        "userEmail": "example@example.com",
                        "userLanguages": [
                          "de-DE"
                        ],
                        "useFeatures": [],
                        "bundleIdentifier": "com.example.shop",
                        "appBuild": "aba9031kl",
                        "appVersion": "1.41.4",
                        "platform": "Android",
                        "osName": "Android",
                        "osVersion": "10",
                        "deviceManufacturer": "Google",
                        "deviceModel": "Google Pixel 4XL",
                        "deviceHardware": "Google Pixel 4XL",
                        "viewportWidth": 320,
                        "viewportHeight": 680,
                        "carrier": "Deutsche Telekom",
                        "connectionType": "wifi",
                        "effectiveConnectionType": "3g",
                        "latitude": 50.9865,
                        "longitude": 6.9304,
                        "accuracyRadius": 20,
                        "city": "Cologne",
                        "subdivision": "North Rhine-Westphalia",
                        "subdivisionCode": "NW",
                        "country": "Germany",
                        "countryCode": "DE",
                        "continent": "Europe",
                        "continentCode": "EU",
                        "httpCallUrl": "",
                        "httpCallOrigin": "",
                        "httpCallPath": "",
                        "httpCallMethod": "",
                        "httpCallHeaders": {},
                        "errorCount": 0,
                        "errorMessage": "",
                        "errorId": "",
                        "errorType": "",
                        "stackTrace": "",
                        "stackTraceLine": [],
                        "parsedStackTrace": ""
                      },
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1707025557248,
                        "offset": 1
                      }
                    }
                  ],
                  "canLoadMore": false,
                  "totalHits": 70,
                  "totalRepresentedItemCount": 70,
                  "totalRetainedItemCount": 70,
                  "adjustedTimeframe": {
                    "windowSize": 60000,
                    "to": 1707025560000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MobileAppBeaconResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all beacons",
        "tags": [
          "Mobile App Analyze"
        ]
      }
    },
    "/api/mobile-app-monitoring/catalog": {
      "get": {
        "operationId": "getMobileAppTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "beaconType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "mobileBeacon.carrier",
                    "type": "STRING",
                    "category": "MOBILE",
                    "canApplyToSource": false,
                    "canApplyToDestination": false,
                    "sourceValueAvailableFrom": 0
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "When the combination of beaconType and useCase is unsupported/unknown."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get mobile app tag catalog",
        "tags": [
          "Mobile App Catalog"
        ]
      }
    },
    "/api/mobile-app-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getMobileAppMetricCatalog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "metricId": "beaconCount",
                    "label": "Beacon count",
                    "formatter": "NUMBER",
                    "description": "How many beacons matching a filter were recorded.",
                    "aggregations": [
                      "SUM"
                    ],
                    "defaultAggregation": null,
                    "beaconTypes": [
                      "sessionStart",
                      "viewChange",
                      "custom",
                      "httpRequest",
                      "crash"
                    ],
                    "pathToValueInBeacon": null,
                    "tagName": null
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MobileAppMonitoringMetricDescription"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Metric catalog",
        "tags": [
          "Mobile App Catalog"
        ]
      }
    },
    "/api/mobile-app-monitoring/catalog/tags": {
      "get": {
        "operationId": "getAllMobileAppCatalogTags",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "mobileBeacon.view.name",
                    "type": "STRING",
                    "category": "MOBILE",
                    "canApplyToSource": false,
                    "canApplyToDestination": false,
                    "sourceValueAvailableFrom": 0
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all existing mobile app tags",
        "tags": [
          "Mobile App Catalog"
        ]
      }
    },
    "/api/mobile-app-monitoring/config": {
      "get": {
        "operationId": "getMobileAppConfig",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "example_id",
                    "name": "example_mobile_app"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MobileApp"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get configured mobile apps",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "post": {
        "operationId": "postMobileAppConfig",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "example_id",
                    "name": "example_mobile_app"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/MobileApp"
                }
              }
            },
            "description": "Mobile App successfully configured"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured mobile app."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Configure new mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}": {
      "delete": {
        "operationId": "deleteMobileAppConfig",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Mobile app successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Remove mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "renameMobileAppConfig",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "example_id",
                    "name": "example_mobile_app"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/MobileApp"
                }
              }
            },
            "description": "Mobile app successfully renamed"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured mobile app."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Rename mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/geo-location": {
      "get": {
        "operationId": "getMobileAppGeoLocationConfiguration",
        "parameters": [
          {
            "description": "Mobile App ID",
            "example": "iiLxP1zaTuCS7fyk9m4W0W",
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "geoDetailRemoval": "NO_REMOVAL",
                  "geoMappingRules": []
                },
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get geo location configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "updateMobileAppGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeoLocationConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Update geo location configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/geo-mapping-rules": {
      "get": {
        "operationId": "getMobileAppGeoMappingRules",
        "parameters": [
          {
            "description": "Mobile App ID",
            "example": "iiLxP1zaTuCS7fyk9m4W0W",
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get custom geo mapping rules for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "setMobileAppGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Set custom geo mapping rules for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/ip-masking": {
      "get": {
        "operationId": "getMobileAppIpMaskingConfiguration",
        "parameters": [
          {
            "description": "Mobile App ID",
            "example": "iiLxP1zaTuCS7fyk9m4W0W",
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "ipMasking": "DEFAULT"
                },
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get IP masking configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "updateMobileAppIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpMaskingConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Update IP masking configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/metrics": {
      "post": {
        "deprecated": true,
        "operationId": "getMobileAppBeaconMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileAppMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/mobile-app-monitoring/session": {
      "get": {
        "operationId": "getSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "matrix"
          },
          {
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "matrix"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "agentVersion": "demoLoadGenerator",
                    "mobileAppId": "example mobile app id",
                    "mobileAppLabel": "robot-warehouse",
                    "timestamp": 1707025019211,
                    "clockSkew": 460,
                    "ingestionTime": 1707025019670,
                    "duration": 0,
                    "batchSize": 1,
                    "sessionId": "18989f85-1fe6-4270-86da-f17487b18c26",
                    "beaconId": "659302486df75422",
                    "parentBeaconId": "",
                    "backendTraceId": "",
                    "type": "sessionStart",
                    "view": "Products",
                    "customEventName": "",
                    "meta": {
                      "feature.testGroup": "sigma"
                    },
                    "userIp": "149.200.0.0",
                    "userId": "Example user id",
                    "userSessionId": "",
                    "userName": "Example user name",
                    "userEmail": "example@example.com",
                    "userLanguages": [
                      "ar-JO"
                    ],
                    "useFeatures": [],
                    "bundleIdentifier": "com.example.shop",
                    "appBuild": "aba9031kl",
                    "appVersion": "1.42.3",
                    "platform": "iOS",
                    "osName": "iOS",
                    "osVersion": "16.7.1",
                    "deviceManufacturer": "Apple",
                    "deviceModel": "iPhone 13",
                    "deviceHardware": "iPhone14,5",
                    "viewportWidth": 320,
                    "viewportHeight": 680,
                    "carrier": "Orange",
                    "connectionType": "wifi",
                    "effectiveConnectionType": "3g",
                    "latitude": 31.9555,
                    "longitude": 35.9435,
                    "accuracyRadius": 20,
                    "city": "Amman",
                    "subdivision": "Amman Governorate",
                    "subdivisionCode": "AM",
                    "country": "Jordan",
                    "countryCode": "JO",
                    "continent": "Asia",
                    "continentCode": "AS",
                    "httpCallUrl": "",
                    "httpCallOrigin": "",
                    "httpCallPath": "",
                    "httpCallMethod": "",
                    "httpCallHeaders": {},
                    "errorCount": 0,
                    "errorMessage": "",
                    "errorId": "",
                    "errorType": "",
                    "stackTrace": "",
                    "stackTraceLine": [],
                    "parsedStackTrace": ""
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MobileAppMonitoringBeacon"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Missing session id or missing timestamp"
          },
          "404": {
            "description": "Mobile app not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get session",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/mobile-app-monitoring/v2/metrics": {
      "post": {
        "operationId": "getMobileAppBeaconMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "metrics": [
                  {
                    "metric": "beaconCount",
                    "aggregation": "SUM",
                    "granularity": 60
                  }
                ],
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "mobileBeacon.mobileApp.name",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "robot-warehouse"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "mobileBeacon.view.name",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "Products"
                    }
                  ]
                },
                "timeFrame": {
                  "to": null,
                  "windowSize": 3600000
                },
                "type": "SESSION_START"
              },
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppMetricsV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "metrics": {
                    "beaconCount.sum.60": [
                      [
                        1707026940000,
                        75
                      ],
                      [
                        1707027000000,
                        75
                      ]
                    ]
                  },
                  "adjustedTimeframe": {
                    "windowSize": 3540000,
                    "to": 1707030480000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/releases": {
      "get": {
        "operationId": "getAllReleases",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "Tiu16hLCTniHDtHb_uDV1w",
                    "name": "demo-app/main-**",
                    "start": 1709091782000,
                    "lastUpdated": 1709091782533
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseWithMetadata"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Get all releases",
        "tags": [
          "Releases"
        ],
        "description": "This endpoint exposes the Releases functionality.\n\nThese APIs can be used to create, update, delete and fetch already existing releases.\n\n## Mandatory Parameters:\n\n**releaseId:** A unique identifier assigned to each release.\n\n## Optional Parameters:\n\n**name:** Name of the exact release you want to retrieve, eg. \"Release-161\", \"Release-162\".\n\n**start:** Start time of the particular release (as UNIX timestamp in milliseconds).\n\n**from:** Filters the releases to retrieve only the releases which have \"start\" time greater than or equal to this value (as UNIX timestamp in milliseconds).\n\n**to:** Filters the releases to retrieve only the releases which have \"start\" time lesser than or equal to this value (as UNIX timestamp in milliseconds).\n\n**maxResults:** Maximum number of releases to be retrieved.\n\n## Defaults:\n\n**from, to, maxResults:** By default these parameters are not set.  "
      },
      "post": {
        "operationId": "postRelease",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Release"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Create release",
        "tags": [
          "Releases"
        ]
      }
    },
    "/api/releases/{releaseId}": {
      "delete": {
        "operationId": "deleteRelease",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Delete release",
        "tags": [
          "Releases"
        ]
      },
      "get": {
        "operationId": "getRelease",
        "parameters": [
          {
            "description": "Release ID",
            "example": "XK1e1TF3T9SHKugndn_soQ",
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "XK1e1TF3T9SHKugndn_soQ",
                  "name": "demo-app/main-**",
                  "start": 1706674621000,
                  "lastUpdated": 1706674621604
                },
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Get release",
        "tags": [
          "Releases"
        ]
      },
      "put": {
        "operationId": "putRelease",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Release"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Update release",
        "tags": [
          "Releases"
        ]
      }
    },
    "/api/settings/accesslog": {
      "get": {
        "description": "Retrieve all access logs using defined query.",
        "operationId": "getAccessLogs",
        "parameters": [
          {
            "description": "The offset within the result set",
            "example": 0,
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The query to filter the results",
            "example": "username@example",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The size of returned page",
            "example": 10,
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "total": 1977,
                  "entries": [
                    {
                      "tenantId": "tenantId",
                      "tenantUnitId": "unitId",
                      "action": "LOGIN",
                      "email": "username@example.com",
                      "fullName": "Any User",
                      "timestamp": 1723035109091
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/AccessLogResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAuditLog"
            ]
          }
        ],
        "summary": "Access log",
        "tags": [
          "Audit Log"
        ]
      }
    },
    "/api/settings/apdex": {
      "get": {
        "description": "API to Get All Apdex Configurations.",
        "operationId": "getAllApdexConfigurations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "_PvpxqTfSyi27O_LCxMd0A",
                    "createdAt": 1653917798682,
                    "apdexName": "{string}",
                    "apdexEntity": {
                      "apdexType": "website",
                      "entityId": "{object}",
                      "threshold": 70,
                      "tagFilterExpression": {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": []
                      },
                      "beaconType": "httpRequest"
                    }
                  },
                  {
                    "id": "K6thQVyzQqWc38yspc0QWw",
                    "createdAt": 1693828514423,
                    "apdexName": "{string}",
                    "apdexEntity": {
                      "apdexType": "application",
                      "entityId": "{object}",
                      "threshold": 12,
                      "tagFilterExpression": {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": []
                      },
                      "boundaryScope": "ALL",
                      "includeInternal": false,
                      "includeSynthetic": false
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApdexConfiguration"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Apdex Configurations",
        "tags": [
          "Apdex Settings"
        ]
      },
      "post": {
        "operationId": "createApdexConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApdexConfigurationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApdexConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/apdex/{entityType}/{entityId}": {
      "get": {
        "description": "API to Get All Apdex Configurations for specified entity type and entity id.",
        "operationId": "getApdexConfigurationsForEntityTypeAndId",
        "parameters": [
          {
            "description": "entityType",
            "example": "APPLICATION",
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPLICATION",
                "WEBSITE"
              ]
            }
          },
          {
            "description": "entityId",
            "example": "XIZGGVT1TX2O-0OFeT2Yig",
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "u2MBXtasQoy3reni5-QZgg",
                    "createdAt": 1657743333352,
                    "apdexName": "{string}",
                    "apdexEntity": {
                      "apdexType": "website",
                      "entityId": "XIZGGVT1TX2O-0OFeT2Yig",
                      "threshold": 400,
                      "tagFilterExpression": {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": []
                      },
                      "beaconType": "httpRequest"
                    }
                  },
                  {
                    "id": "ShIqRJgpTT69HZHbfQKRGg",
                    "createdAt": 1693482558276,
                    "apdexName": "{string}",
                    "apdexEntity": {
                      "apdexType": "website",
                      "entityId": "XIZGGVT1TX2O-0OFeT2Yig",
                      "threshold": 90,
                      "tagFilterExpression": {
                        "type": "EXPRESSION",
                        "logicalOperator": "AND",
                        "elements": []
                      },
                      "beaconType": "httpRequest"
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApdexConfiguration"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get all Apdex configurations for entity type and entity id",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/apdex/{id}": {
      "delete": {
        "operationId": "deleteApdexConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      },
      "get": {
        "description": "API to Get Apdex Configuration for specified ID.",
        "operationId": "getApdexConfiguration",
        "parameters": [
          {
            "description": "id",
            "example": "NCAoNKqySWSK1U5GkmyZgQ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "NCAoNKqySWSK1U5GkmyZgQ",
                  "createdAt": 1666112381045,
                  "apdexName": "{string}",
                  "apdexEntity": {
                    "apdexType": "website",
                    "entityId": "XIZGGVT1TX2O-0OFeT2Yig",
                    "threshold": 100,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "beaconType": "httpRequest"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApdexConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/api-tokens": {
      "get": {
        "description": "Get the list of API Tokens for this Tenant-Unit",
        "operationId": "getApiTokens",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "[\n    {\n      \"id\": \"tokenId-1(masked)\",\n      \"accessGrantingToken\": \"accessGrantingToken-1(masked)\",\n      \"internalId\": \"internalId-1\",\n      \"name\": \"tokenName-1\",\n      \"createdBy\": \"user1@example.com\",\n      \"createdOn\": timestamp,\n      \"lastUsedOn\": timestamp,\n      \"expiresOn\": null,\n      \"limitedApplicationsScope\": false,\n      \"limitedBizOpsScope\": false,\n      \"limitedWebsitesScope\": false,\n      \"limitedKubernetesScope\": false,\n      \"limitedMobileAppsScope\": false,\n      \"limitedInfrastructureScope\": false,\n      \"limitedSyntheticsScope\": false,\n      \"limitedVsphereScope\": false,\n      \"limitedPhmcScope\": false,\n      \"limitedPvcScope\": false,\n      \"limitedZhmcScope\": false,\n      \"limitedPcfScope\": false,\n      \"limitedOpenstackScope\": false,\n      \"limitedAutomationScope\": false,\n      \"limitedLogsScope\": false,\n      \"canConfigureServiceMapping\": true,\n      \"canConfigureEumApplications\": true,\n      \"canConfigureMobileAppMonitoring\": true,\n      \"canConfigureUsers\": true,\n      \"canInstallNewAgents\": true,\n      \"canConfigureIntegrations\": true,\n      \"canConfigureApiTokens\": true,\n      \"canConfigurePersonalApiTokens\": false,\n      \"canConfigureAgentRunMode\": true,\n      \"canViewAuditLog\": true,\n      \"canConfigureAgents\": true,\n      \"canConfigureAuthenticationMethods\": true,\n      \"canConfigureApplications\": true,\n      \"canConfigureTeams\": true,\n      \"canConfigureReleases\": true,\n      \"canConfigureLogManagement\": true,\n      \"canConfigureDatabaseManagement\": false,\n      \"canCreatePublicCustomDashboards\": true,\n      \"canViewLogs\": true,\n      \"canViewTraceDetails\": true,\n      \"canConfigureSessionSettings\": true,\n      \"canConfigureServiceLevelIndicators\": true,\n      \"canConfigureGlobalAlertPayload\": true,\n      \"canViewAccountAndBillingInformation\": true,\n      \"canEditAllAccessibleCustomDashboards\": true,\n      \"canConfigureAutomationActions\": true,\n      \"canConfigureAutomationPolicies\": true,\n      \"canRunAutomationActions\": true,\n      \"canDeleteAutomationActionHistory\": true,\n      \"canConfigureSyntheticTests\": true,\n      \"canConfigureSyntheticLocations\": true,\n      \"canConfigureSyntheticCredentials\": true,\n      \"canViewSyntheticTests\": true,\n      \"canViewSyntheticLocations\": true,\n      \"canViewSyntheticTestResults\": true,\n      \"canUseSyntheticCredentials\": true,\n      \"canViewBusinessProcesses\": false,\n      \"canViewBusinessProcessDetails\": false,\n      \"canViewBusinessActivities\": false,\n      \"canViewBizAlerts\": false,\n      \"canDeleteLogs\": true,\n      \"canCreateHeapDump\": false,\n      \"canCreateThreadDump\": false,\n      \"canConfigureEventsAndAlerts\": true,\n      \"canConfigureMaintenanceWindows\": true,\n      \"canConfigureApplicationSmartAlerts\": true,\n      \"canConfigureWebsiteSmartAlerts\": true,\n      \"canConfigureMobileAppSmartAlerts\": true,\n      \"canConfigureGlobalApplicationSmartAlerts\": true,\n      \"canConfigureGlobalSyntheticSmartAlerts\": true,\n      \"canConfigureGlobalInfraSmartAlerts\": true,\n      \"canConfigureGlobalLogSmartAlerts\": true,\n      \"canManuallyCloseIssue\": true,\n      \"canViewLogVolume\": true,\n      \"canConfigureLogRetentionPeriod\": true\n    },\n    {\n      \"id\": \"tokenId-2(masked)\",\n      \"accessGrantingToken\": \"accessGrantingToken-2(masked)\",\n      \"internalId\": \"internalId-2\",\n      \"name\": \"tokenName-2\",\n      \"createdBy\": \"user2@example.com\",\n      \"createdOn\": timestamp,\n      \"lastUsedOn\": timestamp,\n      \"limitedApplicationsScope\": false,\n      \"limitedBizOpsScope\": false,\n      \"limitedWebsitesScope\": false,\n      \"limitedKubernetesScope\": false,\n      \"limitedMobileAppsScope\": false,\n      \"limitedInfrastructureScope\": false,\n      \"limitedSyntheticsScope\": false,\n      \"limitedVsphereScope\": false,\n      \"limitedPhmcScope\": false,\n      \"limitedPvcScope\": false,\n      \"limitedZhmcScope\": false,\n      \"limitedPcfScope\": false,\n      \"limitedOpenstackScope\": false,\n      \"limitedAutomationScope\": false,\n      \"limitedLogsScope\": false,\n      \"canConfigureServiceMapping\": true,\n      \"canConfigureEumApplications\": true,\n      \"canConfigureMobileAppMonitoring\": true,\n      \"canConfigureUsers\": true,\n      \"canInstallNewAgents\": true,\n      \"canConfigureIntegrations\": true,\n      \"canConfigureApiTokens\": true,\n      \"canConfigurePersonalApiTokens\": false,\n      \"canConfigureAgentRunMode\": true,\n      \"canViewAuditLog\": true,\n      \"canConfigureAgents\": true,\n      \"canConfigureAuthenticationMethods\": true,\n      \"canConfigureApplications\": true,\n      \"canConfigureTeams\": true,\n      \"canConfigureReleases\": true,\n      \"canConfigureLogManagement\": true,\n      \"canConfigureDatabaseManagement\": false,\n      \"canCreatePublicCustomDashboards\": true,\n      \"canViewLogs\": true,\n      \"canViewTraceDetails\": true,\n      \"canConfigureSessionSettings\": true,\n      \"canConfigureServiceLevelIndicators\": true,\n      \"canConfigureGlobalAlertPayload\": true,\n      \"canViewAccountAndBillingInformation\": true,\n      \"canEditAllAccessibleCustomDashboards\": true,\n      \"canConfigureAutomationActions\": false,\n      \"canConfigureAutomationPolicies\": false,\n      \"canRunAutomationActions\": false,\n      \"canDeleteAutomationActionHistory\": false,\n      \"canConfigureSyntheticTests\": true,\n      \"canConfigureSyntheticLocations\": true,\n      \"canConfigureSyntheticCredentials\": true,\n      \"canViewSyntheticTests\": true,\n      \"canViewSyntheticLocations\": true,\n      \"canViewSyntheticTestResults\": true,\n      \"canUseSyntheticCredentials\": true,\n      \"canViewBusinessProcesses\": false,\n      \"canViewBusinessProcessDetails\": false,\n      \"canViewBusinessActivities\": false,\n      \"canViewBizAlerts\": false,\n      \"canDeleteLogs\": false,\n      \"canCreateHeapDump\": false,\n      \"canCreateThreadDump\": false,\n      \"canConfigureEventsAndAlerts\": true,\n      \"canConfigureMaintenanceWindows\": true,\n      \"canConfigureApplicationSmartAlerts\": true,\n      \"canConfigureWebsiteSmartAlerts\": true,\n      \"canConfigureMobileAppSmartAlerts\": true,\n      \"canConfigureGlobalApplicationSmartAlerts\": true,\n      \"canConfigureGlobalSyntheticSmartAlerts\": true,\n      \"canConfigureGlobalInfraSmartAlerts\": true,\n      \"canConfigureGlobalLogSmartAlerts\": false,\n      \"canManuallyCloseIssue\": false,\n      \"canViewLogVolume\": false,\n      \"canConfigureLogRetentionPeriod\": false\n    }\n]",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiToken"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "No API Tokens found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApiTokens"
            ]
          }
        ],
        "summary": "Get all API Tokens",
        "tags": [
          "API Token"
        ]
      },
      "post": {
        "description": "Create an API Token on the Tenant-Unit. Each API Token entry also contains a set of permissions",
        "operationId": "postApiToken",
        "requestBody": {
          "content": {
            "application/json": {
              "example": "{\n  \"accessGrantingToken\": \"accessGrantingToken\",\n  \"name\": \"tokenName\",\n  \"internalId\": \"internalId\",\n  \"canViewAuditLog\": true,\n  \"canConfigureSessionSettings\": true,\n  \"canConfigureApplications\": true,\n  \"canConfigureAgents\": true,\n  \"canConfigureUsers\": true,\n  \"canConfigureEventsAndAlerts\": true,\n}\n",
              "schema": {
                "$ref": "#/components/schemas/ApiToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "tokenId",
                  "accessGrantingToken": "accessGrantingToken",
                  "internalId": "internalId",
                  "name": "tokenName",
                  "createdBy": "createdBy",
                  "createdOn": "createdOn",
                  "lastUsedOn": "lastUsedOn",
                  "expiresOn": "expiresOn",
                  "limitedApplicationsScope": false,
                  "limitedBizOpsScope": false,
                  "limitedWebsitesScope": false,
                  "limitedKubernetesScope": false,
                  "limitedMobileAppsScope": false,
                  "limitedInfrastructureScope": false,
                  "limitedSyntheticsScope": false,
                  "limitedVsphereScope": false,
                  "limitedPhmcScope": false,
                  "limitedPvcScope": false,
                  "limitedZhmcScope": false,
                  "limitedPcfScope": false,
                  "limitedOpenstackScope": false,
                  "limitedAutomationScope": false,
                  "limitedLogsScope": false,
                  "canConfigureServiceMapping": false,
                  "canConfigureEumApplications": false,
                  "canConfigureMobileAppMonitoring": false,
                  "canConfigureUsers": true,
                  "canInstallNewAgents": false,
                  "canConfigureIntegrations": false,
                  "canConfigureApiTokens": false,
                  "canConfigurePersonalApiTokens": false,
                  "canConfigureAgentRunMode": false,
                  "canViewAuditLog": true,
                  "canConfigureAgents": true,
                  "canConfigureAuthenticationMethods": false,
                  "canConfigureApplications": true,
                  "canConfigureTeams": false,
                  "canConfigureReleases": false,
                  "canConfigureLogManagement": false,
                  "canConfigureDatabaseManagement": false,
                  "canCreatePublicCustomDashboards": false,
                  "canViewLogs": false,
                  "canViewTraceDetails": false,
                  "canConfigureSessionSettings": true,
                  "canConfigureServiceLevelIndicators": false,
                  "canConfigureGlobalAlertPayload": false,
                  "canViewAccountAndBillingInformation": false,
                  "canEditAllAccessibleCustomDashboards": false,
                  "canConfigureAutomationActions": false,
                  "canConfigureAutomationPolicies": false,
                  "canRunAutomationActions": false,
                  "canDeleteAutomationActionHistory": false,
                  "canConfigureSyntheticTests": false,
                  "canConfigureSyntheticLocations": false,
                  "canConfigureSyntheticCredentials": false,
                  "canViewSyntheticTests": false,
                  "canViewSyntheticLocations": false,
                  "canViewSyntheticTestResults": false,
                  "canUseSyntheticCredentials": false,
                  "canViewBusinessProcesses": false,
                  "canViewBusinessProcessDetails": false,
                  "canViewBusinessActivities": false,
                  "canViewBizAlerts": false,
                  "canDeleteLogs": false,
                  "canCreateHeapDump": false,
                  "canCreateThreadDump": false,
                  "canConfigureEventsAndAlerts": true,
                  "canConfigureMaintenanceWindows": false,
                  "canConfigureApplicationSmartAlerts": false,
                  "canConfigureWebsiteSmartAlerts": false,
                  "canConfigureMobileAppSmartAlerts": false,
                  "canConfigureGlobalApplicationSmartAlerts": false,
                  "canConfigureGlobalSyntheticSmartAlerts": false,
                  "canConfigureGlobalInfraSmartAlerts": false,
                  "canConfigureGlobalLogSmartAlerts": false,
                  "canManuallyCloseIssue": false,
                  "canViewLogVolume": false,
                  "canConfigureLogRetentionPeriod": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApiTokens"
            ]
          }
        ],
        "summary": "Create an API token",
        "tags": [
          "API Token"
        ]
      }
    },
    "/api/settings/api-tokens/{internalId}": {
      "delete": {
        "description": "Delete the Api Token",
        "operationId": "deleteApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApiTokens"
            ]
          }
        ],
        "summary": "Delete API token",
        "tags": [
          "API Token"
        ]
      },
      "get": {
        "description": "Returns API Token details, including the set of permissions",
        "operationId": "getApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\n      \"id\": \"tokenId(masked)\",\n      \"accessGrantingToken\": \"accessGrantingToken(masked)\",\n      \"internalId\": \"internalId\",\n      \"name\": \"tokenName\",\n      \"createdBy\": \"user@example.com\",\n      \"createdOn\": timestamp,\n      \"lastUsedOn\": timestamp,\n      \"expiresOn\": null,\n      \"limitedApplicationsScope\": false,\n      \"limitedBizOpsScope\": false,\n      \"limitedWebsitesScope\": false,\n      \"limitedKubernetesScope\": false,\n      \"limitedMobileAppsScope\": false,\n      \"limitedInfrastructureScope\": false,\n      \"limitedSyntheticsScope\": false,\n      \"limitedVsphereScope\": false,\n      \"limitedPhmcScope\": false,\n      \"limitedPvcScope\": false,\n      \"limitedZhmcScope\": false,\n      \"limitedPcfScope\": false,\n      \"limitedOpenstackScope\": false,\n      \"limitedAutomationScope\": false,\n      \"limitedLogsScope\": false,\n      \"canConfigureServiceMapping\": true,\n      \"canConfigureEumApplications\": true,\n      \"canConfigureMobileAppMonitoring\": true,\n      \"canConfigureUsers\": true,\n      \"canInstallNewAgents\": true,\n      \"canConfigureIntegrations\": true,\n      \"canConfigureApiTokens\": true,\n      \"canConfigurePersonalApiTokens\": false,\n      \"canConfigureAgentRunMode\": true,\n      \"canViewAuditLog\": true,\n      \"canConfigureAgents\": true,\n      \"canConfigureAuthenticationMethods\": true,\n      \"canConfigureApplications\": true,\n      \"canConfigureTeams\": true,\n      \"canConfigureReleases\": true,\n      \"canConfigureLogManagement\": true,\n      \"canConfigureDatabaseManagement\": false,\n      \"canCreatePublicCustomDashboards\": true,\n      \"canViewLogs\": true,\n      \"canViewTraceDetails\": true,\n      \"canConfigureSessionSettings\": true,\n      \"canConfigureServiceLevelIndicators\": true,\n      \"canConfigureGlobalAlertPayload\": true,\n      \"canViewAccountAndBillingInformation\": true,\n      \"canEditAllAccessibleCustomDashboards\": true,\n      \"canConfigureAutomationActions\": true,\n      \"canConfigureAutomationPolicies\": true,\n      \"canRunAutomationActions\": true,\n      \"canDeleteAutomationActionHistory\": true,\n      \"canConfigureSyntheticTests\": true,\n      \"canConfigureSyntheticLocations\": true,\n      \"canConfigureSyntheticCredentials\": true,\n      \"canViewSyntheticTests\": true,\n      \"canViewSyntheticLocations\": true,\n      \"canViewSyntheticTestResults\": true,\n      \"canUseSyntheticCredentials\": true,\n      \"canViewBusinessProcesses\": false,\n      \"canViewBusinessProcessDetails\": false,\n      \"canViewBusinessActivities\": false,\n      \"canViewBizAlerts\": false,\n      \"canDeleteLogs\": true,\n      \"canCreateHeapDump\": false,\n      \"canCreateThreadDump\": false,\n      \"canConfigureEventsAndAlerts\": true,\n      \"canConfigureMaintenanceWindows\": true,\n      \"canConfigureApplicationSmartAlerts\": true,\n      \"canConfigureWebsiteSmartAlerts\": true,\n      \"canConfigureMobileAppSmartAlerts\": true,\n      \"canConfigureGlobalApplicationSmartAlerts\": true,\n      \"canConfigureGlobalSyntheticSmartAlerts\": true,\n      \"canConfigureGlobalInfraSmartAlerts\": true,\n      \"canConfigureGlobalLogSmartAlerts\": true,\n      \"canManuallyCloseIssue\": true,\n      \"canViewLogVolume\": true,\n      \"canConfigureLogRetentionPeriod\": true\n    }\n",
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApiTokens"
            ]
          }
        ],
        "summary": "Get API token",
        "tags": [
          "API Token"
        ]
      },
      "put": {
        "description": "Update API Token- Change Token name and associated permissions",
        "operationId": "putApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": "{\n  \"accessGrantingToken\": \"accessGrantingToken\",\n  \"name\": \"tokenName\",\n  \"internalId\": \"internalId\",\n  \"canViewAuditLog\": true,\n  \"canConfigureSessionSettings\": true,\n  \"canConfigureApplications\": true,\n  \"canConfigureAgents\": true,\n  \"canConfigureUsers\": true,\n  \"canConfigureEventsAndAlerts\": true,\n}\n",
              "schema": {
                "$ref": "#/components/schemas/ApiToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "tokenId",
                  "accessGrantingToken": "accessGrantingToken",
                  "internalId": "internalId",
                  "name": "tokenName",
                  "createdBy": "createdBy",
                  "createdOn": "createdOn",
                  "lastUsedOn": "lastUsedOn",
                  "expiresOn": "expiresOn",
                  "limitedApplicationsScope": false,
                  "limitedBizOpsScope": false,
                  "limitedWebsitesScope": false,
                  "limitedKubernetesScope": false,
                  "limitedMobileAppsScope": false,
                  "limitedInfrastructureScope": false,
                  "limitedSyntheticsScope": false,
                  "limitedVsphereScope": false,
                  "limitedPhmcScope": false,
                  "limitedPvcScope": false,
                  "limitedZhmcScope": false,
                  "limitedPcfScope": false,
                  "limitedOpenstackScope": false,
                  "limitedAutomationScope": false,
                  "limitedLogsScope": false,
                  "canConfigureServiceMapping": false,
                  "canConfigureEumApplications": false,
                  "canConfigureMobileAppMonitoring": false,
                  "canConfigureUsers": true,
                  "canInstallNewAgents": false,
                  "canConfigureIntegrations": false,
                  "canConfigureApiTokens": false,
                  "canConfigurePersonalApiTokens": false,
                  "canConfigureAgentRunMode": false,
                  "canViewAuditLog": true,
                  "canConfigureAgents": true,
                  "canConfigureAuthenticationMethods": false,
                  "canConfigureApplications": true,
                  "canConfigureTeams": false,
                  "canConfigureReleases": false,
                  "canConfigureLogManagement": false,
                  "canConfigureDatabaseManagement": false,
                  "canCreatePublicCustomDashboards": false,
                  "canViewLogs": false,
                  "canViewTraceDetails": false,
                  "canConfigureSessionSettings": true,
                  "canConfigureServiceLevelIndicators": false,
                  "canConfigureGlobalAlertPayload": false,
                  "canViewAccountAndBillingInformation": false,
                  "canEditAllAccessibleCustomDashboards": false,
                  "canConfigureAutomationActions": false,
                  "canConfigureAutomationPolicies": false,
                  "canRunAutomationActions": false,
                  "canDeleteAutomationActionHistory": false,
                  "canConfigureSyntheticTests": false,
                  "canConfigureSyntheticLocations": false,
                  "canConfigureSyntheticCredentials": false,
                  "canViewSyntheticTests": false,
                  "canViewSyntheticLocations": false,
                  "canViewSyntheticTestResults": false,
                  "canUseSyntheticCredentials": false,
                  "canViewBusinessProcesses": false,
                  "canViewBusinessProcessDetails": false,
                  "canViewBusinessActivities": false,
                  "canViewBizAlerts": false,
                  "canDeleteLogs": false,
                  "canCreateHeapDump": false,
                  "canCreateThreadDump": false,
                  "canConfigureEventsAndAlerts": true,
                  "canConfigureMaintenanceWindows": false,
                  "canConfigureApplicationSmartAlerts": false,
                  "canConfigureWebsiteSmartAlerts": false,
                  "canConfigureMobileAppSmartAlerts": false,
                  "canConfigureGlobalApplicationSmartAlerts": false,
                  "canConfigureGlobalSyntheticSmartAlerts": false,
                  "canConfigureGlobalInfraSmartAlerts": false,
                  "canConfigureGlobalLogSmartAlerts": false,
                  "canManuallyCloseIssue": false,
                  "canViewLogVolume": false,
                  "canConfigureLogRetentionPeriod": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureApiTokens"
            ]
          }
        ],
        "summary": "Create or update an API token",
        "tags": [
          "API Token"
        ]
      }
    },
    "/api/settings/auditlog": {
      "get": {
        "description": "Retrieve all audit logs using defined query.",
        "operationId": "getAuditLogs",
        "parameters": [
          {
            "description": "The offset within the result set",
            "example": 0,
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The query to filter the results",
            "example": "username@example.com",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The size of returned page",
            "example": 10,
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "total": 1977,
                  "entries": [
                    {
                      "id": "WawO9-p0SJ2ifST460tXYZ",
                      "action": "GET /api/settings",
                      "message": "Aborting request due to Insufficient permissions/access rights for resource method",
                      "actor": {
                        "type": "USER",
                        "id": "userId",
                        "name": "Any User",
                        "email": "username@example.com"
                      },
                      "timestamp": 1723035109091,
                      "meta": {
                        "origin_ip": "10.69.123.42"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogUiResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAuditLog"
            ]
          }
        ],
        "summary": "Audit log",
        "tags": [
          "Audit Log"
        ]
      }
    },
    "/api/settings/authentication/googleSSO": {
      "delete": {
        "description": "Delete the corresponding tenants Google SSO configuration.",
        "operationId": "deleteGoogleSSOConfig",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Delete Google SSO configuration",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/settings/authentication/ldap": {
      "delete": {
        "description": "Delete the corresponding tenants LDAP configuration.",
        "operationId": "deleteLdapConfig",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Delete LDAP configuration",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/settings/authentication/oidc": {
      "delete": {
        "description": "Delete the corresponding tenants OIDC configuration.",
        "operationId": "deleteOidcConfig",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Delete OIDC configuration",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/settings/authentication/saml": {
      "delete": {
        "description": "Delete the corresponding tenants SAML configuration.",
        "operationId": "deleteSamlConfig",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Delete SAML configuration",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/settings/invitation/share": {
      "post": {
        "operationId": "shareAndInviteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "email": "username@example.com",
                  "groupId": "-1",
                  "message": "hello message",
                  "path": "/testpath"
                }
              ],
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "invitationResults": [
                    {
                      "userEmail": "username@example.com",
                      "invitationStatus": "SUCCESS"
                    }
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Please set at least one email"
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Bad Request Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Send user invitations",
        "tags": [
          "User"
        ],
        "description": "This API endpoint allows to invite users to this tenant.  \nEach user requires the email address and the group to which the user will be added initially.  \n\nInviting users whilst an IdP is configured will always result in failures, as in this case users will be provisioned during the login based on the IdP configuration.  \nDuring the IdP configurations all pending invitations are automatically revoked.\n\nInviting users who are already members of the tenant will also provide an error result.  "
      }
    },
    "/api/settings/invitations": {
      "delete": {
        "operationId": "revokePendingInvitation",
        "parameters": [
          {
            "description": "Email of the invite for removal",
            "example": "username@example.com",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Revoke pending invitation",
        "tags": [
          "User"
        ],
        "description": "This API endpoint allows to delete an invitation, requires the usersâ email as a Query parameter.\n"
      },
      "get": {
        "operationId": "getInvitations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "All pending invitations",
        "tags": [
          "User"
        ],
        "description": "This API endpoint retrieves the list of all pending invitations.  \nDuring the IdP configuration all pending invitations will be dismissed and whilst an IdP is configured invitations are prevented.  "
      },
      "post": {
        "operationId": "inviteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "email": "username@example.com",
                  "groupId": "-1"
                }
              ],
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "invitationResults": [
                    {
                      "userEmail": "username@example.com",
                      "invitationStatus": "SUCCESS"
                    }
                  ]
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "Please set at least one email"
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Bad Request Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Send user invitations",
        "tags": [
          "User"
        ],
        "description": "This API endpoint allows to invite users to this tenant.  \nEach user requires the email address and the group to which the user will be added initially.  \n\nInviting users whilst an IdP is configured will always result in failures, as in this case users will be provisioned during the login based on the IdP configuration.  \nDuring the IdP configurations all pending invitations are automatically revoked.\n\nInviting users who are already members of the tenant will also provide an error result.  "
      }
    },
    "/api/settings/maintenance": {
      "get": {
        "deprecated": true,
        "operationId": "getMaintenanceConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidatedMaintenanceConfigWithStatus"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "All maintenance configurations",
        "tags": [
          "Maintenance Configuration"
        ]
      }
    },
    "/api/settings/maintenance/{id}": {
      "delete": {
        "deprecated": true,
        "operationId": "deleteMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Delete maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      },
      "get": {
        "deprecated": true,
        "operationId": "getMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "putMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Maintenance config has been created or updated, and successfully scheduled immediately if needed"
          },
          "202": {
            "description": "Maintenance config has been created or updated, but could not to be scheduled immediately. It will therefore be scheduled during the next auto-refresh with a delay of up to 4 minutes."
          },
          "400": {
            "description": "Invalid JSON or mismatching IDs have been provided"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Create or update maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      }
    },
    "/api/settings/rbac/groups": {
      "get": {
        "operationId": "getGroups",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "groupId1",
                    "name": "group1",
                    "members": [
                      {
                        "userId": "userId1",
                        "email": "username1@example.com"
                      },
                      {
                        "userId": "userId2",
                        "email": "username2@example.com"
                      }
                    ]
                  },
                  {
                    "id": "groupId2",
                    "name": "group2",
                    "members": [
                      {
                        "userId": "userId1",
                        "email": "username1@example.com"
                      },
                      {
                        "userId": "userId3",
                        "email": "username3@example.com"
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiGroup"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "No groups found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Get groups",
        "tags": [
          "Groups"
        ],
        "description": "Retrieve the list of all groups on the tenant together with the `Permission Set` for the tenant unit.\n\nThe `Permission Set` object contains a set of permissions applied to the group.\n\nIn case `permissions` include the entry e.g. `LIMITED_APPLICATIONS_SCOPE`, this group will have limited access to application area.\n\nThe areas are included inside the `permissionSet`.\n\nThe scopeRoleId is a fixed value for each area type:\n\n| Area                    | value         |\n| ----------------------- | ------------- |\n| applicationIds          | -100          |\n| kubernetesClusterUUIDs  | -200          |\n| kubernetesNamespaceUIDs | -300          |\n| websiteIds              | -400          |\n| mobileAppIds            | -500          |\n| infraDfqFilter          | -600          |\n\nFor example:\n\n```\n[\n    {\n        \"id\": \"7hwdhtt7TU2CJDgYXgwwww\",\n        \"name\": \"Scoped Group\",\n        \"members\": [\n            {\n                \"userId\": \"61892cfdfcffab03016b2950\",\n                \"email\": \"jhon@example.com\"\n            }\n        ],\n        \"permissionSet\": {\n        \"permissions\": [\n            \"CAN_VIEW_LOGS\",\n            \"CAN_VIEW_TRACE_DETAILS\",\n            \"CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS\",\n            \"ACCESS_APPLICATIONS\",\n            \"LIMITED_APPLICATIONS_SCOPE\",            \n            \"ACCESS_KUBERNETES\",\n            \"LIMITED_KUBERNETES_SCOPE\",\n            \"ACCESS_INFRASTRUCTURE_APPS\",\n            \"LIMITED_INFRASTRUCTURE_SCOPE\",\n            \"LIMITED_WEBSITES_SCOPE\",\n            \n        ],\n        \"applicationIds\": [\n            {\n            \"scopeId\": \"1qvWgVfLTNqi9gGTcCaNUw\",\n            \"scopeRoleId\": \"-100\"\n            }\n        ],\n        \"kubernetesClusterUUIDs\": [\n            {\n            \"scopeId\": \"induced\",\n            \"scopeRoleId\": \"-200\"\n            }\n        ],\n        \"kubernetesNamespaceUIDs\": [],\n        \"websiteIds\": [],\n        \"mobileAppIds\": [],\n        \"infraDfqFilter\": {\n            \"scopeId\": \"production\",\n            \"scopeRoleId\": \"-600\"\n        }\n    }\n]\n```\nIn this case `Scoped Group` has no access to websites due to having `LIMITED_WEBSITES_SCOPE` but not `ACCESS_WEBSITES`.\n\nAlso due to having `LIMITED_APPLICATIONS_SCOPE`, the only visible application is the one with this id: `1qvWgVfLTNqi9gGTcCaNUw`.\n\nSame applies to `kubernetesClusterUUIDs`, `kubernetesNamespaceUIDs` and `infraDfqFilter`, with the only difference is that `infraDfqFilter`\nuses a filter \"production\" instead of an id."
      },
      "post": {
        "operationId": "createGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "group name",
                "members": [
                  {
                    "userId": "userId",
                    "email": "username@example.com"
                  }
                ],
                "permissionSet": {
                  "permissions": [
                    "CAN_VIEW_LOGS"
                  ],
                  "applicationIds": [
                    {
                      "scopeId": "scopeId1",
                      "scopeRoleId": "-102"
                    }
                  ],
                  "kubernetesClusterUUIDs": [],
                  "kubernetesNamespaceUIDs": [],
                  "websiteIds": [],
                  "mobileAppIds": [],
                  "syntheticTestIds": [
                    {
                      "scopeId": "scopeId10",
                      "scopeRoleId": "-1"
                    }
                  ],
                  "restrictedApplicationFilter": {
                    "label": "group name",
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "name": "service.name",
                      "stringValue": "acceptor",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": null,
                      "value": "acceptor",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    "scope": "INCLUDE_NO_DOWNSTREAM"
                  },
                  "infraDfqFilter": {
                    "scopeId": "",
                    "scopeRoleId": "-1"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApiCreateGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "group name",
                  "members": [
                    {
                      "userId": "userId",
                      "email": "username@example.com"
                    }
                  ],
                  "permissionSet": {
                    "permissions": [
                      "CAN_VIEW_LOGS"
                    ],
                    "applicationIds": [
                      {
                        "scopeId": "scopeId1",
                        "scopeRoleId": "-102"
                      }
                    ],
                    "kubernetesClusterUUIDs": [],
                    "kubernetesNamespaceUIDs": [],
                    "websiteIds": [],
                    "mobileAppIds": [],
                    "syntheticTestIds": [
                      {
                        "scopeId": "scopeId10",
                        "scopeRoleId": "-1"
                      }
                    ],
                    "restrictedApplicationFilter": {
                      "label": "group name",
                      "tagFilterExpression": {
                        "type": "TAG_FILTER",
                        "name": "service.name",
                        "stringValue": "acceptor",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "acceptor",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      "scope": "INCLUDE_NO_DOWNSTREAM"
                    },
                    "infraDfqFilter": {
                      "scopeId": "",
                      "scopeRoleId": "-1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Create group",
        "tags": [
          "Groups"
        ],
        "description": "Creates a group on the tenant. Each group entry also needs a `Permission Set` per unit.\n\nThe `Permission Set` object contains a set of permissions applied to the group.\n\nIn case `permissions` include the entry e.g. `LIMITED_APPLICATIONS_SCOPE`, this group will have limited access to application area.\n\nPossible access permissions values are:\n\n- `ACCESS_APPLICATIONS`\n- `ACCESS_INFRASTRUCTURE`\n- `ACCESS_KUBERNETES`\n- `ACCESS_MOBILE_APPS`\n- `ACCESS_WEBSITES`\n- `LIMITED_APPLICATIONS_SCOPE`\n- `LIMITED_INFRASTRUCTURE_SCOPE`\n- `LIMITED_KUBERNETES_SCOPE`\n- `LIMITED_MOBILE_APPS_SCOPE`\n- `LIMITED_WEBSITES_SCOPE`\n\nThe `id` value for the group is ignored, a new id is generated.\n\nThe `scopeRoleId` is ignored, the id corresponding to the area is used.\n\nThe `scopeId` is the id for the corresponding resource."
      }
    },
    "/api/settings/rbac/groups/user/{email}": {
      "get": {
        "operationId": "getGroupsByUser",
        "parameters": [
          {
            "description": "Email of the user for retrieval",
            "example": "username@example.com",
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "groupId",
                    "name": "group name",
                    "members": [
                      {
                        "userId": "userId",
                        "email": "username@example.com"
                      }
                    ],
                    "permissionSet": {
                      "permissions": [
                        "CAN_VIEW_LOGS",
                        "LIMITED_APPLICATIONS_SCOPE",
                        "ACCESS_APPLICATIONS",
                        "CAN_VIEW_TRACE_DETAILS"
                      ],
                      "applicationIds": [
                        {
                          "scopeId": "scopeId1",
                          "scopeRoleId": "-102"
                        }
                      ],
                      "kubernetesClusterUUIDs": [],
                      "kubernetesNamespaceUIDs": [],
                      "websiteIds": [],
                      "mobileAppIds": [],
                      "syntheticTestIds": [],
                      "restrictedApplicationFilter": {
                        "label": "filter name",
                        "tagFilterExpression": {
                          "type": "TAG_FILTER",
                          "name": "service.name",
                          "stringValue": "acceptor",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "acceptor",
                          "operator": "EQUALS",
                          "entity": "DESTINATION"
                        },
                        "scope": "INCLUDE_NO_DOWNSTREAM"
                      },
                      "infraDfqFilter": {
                        "scopeId": "",
                        "scopeRoleId": "-1"
                      }
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiGroup"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "No groups found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Get groups of a single user",
        "tags": [
          "Groups"
        ],
        "description": "Returns a list of all groups a user belongs to. This includes data from these groups, the `members`, the `name` and the `Permission set`."
      }
    },
    "/api/settings/rbac/groups/{groupId}/permissions": {
      "put": {
        "operationId": "addPermissionsOnGroup",
        "parameters": [
          {
            "description": "Id of the group to add permissions",
            "example": "groupId",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                "CAN_VIEW_SYNTHETIC_TESTS",
                "CAN_VIEW_SYNTHETIC_LOCATIONS",
                "CAN_CONFIGURE_AUTOMATION_ACTIONS"
              ],
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "groupId",
                  "name": "group name",
                  "members": [
                    {
                      "userId": "userId1",
                      "email": "username1@example.com"
                    }
                  ],
                  "permissionSet": {
                    "permissions": [
                      "CAN_VIEW_LOGS",
                      "CAN_VIEW_SYNTHETIC_TESTS",
                      "CAN_VIEW_SYNTHETIC_LOCATIONS",
                      "CAN_CONFIGURE_AUTOMATION_ACTIONS"
                    ],
                    "applicationIds": [],
                    "kubernetesClusterUUIDs": [],
                    "kubernetesNamespaceUIDs": [],
                    "websiteIds": [],
                    "mobileAppIds": [],
                    "syntheticTestIds": [],
                    "infraDfqFilter": {
                      "scopeId": "",
                      "scopeRoleId": "-1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Add permissions to group",
        "tags": [
          "Groups"
        ],
        "description": "Add a permission to a group. Permissions are strings associated with the group that some resources requires to fulfill requests.\n\nExamples of `Permissions`:\n\n- `ACCESS_APPLICATIONS`\n- `ACCESS_INFRASTRUCTURE`\n- `ACCESS_KUBERNETES`\n- `ACCESS_MOBILE_APPS`\n- `ACCESS_WEBSITES`\n- `CAN_CONFIGURE_AGENT_RUN_MODE`\n- `CAN_CONFIGURE_AGENTS`\n- `CAN_CONFIGURE_API_TOKENS`\n- `CAN_CONFIGURE_APPLICATIONS`\n- `CAN_CONFIGURE_AUTHENTICATION_METHODS`\n- `CAN_CONFIGURE_CUSTOM_ALERTS`\n- `CAN_CONFIGURE_EUM_APPLICATIONS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_CONFIGS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_PAYLOAD`\n- `CAN_CONFIGURE_INTEGRATIONS`\n- `CAN_CONFIGURE_LOG_MANAGEMENT`\n- `CAN_CONFIGURE_MOBILE_APP_MONITORING`\n- `CAN_CONFIGURE_PERSONAL_API_TOKENS`\n- `CAN_CONFIGURE_RELEASES`\n- `CAN_CONFIGURE_SERVICE_LEVEL_INDICATORS`\n- `CAN_CONFIGURE_SERVICE_MAPPING`\n- `CAN_CONFIGURE_SESSION_SETTINGS`\n- `CAN_CONFIGURE_TEAMS`\n- `CAN_CONFIGURE_USERS`\n- `CAN_CREATE_PUBLIC_CUSTOM_DASHBOARDS`\n- `CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS`\n- `CAN_INSTALL_NEW_AGENTS`\n- `CAN_VIEW_ACCOUNT_AND_BILLING_INFORMATION`\n- `CAN_VIEW_AUDIT_LOG`\n- `CAN_VIEW_LOGS`\n- `CAN_VIEW_TRACE_DETAILS`\n- `LIMITED_APPLICATIONS_SCOPE`\n- `LIMITED_INFRASTRUCTURE_SCOPE`\n- `LIMITED_KUBERNETES_SCOPE`\n- `LIMITED_MOBILE_APPS_SCOPE`\n- `LIMITED_WEBSITES_SCOPE`\n"
      }
    },
    "/api/settings/rbac/groups/{groupId}/users": {
      "put": {
        "operationId": "addUsersToGroup",
        "parameters": [
          {
            "description": "Id of the group to add users",
            "example": "groupId",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                "userId1",
                "userId3"
              ],
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "groupId",
                  "name": "group name",
                  "members": [
                    {
                      "userId": "userId1",
                      "email": "username1@example.com"
                    },
                    {
                      "userId": "userId2",
                      "email": "username2@example.com"
                    },
                    {
                      "userId": "userId3",
                      "email": "username3@example.com"
                    }
                  ],
                  "permissionSet": {
                    "permissions": [
                      "CAN_VIEW_LOGS"
                    ],
                    "applicationIds": [],
                    "kubernetesClusterUUIDs": [],
                    "kubernetesNamespaceUIDs": [],
                    "websiteIds": [],
                    "mobileAppIds": [],
                    "syntheticTestIds": [],
                    "infraDfqFilter": {
                      "scopeId": "",
                      "scopeRoleId": "-1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Add users to group",
        "tags": [
          "Groups"
        ],
        "description": "Add one or more users to a group. The array contains the ids of the users to be added."
      }
    },
    "/api/settings/rbac/groups/{id}": {
      "delete": {
        "description": "Delete the group data.",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "description": "Id of the group to delete",
            "example": "groupId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Delete group",
        "tags": [
          "Groups"
        ]
      },
      "get": {
        "operationId": "getGroup",
        "parameters": [
          {
            "description": "Id of the group for retrieval",
            "example": "groupId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "groupId",
                  "name": "group name",
                  "members": [
                    {
                      "userId": "userId",
                      "email": "username@example.com"
                    }
                  ],
                  "permissionSet": {
                    "permissions": [
                      "ACCESS_INFRASTRUCTURE",
                      "LIMITED_WEBSITES_SCOPE",
                      "CAN_VIEW_SYNTHETIC_TESTS",
                      "CAN_VIEW_SYNTHETIC_LOCATIONS",
                      "CAN_VIEW_TRACE_DETAILS",
                      "CAN_CONFIGURE_AGENT_RUN_MODE",
                      "CAN_CONFIGURE_AUTOMATION_ACTIONS",
                      "CAN_CONFIGURE_USERS",
                      "ACCESS_SYNTHETICS",
                      "CAN_VIEW_LOGS",
                      "LIMITED_KUBERNETES_SCOPE",
                      "CAN_CONFIGURE_TEAMS",
                      "CAN_VIEW_SYNTHETIC_TEST_RESULTS",
                      "LIMITED_SYNTHETICS_SCOPE",
                      "LIMITED_INFRASTRUCTURE_SCOPE"
                    ],
                    "applicationIds": [
                      {
                        "scopeId": "scopeId1",
                        "scopeRoleId": "-102"
                      },
                      {
                        "scopeId": "scopeId2",
                        "scopeRoleId": "-102"
                      },
                      {
                        "scopeId": "scopeId3",
                        "scopeRoleId": "-102"
                      },
                      {
                        "scopeId": "scopeId4",
                        "scopeRoleId": "-102"
                      },
                      {
                        "scopeId": "scopeId5",
                        "scopeRoleId": "-102"
                      },
                      {
                        "scopeId": "scopeId6",
                        "scopeRoleId": "-102"
                      }
                    ],
                    "kubernetesClusterUUIDs": [],
                    "kubernetesNamespaceUIDs": [],
                    "websiteIds": [],
                    "mobileAppIds": [],
                    "syntheticTestIds": [
                      {
                        "scopeId": "scopeId10",
                        "scopeRoleId": "-1"
                      }
                    ],
                    "restrictedApplicationFilter": {
                      "label": "filter name",
                      "tagFilterExpression": {
                        "type": "TAG_FILTER",
                        "name": "service.name",
                        "stringValue": "acceptor",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "acceptor",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      "scope": "INCLUDE_NO_DOWNSTREAM"
                    },
                    "infraDfqFilter": {
                      "scopeId": "",
                      "scopeRoleId": "-1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Get group",
        "tags": [
          "Groups"
        ],
        "description": "Returns group data, including the `Permission set`. See [get groups](#operation/getGroups) for more details."
      },
      "put": {
        "operationId": "updateGroup",
        "parameters": [
          {
            "description": "Id of the group to update",
            "example": "groupId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "group name",
                "members": [
                  {
                    "userId": "userId",
                    "email": "username@example.com"
                  }
                ],
                "permissionSet": {
                  "permissions": [
                    "CAN_VIEW_LOGS"
                  ],
                  "applicationIds": [
                    {
                      "scopeId": "scopeId1",
                      "scopeRoleId": "-102"
                    }
                  ],
                  "kubernetesClusterUUIDs": [],
                  "kubernetesNamespaceUIDs": [],
                  "websiteIds": [],
                  "mobileAppIds": [],
                  "syntheticTestIds": [
                    {
                      "scopeId": "scopeId10",
                      "scopeRoleId": "-1"
                    }
                  ],
                  "restrictedApplicationFilter": {
                    "label": "group name",
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "name": "service.name",
                      "stringValue": "acceptor",
                      "numberValue": null,
                      "booleanValue": null,
                      "key": null,
                      "value": "acceptor",
                      "operator": "EQUALS",
                      "entity": "DESTINATION"
                    },
                    "scope": "INCLUDE_NO_DOWNSTREAM"
                  },
                  "infraDfqFilter": {
                    "scopeId": "",
                    "scopeRoleId": "-1"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApiGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "group name",
                  "members": [
                    {
                      "userId": "userId",
                      "email": "username@example.com"
                    }
                  ],
                  "permissionSet": {
                    "permissions": [
                      "CAN_VIEW_LOGS"
                    ],
                    "applicationIds": [
                      {
                        "scopeId": "scopeId1",
                        "scopeRoleId": "-102"
                      }
                    ],
                    "kubernetesClusterUUIDs": [],
                    "kubernetesNamespaceUIDs": [],
                    "websiteIds": [],
                    "mobileAppIds": [],
                    "syntheticTestIds": [
                      {
                        "scopeId": "scopeId10",
                        "scopeRoleId": "-1"
                      }
                    ],
                    "restrictedApplicationFilter": {
                      "label": "group name",
                      "tagFilterExpression": {
                        "type": "TAG_FILTER",
                        "name": "service.name",
                        "stringValue": "acceptor",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "acceptor",
                        "operator": "EQUALS",
                        "entity": "DESTINATION"
                      },
                      "scope": "INCLUDE_NO_DOWNSTREAM"
                    },
                    "infraDfqFilter": {
                      "scopeId": "",
                      "scopeRoleId": "-1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Update group",
        "tags": [
          "Groups"
        ],
        "description": "Add a permission to a group. Permissions are strings associated with the group that some resources requires to fulfill requests.\n\nExamples of `Permissions`:\n\n- `ACCESS_APPLICATIONS`\n- `ACCESS_INFRASTRUCTURE`\n- `ACCESS_KUBERNETES`\n- `ACCESS_MOBILE_APPS`\n- `ACCESS_WEBSITES`\n- `CAN_CONFIGURE_AGENT_RUN_MODE`\n- `CAN_CONFIGURE_AGENTS`\n- `CAN_CONFIGURE_API_TOKENS`\n- `CAN_CONFIGURE_APPLICATIONS`\n- `CAN_CONFIGURE_AUTHENTICATION_METHODS`\n- `CAN_CONFIGURE_CUSTOM_ALERTS`\n- `CAN_CONFIGURE_EUM_APPLICATIONS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_CONFIGS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_PAYLOAD`\n- `CAN_CONFIGURE_INTEGRATIONS`\n- `CAN_CONFIGURE_LOG_MANAGEMENT`\n- `CAN_CONFIGURE_MOBILE_APP_MONITORING`\n- `CAN_CONFIGURE_PERSONAL_API_TOKENS`\n- `CAN_CONFIGURE_RELEASES`\n- `CAN_CONFIGURE_SERVICE_LEVEL_INDICATORS`\n- `CAN_CONFIGURE_SERVICE_MAPPING`\n- `CAN_CONFIGURE_SESSION_SETTINGS`\n- `CAN_CONFIGURE_TEAMS`\n- `CAN_CONFIGURE_USERS`\n- `CAN_CREATE_PUBLIC_CUSTOM_DASHBOARDS`\n- `CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS`\n- `CAN_INSTALL_NEW_AGENTS`\n- `CAN_VIEW_ACCOUNT_AND_BILLING_INFORMATION`\n- `CAN_VIEW_AUDIT_LOG`\n- `CAN_VIEW_LOGS`\n- `CAN_VIEW_TRACE_DETAILS`\n- `LIMITED_APPLICATIONS_SCOPE`\n- `LIMITED_INFRASTRUCTURE_SCOPE`\n- `LIMITED_KUBERNETES_SCOPE`\n- `LIMITED_MOBILE_APPS_SCOPE`\n- `LIMITED_WEBSITES_SCOPE`\n"
      }
    },
    "/api/settings/rbac/groups/{id}/user/{userId}": {
      "delete": {
        "description": "Remove the user from a group.",
        "operationId": "removeUserFromGroup",
        "parameters": [
          {
            "description": "Id of the group to remove user from",
            "example": "groupId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Id of the user to remove",
            "example": "userId",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureTeams"
            ]
          }
        ],
        "summary": "Remove user from group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/settings/rbac/mappings": {
      "get": {
        "operationId": "getGroupMappings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "mappingId",
                    "key": "roles",
                    "value": "analyst",
                    "groupId": "-3"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupMapping"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "No group mapping found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Get all group mappings",
        "tags": [
          "Groups"
        ],
        "description": "If mappings between groups on the identity provider (LDAP, OIDC, SAML) and Instana groups where configured, this will return a list of those mappings.\n\nThis can be configured through the [api](#operation/createGroupMapping) or on Instana graphical user interface at Settings > Authentication > IDENTITY PROVIDERS > Group Mapping."
      },
      "post": {
        "operationId": "createGroupMapping",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "roles",
                "value": "analyst",
                "groupId": "-3"
              },
              "schema": {
                "$ref": "#/components/schemas/GroupMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "mappingId",
                  "key": "roles",
                  "value": "analyst",
                  "groupId": "-3"
                },
                "schema": {
                  "$ref": "#/components/schemas/GroupMapping"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Create group mapping",
        "tags": [
          "Groups"
        ],
        "description": "Creates a mapping between a group from the IdP (LDAP, OIDC, SAML) and an Instana group.\n\nIf the IdP is configured and mappings are enabled, the `key` `value` pairs a user sent by the idp will be evaluated every time this user logs in.\n\nIf they match the mapping, the user will be assigned to the group corresponding to the `groupId`.\n\nInside the payload, the `id` for the mapping is ignored, and instead, Instana generates a new id."
      }
    },
    "/api/settings/rbac/mappings/identityProvider/restrictEmptyIdpGroups": {
      "get": {
        "operationId": "getIdentityProviderPatch",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "restrictEmptyIdpGroups": false
                },
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderPatch"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "No group mapping restriction found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Check user restrictions for empty Idp group mapping",
        "tags": [
          "Groups"
        ],
        "description": "Returns `RestrictEmptyIdpGroups` value indicating if access is denied for empty Idp group mapping. `RestrictEmptyIdpGroups = true` indicates that the tenant is locked and only those users are allowed access that have at least one working mapping rule applied to them during the login process."
      },
      "put": {
        "operationId": "updateIdentityProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "restrictEmptyIdpGroups": true
              },
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Allow/Restrict users with empty Idp group mapping",
        "tags": [
          "Groups"
        ],
        "description": "Set the RestrictEmptyIdpGroups value as true/false. See [Check user restrictions for empty Idp group mapping](#operation/getIdentityProviderPatch) for more details."
      }
    },
    "/api/settings/rbac/mappings/{id}": {
      "delete": {
        "operationId": "deleteGroupMapping",
        "parameters": [
          {
            "description": "Id of the group mapping to delete",
            "example": "mappingId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Delete group mapping",
        "tags": [
          "Groups"
        ]
      },
      "put": {
        "operationId": "updateGroupMapping",
        "parameters": [
          {
            "description": "Id of the group mapping to update",
            "example": "mappingId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "mappingId",
                "key": "roles",
                "value": "analyst",
                "groupId": "-3"
              },
              "schema": {
                "$ref": "#/components/schemas/GroupMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "mappingId",
                  "key": "roles",
                  "value": "analyst",
                  "groupId": "-3"
                },
                "schema": {
                  "$ref": "#/components/schemas/GroupMapping"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureAuthenticationMethods"
            ]
          }
        ],
        "summary": "Update group mapping",
        "tags": [
          "Groups"
        ],
        "description": "See [creating group mapping](#operation/createGroupMapping)"
      }
    },
    "/api/settings/session": {
      "delete": {
        "description": "Delete tenant unit session settings.",
        "operationId": "deleteSessionSettings",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Delete session settings",
        "tags": [
          "Session Settings"
        ]
      },
      "get": {
        "description": "Get the tenant unit session settings",
        "operationId": "getSessionSettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\n  tokenLifeTimeInMillis: 28800000,\n  idleTimeInMillis: 3600000\n}\n",
                "schema": {
                  "$ref": "#/components/schemas/SessionSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Get session settings",
        "tags": [
          "Session Settings"
        ]
      },
      "put": {
        "description": "Update individual tenant unit session settings.",
        "operationId": "setSessionSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "example": "{\n  tokenLifeTimeInMillis: 28800000,\n  idleTimeInMillis: 3600000\n}\n",
              "schema": {
                "$ref": "#/components/schemas/SessionSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\n  tokenLifeTimeInMillis: 28800000,\n  idleTimeInMillis: 3600000\n}\n",
                "schema": {
                  "$ref": "#/components/schemas/SessionSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Configure session settings",
        "tags": [
          "Session Settings"
        ]
      }
    },
    "/api/settings/sli": {
      "get": {
        "deprecated": true,
        "operationId": "getAllSliConfigs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLI Configs",
        "tags": [
          "SLI Settings"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "createSliConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Create SLI Config",
        "tags": [
          "SLI Settings"
        ],
        "description": "This endpoint creates the Service Level Indicator Configuration\n\n## Mandatory Parameters:\n\n- **id** A unique identifier for each SLI configuration\n\n- **sliName:** Name for the SLI configuration\n\n- **sliEntity:** Entity of the SLI configuration\n\n### SLI Entity specific parameters\n\nDepending on the chosen `sliType` in the `sliEntity`, there are further required parameters:\n\n#### Application SLI entity\n\nThis option can be used to create a Time-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n- **metricConfiguration.metricName:** The metric name on which to compute the SLI\n\n- **metricConfiguration.metricAggregation:** The aggregation of the metric\n\n- **metricConfiguration.threshold:** Threshold for the metric\n\n#### Availability SLI entity\n\nThis opetion can be used to create an Event-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n## Deprecated Parameters for Availability SLI entity:\n\n- **sliEntity.serviceId:** The ID if the Service in he context of an Application Perspective\n\n- **sliEntity.endpointId:** The ID of an Endpoint belonging to a Service\n\n- **sliEntity.goodEventFilters:** The list of TagFilters to match good events / calls\n\n- **sliEntity.badEventFilters:** The list of TagFilters to match bad events / calls\n\nAll of these filters can be included using the list of TagFilterExpressions via **sliEntity.goodEventFilterExpression** and **sliEntity.badEventFilterExpression**.\nThese parameters will be removed in the upcoming releases.\n"
      }
    },
    "/api/settings/sli/{id}": {
      "delete": {
        "deprecated": true,
        "operationId": "deleteSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Delete SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "get": {
        "deprecated": true,
        "operationId": "getSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "updateSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Update SLI Config",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/settings/slo": {
      "get": {
        "operationId": "getAllSloConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "entityType",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "website"
              ]
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "entityType"
              ]
            }
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "in": "query",
            "name": "sloIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "id": "SLOY2KDCFExTvmsLyf4W067JQ",
                      "name": "Stans test SLO 2",
                      "target": 0.99,
                      "lastUpdated": 1680182215442,
                      "entity": {
                        "type": "application",
                        "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                        "serviceId": null,
                        "endpointId": null,
                        "boundaryScope": "INBOUND",
                        "includeInternal": false,
                        "includeSynthetic": false,
                        "tagFilterExpression": null
                      },
                      "indicator": {
                        "type": "timeBased",
                        "blueprint": "latency",
                        "threshold": 100,
                        "aggregation": "P90"
                      },
                      "timeWindow": {
                        "type": "rolling",
                        "duration": 1,
                        "durationUnit": "week"
                      },
                      "tags": [
                        "Stan",
                        "testing"
                      ]
                    },
                    {
                      "id": "SLOsmbQLI8ORcuhF_L-QquFWQ",
                      "name": "[Should match no nothing test] website entity tag filter",
                      "target": 0.9999,
                      "lastUpdated": 1683792839372,
                      "entity": {
                        "type": "website",
                        "websiteId": "XIZGGVT1TX2O-0OFeT2Yig",
                        "beaconType": "httpRequest",
                        "tagFilterExpression": {
                          "type": "TAG_FILTER",
                          "name": "beacon.geo.country",
                          "stringValue": "Moon",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "Moon",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        }
                      },
                      "indicator": {
                        "type": "eventBased",
                        "blueprint": "latency",
                        "threshold": 60000
                      },
                      "timeWindow": {
                        "type": "rolling",
                        "duration": 1,
                        "durationUnit": "week"
                      },
                      "tags": [
                        "test",
                        "no matches"
                      ]
                    }
                  ],
                  "page": 1,
                  "pageSize": 10000,
                  "totalHits": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult"
                }
              }
            },
            "description": "List of the Service levels configurations"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLO Configs",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      },
      "post": {
        "operationId": "createSloConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Stans test SLO 4",
                "target": 0.99,
                "entity": {
                  "type": "application",
                  "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                  "serviceId": null,
                  "endpointId": null,
                  "boundaryScope": "INBOUND",
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "tagFilterExpression": null
                },
                "indicator": {
                  "type": "timeBased",
                  "blueprint": "latency",
                  "threshold": 100,
                  "aggregation": "P90"
                },
                "timeWindow": {
                  "type": "rolling",
                  "duration": 1,
                  "durationUnit": "week"
                },
                "tags": [
                  "Stan",
                  "testing"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelObjectiveConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "SLOdCTspkHlS_OzNOATQWgsuw",
                  "createdDate": 1680182236227,
                  "name": "Stans test SLO 4",
                  "target": 0.99,
                  "lastUpdated": 1713873207738,
                  "entity": {
                    "type": "application",
                    "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                    "serviceId": null,
                    "endpointId": null,
                    "boundaryScope": "INBOUND",
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "tagFilterExpression": null
                  },
                  "indicator": {
                    "type": "timeBased",
                    "blueprint": "latency",
                    "threshold": 100,
                    "aggregation": "P90"
                  },
                  "timeWindow": {
                    "type": "rolling",
                    "duration": 1,
                    "durationUnit": "week"
                  },
                  "tags": [
                    "Stan",
                    "testing"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelObjectiveConfiguration"
                }
              }
            },
            "description": "Persisted SLO setting"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Create a new SLO Config",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      }
    },
    "/api/settings/slo/tags": {
      "get": {
        "operationId": "getAllSloConfigTags",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "entityType",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "website"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "andre",
                  "test",
                  "testing",
                  "drinks",
                  "got no snacks",
                  "timeBased",
                  "Stan",
                  "no matches",
                  "availability",
                  "Lab",
                  "demo",
                  "thiemo",
                  "TimeWindow Test",
                  "robot-shop",
                  "eventBased",
                  "got snacks",
                  "migration",
                  "robert-creates-a-new-sli"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "List of SLO setting tags"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLO Config tags",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      }
    },
    "/api/settings/slo/{id}": {
      "delete": {
        "operationId": "deleteSloConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specified SLO seeting is deleted."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "The sloConfiguration you are looking for does not exist."
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "SLO setting is not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Delete an existing SLO Config",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      },
      "get": {
        "operationId": "getSloConfigById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "SLOdCTspkHlS_OzNOATQWgsuw",
                  "createdDate": 1680182236227,
                  "name": "Stans test SLO 4",
                  "target": 0.99,
                  "lastUpdated": 1713873207738,
                  "entity": {
                    "type": "application",
                    "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                    "serviceId": null,
                    "endpointId": null,
                    "boundaryScope": "INBOUND",
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "tagFilterExpression": null
                  },
                  "indicator": {
                    "type": "timeBased",
                    "blueprint": "latency",
                    "threshold": 100,
                    "aggregation": "P90"
                  },
                  "timeWindow": {
                    "type": "rolling",
                    "duration": 1,
                    "durationUnit": "week"
                  },
                  "tags": [
                    "Stan",
                    "testing"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelObjectiveConfiguration"
                }
              }
            },
            "description": "Persisted SLO setting"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "The sloConfiguration you are looking for does not exist."
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "SLO setting is not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get an existing SLO Config",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      },
      "put": {
        "operationId": "updateSloConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Stans test SLO 4",
                "target": 0.99,
                "entity": {
                  "type": "application",
                  "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                  "serviceId": null,
                  "endpointId": null,
                  "boundaryScope": "INBOUND",
                  "includeInternal": false,
                  "includeSynthetic": false,
                  "tagFilterExpression": null
                },
                "indicator": {
                  "type": "timeBased",
                  "blueprint": "latency",
                  "threshold": 100,
                  "aggregation": "P90"
                },
                "timeWindow": {
                  "type": "rolling",
                  "duration": 1,
                  "durationUnit": "week"
                },
                "tags": [
                  "Stan",
                  "testing"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelObjectiveConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "SLOdCTspkHlS_OzNOATQWgsuw",
                  "createdDate": 1680182236227,
                  "name": "Stans test SLO 4",
                  "target": 0.99,
                  "lastUpdated": 1713873207738,
                  "entity": {
                    "type": "application",
                    "applicationId": "VTNvC_sATZqMj4vSZfsjKA",
                    "serviceId": null,
                    "endpointId": null,
                    "boundaryScope": "INBOUND",
                    "includeInternal": false,
                    "includeSynthetic": false,
                    "tagFilterExpression": null
                  },
                  "indicator": {
                    "type": "timeBased",
                    "blueprint": "latency",
                    "threshold": 100,
                    "aggregation": "P90"
                  },
                  "timeWindow": {
                    "type": "rolling",
                    "duration": 1,
                    "durationUnit": "week"
                  },
                  "tags": [
                    "Stan",
                    "testing"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelObjectiveConfiguration"
                }
              }
            },
            "description": "Persisted SLO setting"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "The sloConfiguration you are looking for does not exist."
                  ]
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "SLO setting is not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Update an existing SLO Config",
        "tags": [
          "Service Levels Objective(SLO) Configurations"
        ]
      }
    },
    "/api/settings/synthetic-calls": {
      "delete": {
        "operationId": "deleteSyntheticCall",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      },
      "get": {
        "operationId": "getSyntheticCalls",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticCallWithDefaultsConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      },
      "put": {
        "operationId": "updateSyntheticCall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticCallConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      }
    },
    "/api/settings/users": {
      "get": {
        "description": "Retrieves all users with access to the tenant. The result will not contain pending invitations.",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "userId",
                    "email": "username@example.com",
                    "fullName": "username",
                    "lastLoggedIn": 1636434847190,
                    "groupCount": 1,
                    "tfaEnabled": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "All users (without invitations)",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/overview": {
      "get": {
        "description": "Retrieves all users with access to the tenant. The result will also contain pending invitations.",
        "operationId": "getUsersIncludingInvitations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "users": [
                    {
                      "id": "userId1",
                      "email": "username@example.com",
                      "fullName": "fullName",
                      "lastLoggedIn": 1699313025975,
                      "groupCount": null,
                      "tfaEnabled": null
                    }
                  ],
                  "invitations": [
                    {
                      "id": "userId2",
                      "email": "username2@example.com",
                      "groupId": "-3"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/UsersResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "All users (incl. invitations)",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/{email}": {
      "put": {
        "description": "Updates the full name of the user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "fullName": "Updated Name"
              },
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Change user name of single user",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/{userId}": {
      "delete": {
        "description": "Remove the users access to the tenant. Removing a user from a tenant does not delete their user account.",
        "operationId": "removeUserFromTenant",
        "parameters": [
          {
            "description": "Id of the user for removal",
            "example": "userId",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Remove user from tenant",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "Retrieves the user with access to the tenant.",
        "operationId": "getUserById",
        "parameters": [
          {
            "description": "Id of the user for retrieval",
            "example": "userId",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "userId",
                  "preferredName": "preferredName",
                  "fullName": "fullName",
                  "email": "username@example.com",
                  "encryptedPassword": "",
                  "lastLoggedIn": 1699442707385,
                  "timestampAcceptedTos": 1696404223545,
                  "timestampAcceptedPrivacyAgreement": 1696404223545,
                  "acceptedTosVersion": 6,
                  "acceptedPrivacyAgreementVersion": 9,
                  "tenantsWhereMainContact": [],
                  "tenants": [],
                  "createDate": 1696404196256,
                  "emailConfirmed": true,
                  "tenantIds": [
                    "55557f97186b9c0007857730"
                  ],
                  "passwordResetAttempt": 0,
                  "groupCount": null,
                  "tfaEnabled": null,
                  "role": null
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResult"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureUsers"
            ]
          }
        ],
        "summary": "Get single user",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/v2/maintenance": {
      "get": {
        "operationId": "getMaintenanceConfigsV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "maintenanceConfigId",
                    "name": "maintenanceConfig",
                    "query": "entity.application.id:\"anApplicationId\"",
                    "scheduling": {
                      "start": 1680703219486,
                      "duration": {
                        "amount": 2,
                        "unit": "HOURS"
                      },
                      "rrule": "FREQ=DAILY;INTERVAL=1;COUNT=1",
                      "timezoneId": "UTC",
                      "type": "RECURRENT"
                    },
                    "paused": false,
                    "lastUpdated": 1680703219678,
                    "state": "EXPIRED",
                    "validVersion": 1,
                    "occurrence": {
                      "start": 1680703219000,
                      "end": 1680710419000
                    },
                    "invalid": false,
                    "applicationNames": [
                      "anApplicationName"
                    ]
                  },
                  {
                    "id": "anotherMaintenanceConfigId",
                    "name": "anotherMaintenanceConfig",
                    "query": "entity.type:ibmz.db2",
                    "scheduling": {
                      "start": 1680703219486,
                      "duration": {
                        "amount": 2,
                        "unit": "HOURS"
                      },
                      "rrule": "FREQ=DAILY;INTERVAL=1;COUNT=1",
                      "timezoneId": "UTC",
                      "type": "RECURRENT"
                    },
                    "paused": false,
                    "lastUpdated": 1680703219678,
                    "state": "EXPIRED",
                    "validVersion": 1,
                    "occurrence": {
                      "start": 1680703219000,
                      "end": 1680710419000
                    },
                    "invalid": false,
                    "applicationNames": []
                  },
                  {
                    "id": "1698949644924",
                    "name": "sampleMaintenanceConfig",
                    "query": "",
                    "scheduling": {
                      "start": 1698949644924,
                      "duration": {
                        "amount": 2,
                        "unit": "HOURS"
                      },
                      "rrule": "FREQ=WEEKLY;INTERVAL=2;BYDAY=SA;COUNT=10",
                      "timezoneId": "America/New_York",
                      "type": "RECURRENT"
                    },
                    "paused": false,
                    "validVersion": 1,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "OR",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.locationLabelAggregated",
                          "stringValue": "us-east",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "us-east",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.syntheticType",
                          "stringValue": "HTTPScript",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "HTTPScript",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        }
                      ]
                    },
                    "tagFilterExpressionEnabled": true,
                    "lastUpdated": 1698949645163,
                    "state": "SCHEDULED",
                    "occurrence": {
                      "start": 1699122444000,
                      "end": 1699129644000
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidatedMaintenanceConfigV2WithStateAndOccurrence"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "All maintenance configurations",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint retrieves all available maintenance configurations.  "
      }
    },
    "/api/settings/v2/maintenance/{id}": {
      "delete": {
        "operationId": "deleteMaintenanceConfigV2",
        "parameters": [
          {
            "example": "exampleMaintenanceConfigId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Delete maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint deletes a maintenance configuration given its ID.\n\n### Path Parameters:\n\n- **id:** The ID of the maintenance config to delete."
      },
      "get": {
        "operationId": "getMaintenanceConfigV2",
        "parameters": [
          {
            "example": "exampleMaintenanceConfigId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "maintenanceConfigId",
                  "name": "maintenanceConfig",
                  "query": "",
                  "scheduling": {
                    "start": 1683864000000,
                    "duration": {
                      "amount": 24,
                      "unit": "HOURS"
                    },
                    "type": "ONE_TIME"
                  },
                  "paused": false,
                  "validVersion": 1,
                  "lastUpdated": 1683901553115,
                  "state": "EXPIRED",
                  "occurrence": {
                    "start": 1683864000000,
                    "end": 1683950400000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigV2WithStateAndOccurrence"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Get maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint retrieves a maintenance configuration given its ID.\n\n### Path Parameters:\n\n- **id:** The ID of the maintenance config to fetch."
      },
      "put": {
        "operationId": "putMaintenanceConfigV2",
        "parameters": [
          {
            "example": "exampleMaintenanceConfigId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceConfigV2"
              },
              "examples": {
                "payload": {
                  "value": {
                    "id": "maintenanceConfigID",
                    "name": "sampleMaintenanceConfig",
                    "query": "",
                    "scheduling": {
                      "start": 1683827571245,
                      "duration": {
                        "amount": 2,
                        "unit": "HOURS"
                      },
                      "type": "RECURRENT",
                      "rrule": "FREQ=WEEKLY;INTERVAL=2;BYDAY=SA;COUNT=10",
                      "timezoneId": "America/New_York"
                    },
                    "tagFilterExpressionEnabled": true,
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "OR",
                      "elements": [
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.locationLabelAggregated",
                          "stringValue": "us-east",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "us-east",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        },
                        {
                          "type": "TAG_FILTER",
                          "name": "synthetic.syntheticType",
                          "stringValue": "HTTPScript",
                          "numberValue": null,
                          "booleanValue": null,
                          "key": null,
                          "value": "HTTPScript",
                          "operator": "EQUALS",
                          "entity": "NOT_APPLICABLE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "maintenanceConfigId",
                  "name": "maintenanceConfig",
                  "query": "",
                  "scheduling": {
                    "start": 1698938631036,
                    "duration": {
                      "amount": 2,
                      "unit": "HOURS"
                    },
                    "type": "ONE_TIME"
                  },
                  "paused": false,
                  "validVersion": 1,
                  "tagFilterExpression": {
                    "type": "EXPRESSION",
                    "logicalOperator": "OR",
                    "elements": [
                      {
                        "type": "TAG_FILTER",
                        "name": "synthetic.locationLabelAggregated",
                        "stringValue": "us-east",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "us-east",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      },
                      {
                        "type": "TAG_FILTER",
                        "name": "synthetic.syntheticType",
                        "stringValue": "HTTPScript",
                        "numberValue": null,
                        "booleanValue": null,
                        "key": null,
                        "value": "HTTPScript",
                        "operator": "EQUALS",
                        "entity": "NOT_APPLICABLE"
                      }
                    ]
                  },
                  "tagFilterExpressionEnabled": true,
                  "lastUpdated": 1698938631408,
                  "state": "ACTIVE",
                  "occurrence": {
                    "start": 1698938631036,
                    "end": 1698945831036
                  }
                }
              }
            },
            "description": "Maintenance config has been created or updated, and successfully scheduled immediately if needed"
          },
          "202": {
            "description": "Maintenance config has been created or updated, but could not to be scheduled immediately. It will therefore be scheduled during the next auto-refresh with a delay of up to 4 minutes."
          },
          "400": {
            "description": "The provided maintenance configuration is invalid."
          },
          "422": {
            "description": "The provided maintenance configuration is incomplete or cannot be processed."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Create or update maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint creates or updates a maintenance configuration given its ID.\n\n### Path Parameters:\n\n- **id:** The ID of the maintenance config to create or update.\n\n### Maintenance Configuration Input\nThis is a description for the fields in the request body:\n\n**id**: maintenance configuration unique id  \n**name**: maintenance configuration name  \n**query**: dynamic focus query used to filter alert notifications that will be muted  \n**scheduling**: defines when the maintenance configuration will be scheduled\n- **start**: time in milliseconds from epoch\n- **duration**: duration of each maintenance window occurrence in the maintenance configuration\n    - **amount**: the amount of time\n    - **unit**: the unit of time\n- **type**: `ONE_TIME` or `RECURRENT`\n- **rrule**:  for `RECURRENT` mainteance configurations, the RRULE standard from the [iCalendar Spec](https://datatracker.ietf.org/doc/html/rfc5545)\n- **paused**: indicates whether maintenance configuration is paused or not  \n\n**tagFilterExpressionEnabled (OPTIONAL) (Closed Beta)**: indicates whether tagFilterExpression is used to filter alert notifications  \n**tagFilterExpression (OPTIONAL) (Closed Beta)**: tag filter expression used to filter alert notifications that will be muted (this field needs to be provided if **tagFilterExpressionEnabled** is set to true) \n\n### **Scope**\nThere are four supported scopes; application perspective, dynamic focus query, synthetic tests, all entities. Below is the configuration corresponding to each scope:\n\n**1. Application Perspective**  \n&nbsp;&nbsp; dfq: a valid dynamic focus query  \n&nbsp;&nbsp; tfeEnabled: (optional)  \n&nbsp;&nbsp; tfe: (optional)  \n\n**2. Dynamic Focus Query**  \n&nbsp;&nbsp; dfq: a valid dynamic focus query  \n&nbsp;&nbsp; tfeEnabled: (optional)  \n&nbsp;&nbsp; tfe: (optional)  \n\n**3. Synthetic Tests**  \n&nbsp;&nbsp; dfq: \"\"  \n&nbsp;&nbsp; tfeEnabled: true  \n&nbsp;&nbsp; tfe: a valid tag filter expression  \n\n**4. All Entities**  \n&nbsp;&nbsp; dfq: \"\"  \n&nbsp;&nbsp; tfeEnabled: false  \n&nbsp;&nbsp; tfe: null\n\n### **RRULE Support**\nYou can use the [RRULE tool](https://icalendar.org/rrule-tool.html) for generating RRULEs.\n\n\nThe following RRULE tokens are supported: `FREQ`, `UNTIL`, `COUNT`, `INTERVAL`, `BYDAY`, `BYMONTHDAY`, `BYMONTH`.\n\n**Additional Constraints:**\n\n1. For `MONTHLY` and `YEARLY`, you can only specify one value for `BYDAY` and `BYMONTHDAY`.  \n2. The maximum `INTERVAL` allowed is as follows:  \n    - DAILY is 365\n    - WEEKLY is 52\n    - MONTHLY is 12\n    - YEARLY is 1\n3. If an `UNTIL` date is specified, the value needs to be in UTC.\n\n### **Tag Filter Expression Support**\nWe support the following tag filters:\n- synthetic.syntheticType\n- synthetic.testName\n- synthetic.locationLabelAggregated\n- synthetic.tags"
      }
    },
    "/api/settings/v2/maintenance/{id}/pause": {
      "put": {
        "operationId": "pauseRecurrentMaintenanceConfiguration",
        "parameters": [
          {
            "example": "exampleMaintenanceConfigId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "maintenanceConfigId",
                  "name": "maintenanceConfig",
                  "query": "entity.application.id:\"anApplicationId\"",
                  "scheduling": {
                    "start": 1684251745262,
                    "duration": {
                      "amount": 2,
                      "unit": "HOURS"
                    },
                    "type": "ONE_TIME"
                  },
                  "paused": true,
                  "validVersion": 1,
                  "lastUpdated": 1684251750475,
                  "state": "PAUSED",
                  "occurrence": {
                    "start": 1684251745262,
                    "end": 1684258945262
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigV2WithStateAndOccurrence"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Pause maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint pauses a maintenance configuration given its ID.\n\nWhen you pause a maintenance configuration, you will start receiving alerts again for the scope defined in the maintenance configuration.\n### Path Parameters:\n\n- **id:** The ID of the maintenance config to pause.\n"
      }
    },
    "/api/settings/v2/maintenance/{id}/resume": {
      "put": {
        "operationId": "resumeRecurrentMaintenanceConfiguration",
        "parameters": [
          {
            "example": "exampleMaintenanceConfigId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "maintenanceConfigId",
                  "name": "maintenanceConfig",
                  "query": "entity.application.id:\"anApplicationId\"",
                  "scheduling": {
                    "start": 1684251745262,
                    "duration": {
                      "amount": 2,
                      "unit": "HOURS"
                    },
                    "type": "ONE_TIME"
                  },
                  "paused": false,
                  "validVersion": 1,
                  "lastUpdated": 1684251933433,
                  "state": "ACTIVE",
                  "occurrence": {
                    "start": 1684251745262,
                    "end": 1684258945262
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigV2WithStateAndOccurrence"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureMaintenanceWindows"
            ]
          }
        ],
        "summary": "Resume maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ],
        "description": "This endpoint resumes a maintenance configuration given its ID.\n\nIf the maintenance configuration becomes active when you resume the maintenance configuration, you will not receive alerts for the scope defined in the maintenance configuration.\n### Path Parameters:\n\n- **id:** The ID of the maintenance config to resume.\n"
      }
    },
    "/api/settings/v2/sli": {
      "get": {
        "operationId": "getAllSliConfigsV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "T0yCMBR4G",
                    "sliName": "Siva SLI test",
                    "initialEvaluationTimestamp": 1637758860000,
                    "metricConfiguration": {
                      "metricName": "latency",
                      "metricAggregation": "P90",
                      "threshold": 100
                    },
                    "sliEntity": {
                      "sliType": "application",
                      "applicationId": "1qvXgVfLTNqi8gGTcCaNUw",
                      "serviceId": "6097d596c3d9024034b3d03b2b5c43acea65e5a4",
                      "endpointId": "oETFj2WyPusvXgRW_181J3fH_t8",
                      "boundaryScope": "INBOUND"
                    },
                    "lastUpdated": 1637758839104
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLI Configs",
        "tags": [
          "SLI Settings"
        ]
      },
      "post": {
        "operationId": "createSliConfigV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Create SLI Config",
        "tags": [
          "SLI Settings"
        ],
        "description": "This endpoint creates the Service Level Indicator Configuration\n\n## Mandatory Parameters:\n\n- **id** A unique identifier for each SLI configuration\n\n- **sliName:** Name for the SLI configuration\n\n- **sliEntity:** Entity of the SLI configuration\n\n### SLI Entity specific parameters\n\nDepending on the chosen `sliType` in the `sliEntity`, there are further required parameters:\n\n#### Application SLI entity\n\nThis option can be used to create a Time-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n- **metricConfiguration.metricName:** The metric name on which to compute the SLI\n\n- **metricConfiguration.metricAggregation:** The aggregation of the metric\n\n- **metricConfiguration.threshold:** Threshold for the metric\n\n#### Availability SLI entity\n\nThis opetion can be used to create an Event-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n## Deprecated Parameters for Availability SLI entity:\n\n- **sliEntity.serviceId:** The ID if the Service in he context of an Application Perspective\n\n- **sliEntity.endpointId:** The ID of an Endpoint belonging to a Service\n\n- **sliEntity.goodEventFilters:** The list of TagFilters to match good events / calls\n\n- **sliEntity.badEventFilters:** The list of TagFilters to match bad events / calls\n\nAll of these filters can be included using the list of TagFilterExpressions via **sliEntity.goodEventFilterExpression** and **sliEntity.badEventFilterExpression**.\nThese parameters will be removed in the upcoming releases.\n"
      }
    },
    "/api/settings/v2/sli/{entityType}/{entityId}": {
      "get": {
        "operationId": "getSliConfigsForEntityTypeAndIdV2",
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPLICATION",
                "WEBSITE"
              ]
            }
          },
          {
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "HXcNRWhDSWiZs3HiUAKr7g",
                    "sliName": "turbo time 1",
                    "initialEvaluationTimestamp": 1648133520000,
                    "metricConfiguration": {
                      "metricName": "latency",
                      "metricAggregation": "P90",
                      "threshold": 300
                    },
                    "sliEntity": {
                      "sliType": "application",
                      "applicationId": "1qvXgVfLTNqi8gGTcCaNUw",
                      "serviceId": null,
                      "endpointId": null,
                      "boundaryScope": "INBOUND"
                    },
                    "lastUpdated": 1648133508938
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get all SLI configs for entity type and entity id",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/settings/v2/sli/{id}": {
      "delete": {
        "operationId": "deleteSliConfigV2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Delete SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "get": {
        "operationId": "getSliConfigV2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "HXcNRWhDSWiZs3HiUAKr7g",
                    "sliName": "turbo time 1",
                    "initialEvaluationTimestamp": 1648133520000,
                    "metricConfiguration": {
                      "metricName": "latency",
                      "metricAggregation": "P90",
                      "threshold": 300
                    },
                    "sliEntity": {
                      "sliType": "application",
                      "applicationId": "1qvXgVfLTNqi8gGTcCaNUw",
                      "serviceId": null,
                      "endpointId": null,
                      "boundaryScope": "INBOUND"
                    },
                    "lastUpdated": 1648133508938
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get SLI Config",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/sli/report/{sliId}": {
      "get": {
        "operationId": "getSli",
        "parameters": [
          {
            "description": "sliId",
            "example": "nCtEoR6NSPqG61QkIkwwCw",
            "in": "path",
            "name": "sliId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "slo target",
            "example": 0.99,
            "in": "query",
            "name": "slo",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "description": "Timestamp milliseconds (13-digit)",
            "example": 1706713140000,
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Timestamp milliseconds (13-digit)",
            "example": 1706713140000,
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "sli": 0.008228916434859497,
                  "slo": 0.1,
                  "totalErrorBudget": 10236633,
                  "errorBudgetRemaining": -1043808,
                  "fromTimestamp": 1707771600000,
                  "toTimestamp": 1707858000000,
                  "violationDistribution": null
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SliReport"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Generate SLI report (Limitation: the Classic Edition API report can be available one hour after the SLI configuration created; other editions are around one minute.)",
        "tags": [
          "SLI Report"
        ]
      }
    },
    "/api/slo/report/{sloId}": {
      "get": {
        "operationId": "getSlo",
        "parameters": [
          {
            "in": "path",
            "name": "sloId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "sli": 1,
                  "slo": 0.9999,
                  "totalErrorBudget": 12,
                  "errorBudgetRemaining": 12,
                  "errorBudgetSpent": 0,
                  "fromTimestamp": 1705081552605,
                  "toTimestamp": 1705686352605,
                  "violationDistribution": {
                    "0": 0,
                    "1": 0,
                    "2": 0,
                    "3": 0,
                    "4": 0,
                    "5": 0,
                    "6": 0,
                    "7": 0,
                    "8": 0,
                    "9": 0,
                    "10": 0,
                    "11": 0,
                    "12": 0,
                    "13": 0,
                    "14": 0,
                    "15": 0,
                    "16": 0,
                    "17": 0,
                    "18": 0,
                    "19": 0,
                    "20": 0,
                    "21": 0,
                    "22": 0,
                    "23": 0,
                    "24": 0,
                    "25": 0,
                    "26": 0,
                    "27": 0,
                    "28": 0,
                    "29": 0,
                    "30": 0,
                    "31": 0,
                    "32": 0,
                    "33": 0,
                    "34": 0,
                    "35": 0,
                    "36": 0,
                    "37": 0,
                    "38": 0,
                    "39": 0,
                    "40": 0,
                    "41": 0,
                    "42": 0,
                    "43": 0,
                    "44": 0,
                    "45": 0,
                    "46": 0,
                    "47": 0,
                    "48": 0,
                    "49": 0,
                    "50": 0,
                    "51": 0,
                    "52": 0,
                    "53": 0,
                    "54": 0,
                    "55": 0,
                    "56": 0,
                    "57": 0,
                    "58": 0,
                    "59": 0,
                    "60": 0,
                    "61": 0,
                    "62": 0,
                    "63": 0,
                    "64": 0,
                    "65": 0,
                    "66": 0,
                    "67": 0,
                    "68": 0,
                    "69": 0,
                    "70": 0,
                    "71": 0,
                    "72": 0,
                    "73": 0,
                    "74": 0,
                    "75": 0,
                    "76": 0,
                    "77": 0,
                    "78": 0,
                    "79": 0,
                    "80": 0,
                    "81": 0,
                    "82": 0,
                    "83": 0,
                    "84": 0,
                    "85": 0,
                    "86": 0,
                    "87": 0,
                    "88": 0,
                    "89": 0,
                    "90": 0,
                    "91": 0,
                    "92": 0,
                    "93": 0,
                    "94": 0,
                    "95": 0,
                    "96": 0,
                    "97": 0,
                    "98": 0,
                    "99": 0,
                    "100": 0,
                    "101": 0,
                    "102": 0,
                    "103": 0,
                    "104": 0,
                    "105": 0,
                    "106": 0,
                    "107": 0,
                    "108": 0,
                    "109": 0,
                    "110": 0,
                    "111": 0,
                    "112": 0,
                    "113": 0,
                    "114": 0,
                    "115": 0,
                    "116": 0,
                    "117": 0,
                    "118": 0,
                    "119": 0,
                    "120": 0,
                    "121": 0,
                    "122": 0,
                    "123": 0,
                    "124": 0,
                    "125": 0,
                    "126": 0,
                    "127": 0,
                    "128": 0,
                    "129": 0,
                    "130": 0,
                    "131": 0,
                    "132": 0,
                    "133": 0,
                    "134": 0,
                    "135": 0,
                    "136": 0,
                    "137": 0,
                    "138": 0,
                    "139": 0,
                    "140": 0,
                    "141": 0,
                    "142": 0,
                    "143": 0,
                    "144": 0,
                    "145": 0,
                    "146": 0,
                    "147": 0,
                    "148": 0,
                    "149": 0,
                    "150": 0,
                    "151": 0,
                    "152": 0,
                    "153": 0,
                    "154": 0,
                    "155": 0,
                    "156": 0,
                    "157": 0,
                    "158": 0,
                    "159": 0,
                    "160": 0,
                    "161": 0,
                    "162": 0,
                    "163": 0,
                    "164": 0,
                    "165": 0,
                    "166": 0,
                    "167": 0
                  },
                  "errorChart": {
                    "0": 0,
                    "1": 0,
                    "2": 0,
                    "3": 0,
                    "4": 0,
                    "5": 0,
                    "6": 0,
                    "7": 0,
                    "8": 0,
                    "9": 0,
                    "10": 0,
                    "11": 0,
                    "12": 0,
                    "13": 0,
                    "14": 0,
                    "15": 0,
                    "16": 0,
                    "17": 0,
                    "18": 0,
                    "19": 0,
                    "20": 0,
                    "21": 0,
                    "22": 0,
                    "23": 0,
                    "24": 0,
                    "25": 0,
                    "26": 0,
                    "27": 0,
                    "28": 0,
                    "29": 0,
                    "30": 0,
                    "31": 0,
                    "32": 0,
                    "33": 0,
                    "34": 0,
                    "35": 0,
                    "36": 0,
                    "37": 0,
                    "38": 0,
                    "39": 0,
                    "40": 0,
                    "41": 0,
                    "42": 0,
                    "43": 0,
                    "44": 0,
                    "45": 0,
                    "46": 0,
                    "47": 0,
                    "48": 0,
                    "49": 0,
                    "50": 0,
                    "51": 0,
                    "52": 0,
                    "53": 0,
                    "54": 0,
                    "55": 0,
                    "56": 0,
                    "57": 0,
                    "58": 0,
                    "59": 0,
                    "60": 0,
                    "61": 0,
                    "62": 0,
                    "63": 0,
                    "64": 0,
                    "65": 0,
                    "66": 0,
                    "67": 0,
                    "68": 0,
                    "69": 0,
                    "70": 0,
                    "71": 0,
                    "72": 0,
                    "73": 0,
                    "74": 0,
                    "75": 0,
                    "76": 0,
                    "77": 0,
                    "78": 0,
                    "79": 0,
                    "80": 0,
                    "81": 0,
                    "82": 0,
                    "83": 0,
                    "84": 0,
                    "85": 0,
                    "86": 0,
                    "87": 0,
                    "88": 0,
                    "89": 0,
                    "90": 0,
                    "91": 0,
                    "92": 0,
                    "93": 0,
                    "94": 0,
                    "95": 0,
                    "96": 0,
                    "97": 0,
                    "98": 0,
                    "99": 0,
                    "100": 0,
                    "101": 0,
                    "102": 0,
                    "103": 0,
                    "104": 0,
                    "105": 0,
                    "106": 0,
                    "107": 0,
                    "108": 0,
                    "109": 0,
                    "110": 0,
                    "111": 0,
                    "112": 0,
                    "113": 0,
                    "114": 0,
                    "115": 0,
                    "116": 0,
                    "117": 0,
                    "118": 0,
                    "119": 0,
                    "120": 0,
                    "121": 0,
                    "122": 0,
                    "123": 0,
                    "124": 0,
                    "125": 0,
                    "126": 0,
                    "127": 0,
                    "128": 0,
                    "129": 0,
                    "130": 0,
                    "131": 0,
                    "132": 0,
                    "133": 0,
                    "134": 0,
                    "135": 0,
                    "136": 0,
                    "137": 0,
                    "138": 0,
                    "139": 0,
                    "140": 0,
                    "141": 0,
                    "142": 0,
                    "143": 0,
                    "144": 0,
                    "145": 0,
                    "146": 0,
                    "147": 0,
                    "148": 0,
                    "149": 0,
                    "150": 0,
                    "151": 0,
                    "152": 0,
                    "153": 0,
                    "154": 0,
                    "155": 0,
                    "156": 0,
                    "157": 0,
                    "158": 0,
                    "159": 0,
                    "160": 0,
                    "161": 0,
                    "162": 0,
                    "163": 0,
                    "164": 0,
                    "165": 0,
                    "166": 0,
                    "167": 0
                  },
                  "errorAccumulationChart": {
                    "0": 0,
                    "1": 0,
                    "2": 0,
                    "3": 0,
                    "4": 0,
                    "5": 0,
                    "6": 0,
                    "7": 0,
                    "8": 0,
                    "9": 0,
                    "10": 0,
                    "11": 0,
                    "12": 0,
                    "13": 0,
                    "14": 0,
                    "15": 0,
                    "16": 0,
                    "17": 0,
                    "18": 0,
                    "19": 0,
                    "20": 0,
                    "21": 0,
                    "22": 0,
                    "23": 0,
                    "24": 0,
                    "25": 0,
                    "26": 0,
                    "27": 0,
                    "28": 0,
                    "29": 0,
                    "30": 0,
                    "31": 0,
                    "32": 0,
                    "33": 0,
                    "34": 0,
                    "35": 0,
                    "36": 0,
                    "37": 0,
                    "38": 0,
                    "39": 0,
                    "40": 0,
                    "41": 0,
                    "42": 0,
                    "43": 0,
                    "44": 0,
                    "45": 0,
                    "46": 0,
                    "47": 0,
                    "48": 0,
                    "49": 0,
                    "50": 0,
                    "51": 0,
                    "52": 0,
                    "53": 0,
                    "54": 0,
                    "55": 0,
                    "56": 0,
                    "57": 0,
                    "58": 0,
                    "59": 0,
                    "60": 0,
                    "61": 0,
                    "62": 0,
                    "63": 0,
                    "64": 0,
                    "65": 0,
                    "66": 0,
                    "67": 0,
                    "68": 0,
                    "69": 0,
                    "70": 0,
                    "71": 0,
                    "72": 0,
                    "73": 0,
                    "74": 0,
                    "75": 0,
                    "76": 0,
                    "77": 0,
                    "78": 0,
                    "79": 0,
                    "80": 0,
                    "81": 0,
                    "82": 0,
                    "83": 0,
                    "84": 0,
                    "85": 0,
                    "86": 0,
                    "87": 0,
                    "88": 0,
                    "89": 0,
                    "90": 0,
                    "91": 0,
                    "92": 0,
                    "93": 0,
                    "94": 0,
                    "95": 0,
                    "96": 0,
                    "97": 0,
                    "98": 0,
                    "99": 0,
                    "100": 0,
                    "101": 0,
                    "102": 0,
                    "103": 0,
                    "104": 0,
                    "105": 0,
                    "106": 0,
                    "107": 0,
                    "108": 0,
                    "109": 0,
                    "110": 0,
                    "111": 0,
                    "112": 0,
                    "113": 0,
                    "114": 0,
                    "115": 0,
                    "116": 0,
                    "117": 0,
                    "118": 0,
                    "119": 0,
                    "120": 0,
                    "121": 0,
                    "122": 0,
                    "123": 0,
                    "124": 0,
                    "125": 0,
                    "126": 0,
                    "127": 0,
                    "128": 0,
                    "129": 0,
                    "130": 0,
                    "131": 0,
                    "132": 0,
                    "133": 0,
                    "134": 0,
                    "135": 0,
                    "136": 0,
                    "137": 0,
                    "138": 0,
                    "139": 0,
                    "140": 0,
                    "141": 0,
                    "142": 0,
                    "143": 0,
                    "144": 0,
                    "145": 0,
                    "146": 0,
                    "147": 0,
                    "148": 0,
                    "149": 0,
                    "150": 0,
                    "151": 0,
                    "152": 0,
                    "153": 0,
                    "154": 0,
                    "155": 0,
                    "156": 0,
                    "157": 0,
                    "158": 0,
                    "159": 0,
                    "160": 0,
                    "161": 0,
                    "162": 0,
                    "163": 0,
                    "164": 0,
                    "165": 0,
                    "166": 0,
                    "167": 0
                  },
                  "errorBudgetRemainChart": {
                    "0": 0,
                    "1": 0,
                    "2": 0,
                    "3": 0,
                    "4": 0,
                    "5": 0,
                    "6": 0,
                    "7": 0,
                    "8": 0,
                    "9": 0,
                    "10": 1,
                    "11": 1,
                    "12": 1,
                    "13": 1,
                    "14": 1,
                    "15": 1,
                    "16": 1,
                    "17": 1,
                    "18": 1,
                    "19": 1,
                    "20": 1,
                    "21": 2,
                    "22": 2,
                    "23": 2,
                    "24": 2,
                    "25": 2,
                    "26": 2,
                    "27": 2,
                    "28": 2,
                    "29": 2,
                    "30": 2,
                    "31": 2,
                    "32": 2,
                    "33": 3,
                    "34": 3,
                    "35": 3,
                    "36": 3,
                    "37": 3,
                    "38": 3,
                    "39": 3,
                    "40": 3,
                    "41": 3,
                    "42": 3,
                    "43": 3,
                    "44": 4,
                    "45": 4,
                    "46": 4,
                    "47": 4,
                    "48": 4,
                    "49": 4,
                    "50": 4,
                    "51": 4,
                    "52": 4,
                    "53": 4,
                    "54": 4,
                    "55": 4,
                    "56": 5,
                    "57": 5,
                    "58": 5,
                    "59": 5,
                    "60": 5,
                    "61": 5,
                    "62": 5,
                    "63": 5,
                    "64": 5,
                    "65": 5,
                    "66": 5,
                    "67": 6,
                    "68": 6,
                    "69": 6,
                    "70": 6,
                    "71": 6,
                    "72": 6,
                    "73": 6,
                    "74": 6,
                    "75": 6,
                    "76": 6,
                    "77": 6,
                    "78": 6,
                    "79": 7,
                    "80": 7,
                    "81": 7,
                    "82": 7,
                    "83": 7,
                    "84": 7,
                    "85": 7,
                    "86": 7,
                    "87": 7,
                    "88": 7,
                    "89": 7,
                    "90": 7,
                    "91": 7,
                    "92": 7,
                    "93": 7,
                    "94": 7,
                    "95": 7,
                    "96": 7,
                    "97": 7,
                    "98": 7,
                    "99": 7,
                    "100": 7,
                    "101": 7,
                    "102": 7,
                    "103": 7,
                    "104": 7,
                    "105": 7,
                    "106": 7,
                    "107": 7,
                    "108": 7,
                    "109": 7,
                    "110": 7,
                    "111": 7,
                    "112": 7,
                    "113": 7,
                    "114": 7,
                    "115": 8,
                    "116": 8,
                    "117": 8,
                    "118": 8,
                    "119": 8,
                    "120": 8,
                    "121": 8,
                    "122": 8,
                    "123": 8,
                    "124": 8,
                    "125": 8,
                    "126": 8,
                    "127": 9,
                    "128": 9,
                    "129": 9,
                    "130": 9,
                    "131": 9,
                    "132": 9,
                    "133": 9,
                    "134": 9,
                    "135": 9,
                    "136": 9,
                    "137": 9,
                    "138": 10,
                    "139": 10,
                    "140": 10,
                    "141": 10,
                    "142": 10,
                    "143": 10,
                    "144": 10,
                    "145": 10,
                    "146": 10,
                    "147": 10,
                    "148": 10,
                    "149": 10,
                    "150": 11,
                    "151": 11,
                    "152": 11,
                    "153": 11,
                    "154": 11,
                    "155": 11,
                    "156": 11,
                    "157": 11,
                    "158": 11,
                    "159": 11,
                    "160": 11,
                    "161": 12,
                    "162": 12,
                    "163": 12,
                    "164": 12,
                    "165": 12,
                    "166": 12,
                    "167": 12
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SloReport"
                  }
                }
              }
            },
            "description": "Service Level report"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Generate Service Levels report",
        "tags": [
          "Service Levels Objective(SLO) Report"
        ]
      }
    },
    "/api/synthetics/catalog": {
      "get": {
        "operationId": "getSyntheticTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tagTree": [
                    {
                      "label": "Commonly Used",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Location Label",
                          "tagName": "synthetic.locationLabel",
                          "type": "TAG"
                        },
                        {
                          "label": "Synthetic Type Label",
                          "tagName": "synthetic.typeLabel",
                          "type": "TAG"
                        },
                        {
                          "label": "Tags",
                          "tagName": "synthetic.tags",
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    },
                    {
                      "label": "Application",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Application Id",
                          "tagName": "synthetic.applicationId",
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    },
                    {
                      "label": "Synthetic Test",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Errors",
                          "tagName": "synthetic.errors",
                          "type": "TAG"
                        },
                        {
                          "label": "Synthetic Type",
                          "tagName": "synthetic.syntheticType",
                          "type": "TAG"
                        },
                        {
                          "label": "Synthetic Type Label",
                          "tagName": "synthetic.typeLabel",
                          "type": "TAG"
                        },
                        {
                          "label": "Tags",
                          "tagName": "synthetic.tags",
                          "type": "TAG"
                        },
                        {
                          "label": "Test Active",
                          "tagName": "synthetic.testActive",
                          "type": "TAG"
                        },
                        {
                          "label": "Test Id",
                          "tagName": "synthetic.testId",
                          "type": "TAG"
                        },
                        {
                          "label": "Test Name",
                          "tagName": "synthetic.testName",
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    },
                    {
                      "label": "Location",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Location Id",
                          "tagName": "synthetic.locationId",
                          "type": "TAG"
                        },
                        {
                          "label": "Location Label",
                          "tagName": "synthetic.locationLabel",
                          "type": "TAG"
                        },
                        {
                          "label": "Location Type",
                          "tagName": "synthetic.locationType",
                          "type": "TAG"
                        }
                      ],
                      "type": "LEVEL",
                      "queryable": false
                    }
                  ],
                  "tags": [
                    {
                      "name": "synthetic.locationId",
                      "label": "Location Id",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.locationLabel",
                      "label": "Location Label",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.syntheticType",
                      "label": "Synthetic Type",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.typeLabel",
                      "label": "Synthetic Type Label",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.applicationId",
                      "label": "Application Id",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.tags",
                      "label": "Tags",
                      "type": "KEY_VALUE_PAIR",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.testId",
                      "label": "Test Id",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.testName",
                      "label": "Test Name",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.errors",
                      "label": "Errors",
                      "type": "STRING_LIST",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.testActive",
                      "label": "Test Active",
                      "type": "BOOLEAN",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    },
                    {
                      "name": "synthetic.locationType",
                      "label": "Location Type",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get synthetic tag catalog",
        "tags": [
          "Synthetic Catalog"
        ]
      }
    },
    "/api/synthetics/metrics": {
      "post": {
        "operationId": "getMetricsResult",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pagination": {
                  "page": 1,
                  "pageSize": 3
                },
                "metrics": [
                  {
                    "metric": "synthetic.metricsResponseTime",
                    "aggregation": "SUM"
                  }
                ],
                "timeFrame": {
                  "to": 0,
                  "windowSize": 144000000
                },
                "groups": [
                  {
                    "groupbyTag": "synthetic.applicationId"
                  },
                  {
                    "groupbyTag": "synthetic.tags",
                    "groupbyTagSecondLevelTag": "region"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/GetMetricsResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "metricsResult": [
                    {
                      "tests": [
                        {
                          "testId": "6GwdCuiMjGdMrtz8THjo",
                          "testName": "rumattach-BasicNavTest",
                          "locationId": [
                            "f7cEoG61DJfVyWcDnWsc"
                          ],
                          "applicationId": "application1",
                          "serviceId": "serviceId1"
                        }
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 1276
                        }
                      ],
                      "customMetrics": [
                        {
                          "region": "region1"
                        }
                      ]
                    },
                    {
                      "tests": [
                        {
                          "testId": "OCnmrLSlNgzntI68094j",
                          "testName": "test-javascript-bundled",
                          "locationId": [
                            "wHICfVoIpiHbwawo5xQ6"
                          ],
                          "applicationId": "application2",
                          "serviceId": "serviceId2"
                        }
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 14
                        }
                      ],
                      "customMetrics": [
                        {
                          "location": "location1",
                          "region": "region2"
                        }
                      ]
                    },
                    {
                      "tests": [
                        {
                          "testId": "9i6gpys6whaYtN5k9VeD",
                          "testName": "My_Test_ReadFile",
                          "locationId": [
                            "DemoPoP1_saas_instana_test"
                          ],
                          "applicationId": "application3",
                          "serviceId": "serviceid3"
                        }
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 7
                        }
                      ],
                      "customMetrics": [
                        {
                          "location": "location3",
                          "region": "region3"
                        }
                      ]
                    }
                  ],
                  "page": 1,
                  "pageSize": 3,
                  "totalHits": 2212
                },
                "schema": {
                  "$ref": "#/components/schemas/MetricsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic metrics",
        "tags": [
          "Synthetic Metrics"
        ]
      }
    },
    "/api/synthetics/results": {
      "post": {
        "operationId": "getSyntheticResult",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pagination": {
                  "page": 1,
                  "pageSize": 3
                },
                "metrics": [
                  {
                    "metric": "synthetic.metricsResponseTime",
                    "aggregation": "SUM"
                  }
                ],
                "order": {
                  "by": "synthetic.startTime",
                  "direction": "DESC"
                },
                "timeFrame": {
                  "to": 0,
                  "windowSize": 144000000
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetTestResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "testResult": [
                    {
                      "testId": "6GwdCuiMjGdMrtz8THjo",
                      "testName": "rumattach-BasicNavTest",
                      "locationId": [
                        "f7cEoG61DJfVyWcDnWsc"
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 1276
                        }
                      ]
                    },
                    {
                      "testId": "OCnmrLSlNgzntI68094j",
                      "testName": "test-javascript-bundled",
                      "locationId": [
                        "wHICfVoIpiHbwawo5xQ6"
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 14
                        }
                      ]
                    },
                    {
                      "testId": "9i6gpys6whaYtN5k9VeD",
                      "testName": "My_Test_ReadFile",
                      "locationId": [
                        "DemoPoP1_saas_instana_test"
                      ],
                      "metrics": [
                        {
                          "synthetic.metricsResponseTime": 7
                        }
                      ]
                    }
                  ],
                  "page": 1,
                  "pageSize": 3,
                  "totalHits": 2212
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback results",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/list": {
      "post": {
        "operationId": "getSyntheticResultList",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pagination": {
                  "page": 1,
                  "pageSize": 3
                },
                "syntheticMetrics": [
                  "synthetic.metricsResponseTime",
                  "status",
                  "synthetic.errors"
                ],
                "order": {
                  "by": "start_time",
                  "direction": "DESC"
                },
                "timeFrame": {
                  "to": 0,
                  "windowSize": 144000000
                },
                "TagFilterExpression": {
                  "type": "EXPRESSION",
                  "elements": [
                    {
                      "type": "EXPRESSION",
                      "elements": [
                        {
                          "name": "synthetic.errors",
                          "stringValue": "Exception",
                          "operator": "CONTAINS"
                        }
                      ],
                      "logicalOperator": "OR"
                    }
                  ],
                  "logicalOperator": "OR"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetTestResultList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "testResultCommonProperties": {
                        "testId": "9i6gpys6whaYtN5k9VeD",
                        "testName": "My_Test_ReadFile",
                        "locationId": "DemoPoP1_saas_instana_test",
                        "clientId": "saas_instana_test",
                        "id": "8f3bedbb-e278-4584-81b8-6efe07286a55",
                        "errors": [
                          "{timeStamp=1706131087368, errorType=Exception, errorMessage=access to path /etc/pop/redispass/redis-password is denied, stackTrace=Error: access to path /etc/pop/redispass/redis-password is denied\n    at /opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1750914\n    at Array.forEach (<anonymous>)\n    at s (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1750876)\n    at Object.openSync (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1751693)\n    at VM Wrapper.apply (vm/bridge.js:468:15)\n    at /tmp/9i6gpys6whaYtN5k9VeD/script.js:7:13\n    at /tmp/9i6gpys6whaYtN5k9VeD/script.js:21:3\n    at VM Wrapper.apply (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1806330)\n    at k.run (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1771939)\n    at Object.e.exports.execute (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:1739863)\n    at process.<anonymous> (/opt/ibm/microservice/javascript-playback/bin/vm/runner.bundle.js:2:2197562)\n    at Object.onceWrapper (node:events:628:26)\n    at process.emit (node:events:513:28)\n    at emit (node:internal/child_process:946:14)\n    at processTicksAndRejections (node:internal/process/task_queues:84:21)}"
                        ],
                        "locationDisplayLabel": "DemoPoP1(vm)"
                      },
                      "metrics": {
                        "response_time": [
                          [
                            1706131087358,
                            9
                          ]
                        ],
                        "status": [
                          [
                            1706131087358,
                            0
                          ]
                        ]
                      }
                    },
                    {
                      "testResultCommonProperties": {
                        "testId": "QRN50tqvJPnwKIjn2qKx",
                        "testName": "Demo_IBM_simple_ping",
                        "locationId": "DemoPoP1_saas_instana_test",
                        "clientId": "saas_instana_test",
                        "id": "7f503812-c428-4ea8-995d-dbdf97c145b7",
                        "errors": [
                          "{timeStamp=1706131070262, errorType=Exception, errorMessage=Ping: http://httpbin.org/status/200%2C400 -> Expected a success status (status < 400) but got 400, stackTrace=}"
                        ],
                        "locationDisplayLabel": "DemoPoP1(vm)"
                      },
                      "metrics": {
                        "response_time": [
                          [
                            1706131070111,
                            149
                          ]
                        ],
                        "status": [
                          [
                            1706131070111,
                            0
                          ]
                        ]
                      }
                    },
                    {
                      "testResultCommonProperties": {
                        "testId": "mfwdxHpvwXM1PGUBAFeP",
                        "testName": "test-disable-api-simple-jul17",
                        "locationId": "f7cEoG61DJfVyWcDnWsc",
                        "clientId": "saas_instana_test",
                        "id": "a1a4ed1c-7c87-45d5-bf45-3f3c462445d7",
                        "errors": [
                          "{timeStamp=1706131069537, errorType=Exception, errorMessage=Unable to parse response body as JSON: Unexpected token < in JSON at position 0, stackTrace=Error: Unable to parse response body as JSON: Unexpected token < in JSON at position 0\n    at /opt/ibm/microservice/javascript-playback/bin/index.js:2:1057667\n    at k.<anonymous> (/opt/ibm/microservice/javascript-playback/bin/index.js:2:1058257)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)}"
                        ],
                        "locationDisplayLabel": "Test-Pop-101"
                      },
                      "metrics": {
                        "response_time": [
                          [
                            1706131069036,
                            490
                          ]
                        ],
                        "status": [
                          [
                            1706131069036,
                            0
                          ]
                        ]
                      }
                    }
                  ],
                  "page": 1,
                  "pageSize": 3,
                  "totalHits": 14305
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic test playback results",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/locationsummarylist": {
      "post": {
        "operationId": "getLocationSummaryList",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "timeFrame": {
                  "to": null,
                  "windowSize": 300000
                },
                "pagination": {
                  "page": 1,
                  "pageSize": 3
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetTestResultBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "id": "wFulJMRXA3bZgAlhCuZV",
                      "label": "test101-pop",
                      "displayLabel": "west-12(Idaho)",
                      "type": "Private",
                      "status": "Online",
                      "linkedTests": 0,
                      "lastRunOn": 0,
                      "namespace": "my-kedatest",
                      "clusterName": "test101-pop",
                      "description": "PoP in region test101 for my-kedatest",
                      "popSnapshotId": null,
                      "popVersion": "1.1.2"
                    },
                    {
                      "id": "0po5d5MxSZx91moqCbri",
                      "label": "apminstana-pop",
                      "displayLabel": "apminstana-pop",
                      "type": "Private",
                      "status": "Online",
                      "linkedTests": 12,
                      "lastRunOn": 0,
                      "namespace": "redwood",
                      "clusterName": "apminstana-pop",
                      "description": "This is a Synthetic Point of Presence",
                      "popSnapshotId": "ZFOBIU_Stg9FWs4DMRVY7VTSmBs",
                      "entityHealthInfo": {
                        "maxSeverity": 0,
                        "openIssues": []
                      },
                      "popVersion": "1.1.1"
                    },
                    {
                      "id": "c7sXV7jZcuiD2ewGAjYI",
                      "label": "Aggie",
                      "displayLabel": "Aggie popLoc",
                      "type": "Private",
                      "status": "Offline",
                      "linkedTests": 9,
                      "lastRunOn": 0,
                      "namespace": "poploc",
                      "clusterName": "instana-pop-deployment",
                      "description": "My City Kubecost",
                      "popSnapshotId": null,
                      "popVersion": "1.0.15"
                    }
                  ],
                  "page": 1,
                  "pageSize": 3,
                  "totalHits": 47
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic locations with last run test on each location data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/testsummarylist": {
      "post": {
        "operationId": "getTestSummaryList",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "metrics": [
                  {
                    "aggregation": "MEAN",
                    "metric": "success_rate",
                    "granularity": 600
                  }
                ],
                "TagFilterExpression": {
                  "type": "EXPRESSION",
                  "elements": [
                    {
                      "name": "synthetic.testActive",
                      "booleanValue": true,
                      "operator": "EQUALS"
                    }
                  ],
                  "logicalOperator": "AND"
                },
                "timeFrame": {
                  "to": 0,
                  "windowSize": 1800000
                },
                "pagination": {
                  "page": 1,
                  "pageSize": 3
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetTestSummaryResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "testResultCommonProperties": {
                        "testId": "0FzZz41QwOxPjOUE0VhU",
                        "testName": "260-browserwebpage",
                        "clientId": "saas_instana_test",
                        "testCommonProperties": {
                          "id": "0FzZz41QwOxPjOUE0VhU",
                          "label": "260-browserwebpage",
                          "type": "Webpage Simple",
                          "frequency": 3,
                          "active": true,
                          "locationIds": [
                            "KHphVmZqqRf9Kp2xSoud",
                            "cs1RvxTXJcavxnbQ6fBE"
                          ],
                          "locationLabels": [
                            "microk8s_PoP",
                            "mini_PoP2_BrowserTest"
                          ],
                          "locationDisplayLabels": [
                            "MicroK8s PoP",
                            "mini_PoP2_BrowserTest"
                          ],
                          "locationStatusList": [
                            {
                              "locationId": "KHphVmZqqRf9Kp2xSoud",
                              "totalTestRuns": 10,
                              "successRuns": 10,
                              "locationDisplayLabel": "MicroK8s PoP",
                              "successRate": 1
                            },
                            {
                              "locationId": "cs1RvxTXJcavxnbQ6fBE",
                              "totalTestRuns": 0,
                              "successRuns": 0,
                              "locationDisplayLabel": "mini_PoP2_BrowserTest",
                              "successRate": 0
                            }
                          ],
                          "createdAt": 1697175933150,
                          "modifiedAt": 1700456221719
                        }
                      },
                      "metrics": {
                        "total_test_runs": [
                          [
                            1706132249095,
                            10
                          ]
                        ],
                        "successful_test_runs": [
                          [
                            1706132249095,
                            10
                          ]
                        ],
                        "response_time": [
                          [
                            1706132249095,
                            372.9
                          ]
                        ],
                        "success_rate": [
                          [
                            1706132249095,
                            1
                          ]
                        ]
                      }
                    },
                    {
                      "testResultCommonProperties": {
                        "testId": "0OKldV7M44UfDxmNt1Ef",
                        "testName": "Syne2eHttpActionTest",
                        "clientId": "saas_instana_test",
                        "testCommonProperties": {
                          "id": "0OKldV7M44UfDxmNt1Ef",
                          "label": "Syne2eHttpActionTest",
                          "type": "API Simple",
                          "frequency": 5,
                          "active": true,
                          "locationIds": [
                            "18WyhtDb5jpVOsjlNdeV"
                          ],
                          "locationLabels": [
                            "Syne2e"
                          ],
                          "locationDisplayLabels": [
                            "E2ETest PoP"
                          ],
                          "locationStatusList": [
                            {
                              "locationId": "18WyhtDb5jpVOsjlNdeV",
                              "totalTestRuns": 6,
                              "successRuns": 6,
                              "locationDisplayLabel": "E2ETest PoP",
                              "successRate": 1
                            }
                          ],
                          "createdAt": 1703867554340,
                          "modifiedAt": 1703867554340
                        }
                      },
                      "metrics": {
                        "total_test_runs": [
                          [
                            1706132249095,
                            6
                          ]
                        ],
                        "successful_test_runs": [
                          [
                            1706132249095,
                            6
                          ]
                        ],
                        "response_time": [
                          [
                            1706132249095,
                            157.5
                          ]
                        ],
                        "success_rate": [
                          [
                            1706132249095,
                            1
                          ]
                        ]
                      }
                    },
                    {
                      "testResultCommonProperties": {
                        "testId": "0qB3qb9659JBJ86bflnf",
                        "testName": "Syne2eHttpActionTest",
                        "clientId": "saas_instana_test",
                        "testCommonProperties": {
                          "id": "0qB3qb9659JBJ86bflnf",
                          "label": "Syne2eHttpActionTest",
                          "type": "API Simple",
                          "frequency": 5,
                          "active": true,
                          "locationIds": [
                            "18WyhtDb5jpVOsjlNdeV"
                          ],
                          "locationLabels": [
                            "Syne2e"
                          ],
                          "locationDisplayLabels": [
                            "E2ETest PoP"
                          ],
                          "locationStatusList": [
                            {
                              "locationId": "18WyhtDb5jpVOsjlNdeV",
                              "totalTestRuns": 6,
                              "successRuns": 6,
                              "locationDisplayLabel": "E2ETest PoP",
                              "successRate": 1
                            }
                          ],
                          "createdAt": 1702269153825,
                          "modifiedAt": 1702269153825
                        }
                      },
                      "metrics": {
                        "total_test_runs": [
                          [
                            1706132249095,
                            6
                          ]
                        ],
                        "successful_test_runs": [
                          [
                            1706132249095,
                            6
                          ]
                        ],
                        "response_time": [
                          [
                            1706132249095,
                            178.66666666666666
                          ]
                        ],
                        "success_rate": [
                          [
                            1706132249095,
                            1
                          ]
                        ]
                      }
                    }
                  ],
                  "page": 1,
                  "pageSize": 3,
                  "totalHits": 567
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic tests with success rate and average response time data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}": {
      "get": {
        "operationId": "getSyntheticResultMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "testId": "AMl0Y7tsvpp8XXrXt1XO",
                  "testResultId": "5623c161-31d6-49b8-b314-91d4fb598f55",
                  "metadata": {
                    "logs.tgz": [
                      "console.log"
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResultMetadata"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback detail result description(metadata)",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}/detail": {
      "get": {
        "operationId": "getSyntheticResultDetailData",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "testId": "AMl0Y7tsvpp8XXrXt1XO",
                  "testResultId": "5623c161-31d6-49b8-b314-91d4fb598f55",
                  "logs": "2024-01-18T19:55:02.162Z [SyntheticPoP] synthetic playback starts\n2024-01-18T19:55:02.169Z [SyntheticPoP] http request undefined https://www.ibm.com/\n2024-01-18T19:55:02.319Z [SyntheticPoP] http response 303 for https://www.ibm.com/\n2024-01-18T19:55:02.430Z [SyntheticPoP] http response 200 for https://www.ibm.com/us-en\n2024-01-18T19:55:02.478Z http request 1/2: 200\n2024-01-18T19:56:01.103Z [SyntheticPoP] synthetic playback ends\n",
                  "logFiles": {
                    "console.log": "2024-01-18T19:55:02.162Z [SyntheticPoP] synthetic playback starts\n2024-01-18T19:55:02.169Z [SyntheticPoP] http request undefined https://www.ibm.com/\n2024-01-18T19:55:02.319Z [SyntheticPoP] http response 303 for https://www.ibm.com/\n2024-01-18T19:55:02.430Z [SyntheticPoP] http response 200 for https://www.ibm.com/us-en\n2024-01-18T19:55:02.478Z http request 1/2: 200\n2024-01-18T19:56:01.103Z [SyntheticPoP] synthetic playback ends\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TestResultDetailData"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback result detail data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}/file": {
      "get": {
        "operationId": "getSyntheticResultDetailDataFile",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Download the synthetic test playback result detail data file",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/settings/credentials": {
      "get": {
        "operationId": "getSyntheticCredentialNames",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "kittyhawk_test2",
                  "user1_password",
                  "user1_name",
                  "MyBearer",
                  "MY_CREDS333",
                  "Test_Creds",
                  "credName5",
                  "credName4",
                  "credName3",
                  "credName2",
                  "credName1",
                  "MY_CREDS1",
                  "MY_PASS",
                  "USER_NAME_TEST"
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canUseSyntheticCredentials",
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "All Synthetic Credential Names",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "post": {
        "operationId": "createSyntheticCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "credentialName": "userPassword",
                "credentialValue": "123456"
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticCredential"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticCredentials"
            ]
          }
        ],
        "summary": "Create a Synthetic Credential",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/credentials/associations": {
      "get": {
        "operationId": "getSyntheticCredentialAssociations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "credentialName": "password1",
                    "createdAt": 1717617206785,
                    "modifiedAt": 1717617206785
                  },
                  {
                    "credentialName": "password2",
                    "applications": [
                      "f4KX5zd8RW2pERKKFUCZgQ"
                    ],
                    "applicationLabels": [
                      "All Services"
                    ],
                    "createdAt": 1717620972843,
                    "modifiedAt": 1717620972843
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SyntheticCredential"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canUseSyntheticCredentials",
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "(Private Preview) All Synthetic Credential Names and Associations",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/credentials/associations/{name}": {
      "get": {
        "operationId": "getOneSyntheticCredentialAssociations",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "credentialName": "password4",
                  "applications": [
                    "f4KX5zd8RW2pERKKFUCZgQ"
                  ],
                  "applicationLabels": [
                    "All Services"
                  ],
                  "createdAt": 1717620972843,
                  "modifiedAt": 1717620972843
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticCredential"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canUseSyntheticCredentials",
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "(Private Preview) A Synthetic Credential with Name and Associations",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "patch": {
        "operationId": "patchSyntheticCredentialAssociations",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": "    {\n        \"applications\": [\n           \"f4KX5zd8RW2pERKKFUCZgQ\"\n        ],\n    }\n",
              "schema": {
                "$ref": "#/components/schemas/SyntheticCredential"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canUseSyntheticCredentials",
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "(Private Preview) Patch the associations of a Synthetic Credential",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API updates the endpoint associations of a Synthetic Credential.\n\n- Credential values cannot be patched.\n- Credentials can be associated to multiple application ids.\n- Patching a credential association will replace the entire array with the full set of values provided.\n\n## Sample script and payload: \n- A sample script to patch a DB2 Admin password and associate it to application ids 'Ss2FBjSTQVef5LsqhPiYkg' and 'KJ8MdZVqK4odMUoBaClH'.\n\n```\ncurl -k -v -X PATCH \\\nhttps://<Host>/api/synthetics/settings/credentials/associations/db2AdminPwd \\\n-H 'authorization: apiToken <Token>' \\\n-H 'content-type: application/json' \\\n-d '{\n    \"applications\" : [ \"Ss2FBjSTQVef5LsqhPiYkg\", \"KJ8MdZVqK4odMUoBaClH\" ]\n  }'\n```"
      }
    },
    "/api/synthetics/settings/credentials/{name}": {
      "delete": {
        "operationId": "deleteSyntheticCredential",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticCredentials"
            ]
          }
        ],
        "summary": "Delete Synthetic credential",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/locations": {
      "get": {
        "operationId": "getSyntheticLocations",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "55bzhnXQ9uqwld4Ha3bD",
                    "label": "Austin",
                    "displayLabel": "AUTO",
                    "popVersion": "1.1.2",
                    "description": "My Location 101",
                    "locationType": "Private",
                    "playbackCapabilities": {
                      "syntheticType": [
                        "HTTPAction",
                        "HTTPScript",
                        "BrowserScript",
                        "WebpageScript"
                      ],
                      "browserType": [
                        "firefox",
                        "chrome"
                      ]
                    },
                    "geoPoint": {
                      "cityName": "austin",
                      "countryName": "india",
                      "latitude": 0,
                      "longitude": 0
                    },
                    "totalTests": 1,
                    "configuration": {
                      "namespace": "syn-pop-tls"
                    },
                    "customProperties": {},
                    "createdAt": 1698742890784,
                    "modifiedAt": 1702372728619,
                    "observedAt": 1704266105229,
                    "status": "Offline"
                  },
                  {
                    "id": "OjJPXWHmsE9deLzanNAW",
                    "label": "Dallas",
                    "displayLabel": "AUTOscaling",
                    "popVersion": "1.1.1",
                    "description": "My Location 101",
                    "locationType": "Private",
                    "playbackCapabilities": {
                      "syntheticType": [
                        "HTTPAction",
                        "HTTPScript",
                        "BrowserScript",
                        "WebpageScript"
                      ],
                      "browserType": [
                        "firefox",
                        "chrome"
                      ]
                    },
                    "geoPoint": {
                      "cityName": "dallas",
                      "countryName": "india",
                      "latitude": 0,
                      "longitude": 0
                    },
                    "totalTests": 0,
                    "configuration": {
                      "namespace": "andy"
                    },
                    "customProperties": {},
                    "createdAt": 1698988890723,
                    "modifiedAt": 1700116951600,
                    "observedAt": 1705556766316,
                    "status": "Offline"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SyntheticLocation"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canViewSyntheticLocations"
            ]
          }
        ],
        "summary": "All Synthetic locations",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This endpoint retrieves Synthetic Locations.\n\n## Optional Parameters:\n\n- **filter** Filters the Synthetic Locations to retrieve only the ones that match the specified filter condition. \n  Users are allowed to specify more than one filter parameter, and they will be combined in a single expression using logical operator 'AND'.\n  The filter parameter is formatted as '**_{\\<attribute>\\<operator>\\<value}_**'. For example, '_{label=MyPoP}_'\n  \n### Supported filter attributes and operators:\n\n| | = | != | \\> | < | \\>= | <= | Example |\n|-|---|----|---|---|---|-|--------------------------------------------------------|\n| label | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={label=MyPoP} |\n| displayLabel | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={displayLabel=My PoP} |\n| popVersion | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={popVersion=1.1.9} |\n| description | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={description=My Test PoP} |\n| locationType | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={locationType=Private} |\n| playbackCapabilities.syntheticType | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={playbackCapabilities.syntheticType=HTTPAction} |\n| playbackCapabilities.browserType | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={playbackCapabilities.browserType=chrome} |\n| configuration.clusterName | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={configuration.clusterName=qa_cluster} |\n| configuration.namespace | &check; | &check; | - | - | - | - | /api/synthetics/settings/locations?filter={configuration.namespace=test_pop} |\n| customProperties.\\<all properties> | &check; | &check; | - | - | - | - | /api/ynthetics/settings/locations?filter={customProperty.usage=Test} |\n| createdAt | &check; | &check; | &check; | &check; | &check; | &check; | /api/synthetics/settings/locations?filter={createdAt>1715190462000} |\n| modifiedAt | &check; | &check; | &check; | &check; | &check; | &check; | /api/synthetics/settings/locations?filter={modifiedAt<=1715190462000} |\n| observerdAt | &check; | &check; | &check; | &check; | &check; | &check; | /api/synthetics/settings/locations?filter={observedAt>=1715190462000} |\n\n"
      }
    },
    "/api/synthetics/settings/locations/{id}": {
      "delete": {
        "operationId": "deleteSyntheticLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticLocations"
            ]
          }
        ],
        "summary": "Delete Synthetic location",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API endpoint deletes a synthetic location.\n\nNote: Users cannot use this API to delete managed locations. "
      },
      "get": {
        "operationId": "getSyntheticLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "OjJPXWHmsE9deLzanNAW",
                  "label": "Austin",
                  "displayLabel": "AUTOscaling",
                  "popVersion": "1.1.1",
                  "description": "Test Location 101",
                  "locationType": "Private",
                  "playbackCapabilities": {
                    "syntheticType": [
                      "HTTPAction",
                      "HTTPScript",
                      "BrowserScript",
                      "WebpageScript"
                    ],
                    "browserType": [
                      "firefox",
                      "chrome"
                    ]
                  },
                  "geoPoint": {
                    "cityName": "austin",
                    "countryName": "india",
                    "latitude": 0,
                    "longitude": 0
                  },
                  "totalTests": 0,
                  "configuration": {
                    "namespace": "andy"
                  },
                  "customProperties": {},
                  "createdAt": 1698988890723,
                  "modifiedAt": 1700116951600,
                  "observedAt": 1705556766316,
                  "status": "Offline"
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticLocation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canViewSyntheticLocations"
            ]
          }
        ],
        "summary": "Synthetic location",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/tests": {
      "get": {
        "operationId": "getSyntheticTests",
        "parameters": [
          {
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "locationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "ic25Vt1T5dgKzi0K7812",
                    "tenantId": "saas_instana_test",
                    "label": "260-api-feature",
                    "active": true,
                    "testFrequency": 10,
                    "playbackMode": "Simultaneous",
                    "applicationId": "UOGJ3jBOSMOgN2EBCoOghw",
                    "applicationLabel": "test_cb",
                    "locations": [
                      "KHphVmZqqRf9Kp2xSoud",
                      "cs1RvxTXJcavxnbQ6fBE"
                    ],
                    "locationLabels": [
                      "microk8s_PoP",
                      "mini_PoP2_BrowserTest"
                    ],
                    "locationDisplayLabels": [
                      "MicroK8s PoP",
                      "mini_PoP2_BrowserTest"
                    ],
                    "configuration": {
                      "syntheticType": "HTTPScript",
                      "markSyntheticCall": true,
                      "retries": 1,
                      "retryInterval": 1,
                      "timeout": "",
                      "script": "const assert = require('assert');\n\n$got('https://www.ibm.com').then(response=>{\n    console.log('request 1/2:', response.statusCode);\n    assert.equal(response.statusCode, 200, 'it should be 200')\n    \n    setTimeout(()=>{\n        $got('https://www.bing.com').then(response=>{\n            console.log('request 2/2:', response.statusCode);\n            assert.equal(response.statusCode, 200, 'it should be 200')\n        })\n\n    }, 70000);\n});",
                      "scriptType": "Basic"
                    },
                    "customProperties": {},
                    "createdAt": 1697175907759,
                    "modifiedAt": 1705915155144
                  },
                  {
                    "id": "EFNRoPd39SgZBkULeQIf",
                    "tenantId": "saas_instana_test",
                    "label": "APITest_getApplication",
                    "active": true,
                    "testFrequency": 15,
                    "playbackMode": "Simultaneous",
                    "applicationId": "UOGJ3jBOSMOgN2EBCoOghw",
                    "applicationLabel": "test_cb",
                    "locations": [
                      "18WyhtDb5jpVOsjlNdeV"
                    ],
                    "locationLabels": [
                      "Syne2e"
                    ],
                    "locationDisplayLabels": [
                      "E2ETest PoP"
                    ],
                    "configuration": {
                      "syntheticType": "HTTPScript",
                      "markSyntheticCall": true,
                      "retries": 2,
                      "retryInterval": 1,
                      "timeout": "10m",
                      "script": "const got = require('got');\nconst assert = require('assert');\n\n// Define the API request configuration\nconst apiConfig = {\n  method: 'GET',\n  url: 'https://test-instana.pink.instana.rocks/api/application-monitoring/settings/application/btg-B701Rx6o9QNXUS4TVw',\n  headers: {\n    'Authorization': $secure.apiToken\n  }\n};\n\n// Function to perform the API test\nconst performAPITest = async () => {\n  const response = await got(apiConfig);\n  console.info(\"Get one application API - GET, response code: \" + response.statusCode);\n  assert.ok(response.statusCode == 200, \"GET status is \" + response.statusCode + \", it should be 200\");\n\n  const jsonBody = JSON.parse(response.body);\n  assert.ok(jsonBody.id != \"\", \"Application ID is not in the payload\");\n  assert.ok(jsonBody.label != \"\", \"Application label is not in the payload\");\n  assert.ok(jsonBody.tagFilterExpression != null, \"tagFilterExpression is not in the payload\");\n};\n\n// Initial test\nperformAPITest();",
                      "scriptType": "Basic"
                    },
                    "customProperties": {
                      "test": "123"
                    },
                    "createdAt": 1696625954210,
                    "modifiedAt": 1701216106812,
                    "modifiedBy": "Internal"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SyntheticTest"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canViewSyntheticTests"
            ]
          }
        ],
        "summary": "All Synthetic tests",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This endpoint retrieves Synthetic Tests.\n\n## Optional Parameters:\n\n- **locationId** Filters the Synthetic Tests to retrieve only the ones that are associated to the specified PoP location ID.\n- **filter** Filters the Synthetic Tests to retrieve only the ones that match the specified filter condition. \n  Users are allowed to specify more than one filter parameter, and they will be combined in a single expression using logical operator 'AND'.\n  The filter parameter is formatted as '**_{\\<attribute>\\<operator>\\<value}_**'. For example, '_{label=MyTest}_'\n  \n### Supported filter attributes and operators:\n\n| | = | != | \\> | < | \\>= | <= | Example |\n|-|---|----|---|---|---|-|---------|\n| label | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={label=ABC} |\n| description | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={description=MyTest} |\n| active | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={active=true} |\n| testFrequency | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={testFrequency=5} |\n| applicationId | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={applicationId=APP_ID} |\n| locations | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={locations=POP_ID} |\n| locationLabels | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={locationLabels=MyPoP} |\n| locationDisplayLabels | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={locationDisplayLabels=My PoP} |\n| configuration.\\<any property of type string> | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={configurtion.syntheticType=HTTPAction} |\n| customProperties.\\<all properties> | &check; | &check; | - | - | - | - | /api/synthetics/settings/tests?filter={customProperty.usage=Test} |\n| createdAt | &check; | &check; | &check; | &check; | &check; | &check; | /api/synthetics/settings/tests?filter={createdAt>1715190462000} |\n| modifiedAt | &check; | &check; | &check; | &check; | &check; | &check; | /api/synthetics/settings/tests?filter={modifiedAt<=1715190462000} |\n\n"
      },
      "post": {
        "operationId": "createSyntheticTest",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "label": "Test_SimplePing",
                "description": "this is to test a simple ping API",
                "serviceId": "serviceId001",
                "applicationId": "applicationId001",
                "active": true,
                "testFrequency": 1,
                "playbackMode": "Simultaneous",
                "locations": [
                  "saas_instana_test"
                ],
                "configuration": {
                  "syntheticType": "HTTPAction",
                  "url": "https://httpbin.org/post",
                  "operation": "POST",
                  "headers": {
                    "Content-Type": "text/plain"
                  },
                  "body": "Hello World!",
                  "validationString": "Hello World!"
                },
                "customProperties": {
                  "Team": "DevTeam",
                  "Purpose": "Demo"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "ic25Vt1T5dgKzi0K7812",
                  "label": "Test_SimplePing",
                  "description": "this is to test a simple ping API",
                  "serviceId": "serviceId001",
                  "applicationId": "applicationId001",
                  "active": true,
                  "testFrequency": 1,
                  "playbackMode": "Simultaneous",
                  "locations": [
                    "saas_instana_test"
                  ],
                  "configuration": {
                    "syntheticType": "HTTPAction",
                    "url": "https://httpbin.org/post",
                    "operation": "POST",
                    "headers": {
                      "Content-Type": "text/plain"
                    },
                    "body": "Hello World!",
                    "validationString": "Hello World!"
                  },
                  "customProperties": {
                    "Team": "DevTeam",
                    "Purpose": "Demo"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "Create a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API endpoint creates a Synthetic Test.\n\n**Note:** The **DNSAction** Synthetic type is not supported.\n\n## Optional Parameters:\n\n- **id** Users are allowed to specify their own id for the test. A test id can contain letters, numbers, underscores, colons and hyphens. Maximum length is 128.\n\n## Sample script and payload: \n- A sample script to create an API Simple test\n\n```\ncurl -k -v -X POST \\\nhttps://<Host>/api/synthetics/settings/tests \\\n-H 'authorization: apiToken <Token>' \\\n-H 'content-type: application/json' \\\n-d '{\n    \"id\":\"test_id:12134-89\",\n    \"label\":\"Test_SimplePing\",\n    \"description\":\"this is to test a simple ping API\",\n    \"serviceId\":\"serviceId001\",\n    \"applicationId\":\"applicationId001\",\n    \"active\":true,\n    \"testFrequency\":1,\n    \"playbackMode\":\"Simultaneous\",\n    \"locations\":[\n        \"saas_instana_test\"\n    ],\n    \"configuration\":{\n        \"syntheticType\":\"HTTPAction\",\n        \"url\":\"https://httpbin.org/post\",\n        \"operation\":\"POST\",\n        \"headers\":{\n            \"Content-Type\":\"text/plain\"\n        },\n        \"body\":\"Hello World!\",\n        \"validationString\":\"Hello World!\"\n    },\n    \"customProperties\":{\n        \"Team\":\"DevTeam\",\n        \"Purpose\":\"Demo\"\n    }\n  }'\n```"
      }
    },
    "/api/synthetics/settings/tests/{id}": {
      "delete": {
        "operationId": "deleteSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "Delete a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "get": {
        "operationId": "getSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "EFNRoPd39SgZBkULeQIf",
                  "tenantId": "saas_instana_test",
                  "label": "APITest_getApplication",
                  "active": true,
                  "testFrequency": 15,
                  "playbackMode": "Simultaneous",
                  "applicationId": "UOGJ3jBOSMOgN2EBCoOghw",
                  "applicationLabel": "test_cb",
                  "locations": [
                    "18WyhtDb5jpVOsjlNdeV"
                  ],
                  "locationLabels": [
                    "Syne2e"
                  ],
                  "locationDisplayLabels": [
                    "E2ETest PoP"
                  ],
                  "configuration": {
                    "syntheticType": "HTTPScript",
                    "markSyntheticCall": true,
                    "retries": 2,
                    "retryInterval": 1,
                    "timeout": "10m",
                    "script": "const got = require('got');\nconst assert = require('assert');\n\n// Define the API request configuration\nconst apiConfig = {\n  method: 'GET',\n  url: 'https://test-instana.pink.instana.rocks/api/application-monitoring/settings/application/btg-B701Rx6o9QNXUS4TVw',\n  headers: {\n    'Authorization': $secure.apiToken\n  }\n};\n\n// Function to perform the API test\nconst performAPITest = async () => {\n  const response = await got(apiConfig);\n  console.info(\"Get one application API - GET, response code: \" + response.statusCode);\n  assert.ok(response.statusCode == 200, \"GET status is \" + response.statusCode + \", it should be 200\");\n\n  const jsonBody = JSON.parse(response.body);\n  assert.ok(jsonBody.id != \"\", \"Application ID is not in the payload\");\n  assert.ok(jsonBody.label != \"\", \"Application label is not in the payload\");\n  assert.ok(jsonBody.tagFilterExpression != null, \"tagFilterExpression is not in the payload\");\n};\n\n// Initial test\nperformAPITest();",
                    "scriptType": "Basic"
                  },
                  "customProperties": {
                    "test": "123"
                  },
                  "createdAt": 1696625954210,
                  "modifiedAt": 1701216106812,
                  "modifiedBy": "Internal"
                },
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canViewSyntheticTests"
            ]
          }
        ],
        "summary": "A Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "patch": {
        "operationId": "patchSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "active": true,
                "configuration": {
                  "scripts": null,
                  "script": "//script goes here"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "Patch a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API endpoint updates selected attributes of a Synthetic Test.\n\n- All attributes listed as in the schema, including the required ones, are optional for this call.\n- Synthetic Test configuration properties set to null will be removed from the configuration.\n- Patching an array attribute will replace the entire array with the full set of values provided.\n- For major updates to the Synthetic Test or to remove main attributes, see \"Update a Synthetic test\"\n\n## Sample script and payload: \n- A sample script to patch a simple HTTP Script Test to enable it and to switch from multi-scripts to single script.\n\n```\ncurl -k -v -X PATCH \\\nhttps://<Host>/api/synthetics/settings/tests/Ilfs9bW97KkTxuyGtxBF \\\n-H 'authorization: apiToken <Token>' \\\n-H 'content-type: application/json' \\\n-d '{\n    \"active\" : true,\n    \"configuration\" : { \n      \"scripts\" : null,\n      \"script\" : \"//script goes here\"\n    }\n  }'\n```"
      },
      "put": {
        "operationId": "updateSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "ic25Vt1T5dgKzi0K7812",
                "label": "Test_SimplePing",
                "description": "this is to test a simple ping API",
                "serviceId": "serviceId001",
                "applicationId": "applicationId001",
                "active": true,
                "testFrequency": 1,
                "playbackMode": "Simultaneous",
                "locations": [
                  "saas_instana_test"
                ],
                "configuration": {
                  "syntheticType": "HTTPAction",
                  "url": "https://httpbin.org/post",
                  "operation": "POST",
                  "headers": {
                    "Content-Type": "text/plain"
                  },
                  "body": "Hello World!",
                  "validationString": "Hello World!"
                },
                "customProperties": {
                  "Team": "DevTeam",
                  "Purpose": "Demo"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureSyntheticTests"
            ]
          }
        ],
        "summary": "Update a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/website-monitoring/analyze/beacon-groups": {
      "post": {
        "operationId": "getBeaconGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "metrics": [
                  {
                    "metric": "beaconCount",
                    "aggregation": "SUM",
                    "granularity": 60
                  }
                ],
                "group": {
                  "groupByTag": "beacon.page.name"
                },
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "beacon.website.name",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "robot-shop"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "beacon.location.path",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "/checkout"
                    }
                  ]
                },
                "timeFrame": {
                  "to": null,
                  "windowSize": 3600000
                },
                "type": "PAGELOAD"
              },
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteBeaconGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "name": "Check Out",
                      "earliestTimestamp": 1707019058453,
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1707022593250,
                        "offset": 1
                      },
                      "metrics": {
                        "beaconCount.sum.60": [
                          [
                            1707019020000,
                            1
                          ],
                          [
                            1707019080000,
                            3
                          ]
                        ]
                      }
                    }
                  ],
                  "canLoadMore": false,
                  "totalHits": 1,
                  "totalRepresentedItemCount": 1,
                  "totalRetainedItemCount": 1,
                  "adjustedTimeframe": {
                    "windowSize": 3600000,
                    "to": 1707022620000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WebsiteBeaconGroupsResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped beacon metrics",
        "tags": [
          "Website Analyze"
        ]
      }
    },
    "/api/website-monitoring/analyze/beacons": {
      "post": {
        "operationId": "getBeacons",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "tagFilters": [
                  {
                    "type": "TAG_FILTER",
                    "name": "beacon.website.name",
                    "operator": "EQUALS",
                    "entity": "NOT_APPLICABLE",
                    "value": "robot-shop"
                  },
                  {
                    "type": "TAG_FILTER",
                    "name": "beacon.location.path",
                    "operator": "EQUALS",
                    "entity": "NOT_APPLICABLE",
                    "value": "/checkout"
                  }
                ],
                "timeFrame": {
                  "to": null,
                  "windowSize": 3600000
                },
                "type": "PAGELOAD"
              },
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteBeacons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "beacon": {
                        "websiteId": "Example website ID",
                        "websiteLabel": "robot-shop",
                        "page": "Products",
                        "phase": "pageLoad",
                        "timestamp": 1707023459363,
                        "clockSkew": 356,
                        "duration": 240,
                        "batchSize": 1,
                        "accurateTimingsAvailable": true,
                        "deprecations": [],
                        "pageLoadId": "0cea1830450a460",
                        "sessionId": "899e5d28e5c6402",
                        "beaconId": "00cea1830450a460",
                        "backendTraceId": "ef968a97dd967268",
                        "type": "pageLoad",
                        "customEventName": "",
                        "meta": {
                          "stage": "production",
                          "status": "silver"
                        },
                        "locationUrl": "http://robotshop.instana.com/products",
                        "locationOrigin": "http://robotshop.instana.com",
                        "locationPath": "/products",
                        "errorCount": 0,
                        "errorMessage": "",
                        "errorId": "",
                        "errorType": "",
                        "parsedStackTrace": [],
                        "componentStack": "",
                        "userIp": "195.140.0.0",
                        "userId": "Example User Id",
                        "userName": "Example User Name",
                        "userEmail": "example@example.com",
                        "userLanguages": [
                          "en-GB"
                        ],
                        "deviceType": "",
                        "connectionType": "4g",
                        "browserName": "Chrome",
                        "browserVersion": "73",
                        "osName": "Windows",
                        "osVersion": "10",
                        "windowHidden": false,
                        "windowWidth": 1149,
                        "windowHeight": 1008,
                        "latitude": 51.5088,
                        "longitude": -0.093,
                        "accuracyRadius": 20,
                        "city": "London",
                        "subdivision": "England",
                        "subdivisionCode": "ENG",
                        "country": "United Kingdom",
                        "countryCode": "GB",
                        "continent": "Europe",
                        "continentCode": "EU",
                        "httpCallUrl": "",
                        "httpCallOrigin": "",
                        "httpCallPath": "",
                        "httpCallMethod": "",
                        "httpCallStatus": -1,
                        "httpCallCorrelationAttempted": false,
                        "httpCallAsynchronous": false,
                        "initiator": "html",
                        "resourceType": "document",
                        "cacheInteraction": "",
                        "encodedBodySize": -1,
                        "decodedBodySize": -1,
                        "transferSize": -1,
                        "unloadTime": 0,
                        "redirectTime": 0,
                        "appCacheTime": 0,
                        "dnsTime": 0,
                        "tcpTime": 0,
                        "sslTime": 0,
                        "requestTime": 42,
                        "responseTime": 1,
                        "processingTime": -1,
                        "onLoadTime": 1,
                        "backendTime": 51,
                        "frontendTime": -1,
                        "domTime": -1,
                        "childrenTime": 5,
                        "firstPaintTime": 331,
                        "firstContentfulPaintTime": 331,
                        "largestContentfulPaintTime": 331,
                        "firstInputDelayTime": -1,
                        "cumulativeLayoutShift": -1,
                        "cspBlockedUri": "",
                        "cspEffectiveDirective": "",
                        "cspOriginalPolicy": "",
                        "cspDisposition": "",
                        "cspSample": "",
                        "cspSourceFile": "",
                        "cspLineNumber": -1,
                        "cspColumnNumber": -1,
                        "snippetVersion": "2",
                        "httpCallHeaders": {}
                      },
                      "cursor": {
                        "@class": ".IngestionOffsetCursor",
                        "ingestionTime": 1707023459959,
                        "offset": 1
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/WebsiteBeaconResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all beacons",
        "tags": [
          "Website Analyze"
        ]
      }
    },
    "/api/website-monitoring/catalog": {
      "get": {
        "operationId": "getWebsiteTagCatalog",
        "parameters": [
          {
            "description": "beaconType",
            "example": "pageLoad",
            "in": "query",
            "name": "beaconType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "useCase",
            "example": "GROUPING",
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT",
                "MAINTENANCE_WINDOWS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "tagTree": [
                    {
                      "label": "Commonly Used",
                      "description": null,
                      "icon": null,
                      "children": [
                        {
                          "label": "Website Label",
                          "description": "Name of the website as configured within the Instana user interface.",
                          "tagName": "beacon.website.name",
                          "type": "TAG"
                        }
                      ]
                    }
                  ],
                  "tags": [
                    {
                      "name": "beacon.type",
                      "label": "Beacon Type",
                      "type": "STRING",
                      "description": null,
                      "canApplyToSource": false,
                      "canApplyToDestination": false,
                      "idTag": false
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "When the combination of beaconType and useCase is unsupported/unknown."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get website tag catalog",
        "tags": [
          "Website Catalog"
        ]
      }
    },
    "/api/website-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getWebsiteCatalogMetrics",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "metricId": "beaconDuration",
                    "label": "Beacon duration",
                    "formatter": "LATENCY",
                    "description": "The recorded duration for a beacon.",
                    "aggregations": [
                      "MIN",
                      "P25",
                      "P90",
                      "P50",
                      "P98",
                      "MAX",
                      "MEAN",
                      "P75",
                      "P99",
                      "P95",
                      "SUM"
                    ],
                    "defaultAggregation": null,
                    "beaconTypes": [
                      "pageLoad",
                      "custom",
                      "resourceLoad",
                      "httpRequest"
                    ],
                    "pathToValueInBeacon": [
                      "duration"
                    ],
                    "tagName": "beacon.duration"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteMonitoringMetricDescription"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Metric catalog",
        "tags": [
          "Website Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions for website monitoring.\n"
      }
    },
    "/api/website-monitoring/catalog/tags": {
      "get": {
        "operationId": "getWebsiteCatalogTags",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "beacon.sessionId",
                    "type": "STRING",
                    "category": "WEBSITE",
                    "canApplyToSource": false,
                    "canApplyToDestination": false,
                    "sourceValueAvailableFrom": 0
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all existing website tags",
        "tags": [
          "Website Catalog"
        ],
        "description": "This endpoint retrieves all available tags for your monitored system.\n\nThese tags can be used to group metric results.\n```\n\"group\": {\n  \"groupbyTag\": \"beacon.page.name\"\n}\n```\n\nThese tags can be used to filter metric results.\n```\n\"tagFilters\": [{\n\t\"name\": \"beacon.website.name\",\n\t\"operator\": \"EQUALS\",\n\t\"value\": \"example\"\n}]\n```\n"
      }
    },
    "/api/website-monitoring/config": {
      "get": {
        "description": "API request to get all configured websites details.",
        "operationId": "getWebsites",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "example_id",
                    "name": "example_website",
                    "appName": "example_website"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Website"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get configured websites",
        "tags": [
          "Website Configuration"
        ]
      },
      "post": {
        "operationId": "createWebsite",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "example_id",
                  "name": "example_website",
                  "appName": "example_website"
                },
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            },
            "description": "Website successfully configured"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured website"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Configure new website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}": {
      "delete": {
        "operationId": "deleteWebsite",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Website successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Remove website",
        "tags": [
          "Website Configuration"
        ]
      },
      "get": {
        "description": "API request to get configured website details for specified websiteId",
        "operationId": "getWebsite",
        "parameters": [
          {
            "description": "websiteId",
            "example": "1ELrNt-eQ9SlK4D_EgLMiA",
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "example_id",
                  "name": "example_website",
                  "appName": "example_website"
                },
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get configured website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "renameWebsite",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "example_id",
                  "name": "example_website",
                  "appName": "example_website"
                },
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            },
            "description": "Website successfully renamed"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured website"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Rename website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/geo-location": {
      "get": {
        "description": "API request to get geo-location configuration of a website specified by its websiteId",
        "operationId": "getWebsiteGeoLocationConfiguration",
        "parameters": [
          {
            "description": "websiteId",
            "example": "1ELrNt-eQ9SlK4D_EgLMiA",
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "geoDetailRemoval": "NO_REMOVAL",
                  "geoMappingRules": []
                },
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get geo location configuration for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "updateWebsiteGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeoLocationConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Update geo location configuration for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/geo-mapping-rules": {
      "get": {
        "operationId": "getWebsiteGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get custom geo mapping rules for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "setWebsiteGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Set custom geo mapping rules for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/ip-masking": {
      "get": {
        "description": "API request to get IP masking configuration of a website specified by its websiteId",
        "operationId": "getWebsiteIpMaskingConfiguration",
        "parameters": [
          {
            "description": "websiteId",
            "example": "1ELrNt-eQ9SlK4D_EgLMiA",
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "ipMasking": "DEFAULT"
                },
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get IP masking configuration for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "updateWebsiteIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpMaskingConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Update IP masking configuration for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/sourcemap-upload/{sourceMapConfigId}/clear": {
      "put": {
        "operationId": "clearSourceMapUploadConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sourceMapConfigId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Source map files in the source map upload configuration successfully cleared"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Clear source map files for source map upload configuration",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/sourcemap-upload/{sourceMapConfigId}/form": {
      "put": {
        "operationId": "uploadSourceMapFile",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sourceMapConfigId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileFormat": {
                    "type": "string"
                  },
                  "sourceMap": {
                    "type": "string",
                    "format": "binary"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceMapUploadConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Upload source map file for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/metrics": {
      "post": {
        "deprecated": true,
        "operationId": "getBeaconMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteMetricResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Website Metrics"
        ]
      }
    },
    "/api/website-monitoring/page-load": {
      "get": {
        "operationId": "getPageLoad",
        "parameters": [
          {
            "description": "id",
            "example": "1ELrNt-eQ9SlK4D_EgLMiA",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "matrix"
          },
          {
            "description": "timestamp",
            "example": 1707012285674,
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "matrix"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "websiteId": "example website id",
                    "websiteLabel": "robot-shop",
                    "page": "Home",
                    "phase": "pageLoad",
                    "timestamp": 1707012285674,
                    "clockSkew": 447,
                    "duration": 120,
                    "batchSize": 1,
                    "accurateTimingsAvailable": true,
                    "deprecations": [],
                    "pageLoadId": "974bca2eb13047c",
                    "sessionId": "e995a184bb4b4e0",
                    "beaconId": "0974bca2eb13047c",
                    "backendTraceId": "c92e3ec967ef173f",
                    "type": "pageLoad",
                    "customEventName": "",
                    "meta": {
                      "stage": "production",
                      "status": "bronze"
                    },
                    "locationUrl": "http://robotshop.instana.com/",
                    "locationOrigin": "http://robotshop.instana.com",
                    "locationPath": "/",
                    "errorCount": 0,
                    "errorMessage": "",
                    "errorId": "",
                    "errorType": "",
                    "parsedStackTrace": [],
                    "componentStack": "",
                    "userIp": "87.191.0.0",
                    "userId": "example user id",
                    "userName": "example user name",
                    "userEmail": "example@example.com",
                    "userLanguages": [
                      "de-DE"
                    ],
                    "deviceType": "",
                    "connectionType": "4g",
                    "browserName": "Firefox",
                    "browserVersion": "63",
                    "osName": "Ubuntu",
                    "osVersion": "18",
                    "windowHidden": false,
                    "windowWidth": 1149,
                    "windowHeight": 1008,
                    "latitude": 50.8021,
                    "longitude": 8.7857,
                    "accuracyRadius": 200,
                    "city": "Weidenhausen",
                    "subdivision": "Hesse",
                    "subdivisionCode": "HE",
                    "country": "Germany",
                    "countryCode": "DE",
                    "continent": "Europe",
                    "continentCode": "EU",
                    "httpCallUrl": "",
                    "httpCallOrigin": "",
                    "httpCallPath": "",
                    "httpCallMethod": "",
                    "httpCallStatus": 400,
                    "httpCallCorrelationAttempted": false,
                    "httpCallAsynchronous": false,
                    "initiator": "html",
                    "resourceType": "document",
                    "cacheInteraction": "",
                    "encodedBodySize": -1,
                    "decodedBodySize": -1,
                    "transferSize": -1,
                    "unloadTime": 0,
                    "redirectTime": 0,
                    "appCacheTime": 0,
                    "dnsTime": 0,
                    "tcpTime": 0,
                    "sslTime": 0,
                    "requestTime": 42,
                    "responseTime": 1,
                    "processingTime": -1,
                    "onLoadTime": 1,
                    "backendTime": 51,
                    "frontendTime": -1,
                    "domTime": -1,
                    "childrenTime": 5,
                    "firstPaintTime": 331,
                    "firstContentfulPaintTime": 331,
                    "largestContentfulPaintTime": 331,
                    "firstInputDelayTime": -1,
                    "cumulativeLayoutShift": -1,
                    "cspBlockedUri": "",
                    "cspEffectiveDirective": "",
                    "cspOriginalPolicy": "",
                    "cspDisposition": "",
                    "cspSample": "",
                    "cspSourceFile": "",
                    "cspLineNumber": -1,
                    "cspColumnNumber": -1,
                    "snippetVersion": "2",
                    "httpCallHeaders": {},
                    "parentBeaconId": "",
                    "interactionNextPaint": -1
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteMonitoringBeacon"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Missing page id"
          },
          "404": {
            "description": "Website not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get page load",
        "tags": [
          "Website Metrics"
        ]
      }
    },
    "/api/website-monitoring/v2/metrics": {
      "post": {
        "operationId": "getBeaconMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "metrics": [
                  {
                    "metric": "beaconCount",
                    "aggregation": "SUM"
                  }
                ],
                "tagFilterExpression": {
                  "type": "EXPRESSION",
                  "logicalOperator": "AND",
                  "elements": [
                    {
                      "type": "TAG_FILTER",
                      "name": "beacon.website.name",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "robot-shop"
                    },
                    {
                      "type": "TAG_FILTER",
                      "name": "beacon.location.path",
                      "operator": "EQUALS",
                      "entity": "NOT_APPLICABLE",
                      "value": "/"
                    }
                  ]
                },
                "timeFrame": {
                  "to": null,
                  "windowSize": 3600000
                },
                "type": "PAGELOAD"
              },
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteMetricsV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "metrics": {
                    "beaconCount.sum": [
                      [
                        1706856180000,
                        100
                      ]
                    ]
                  },
                  "adjustedTimeFrame": {
                    "windowSize": 3540000,
                    "to": 1706856180000
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Website Metrics"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractIntegration": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "EMAIL": "#/components/schemas/EmailIntegration",
            "GOOGLE_CHAT": "#/components/schemas/GoogleChatIntegration",
            "OFFICE_365": "#/components/schemas/Office365Integration",
            "OPS_GENIE": "#/components/schemas/OpsgenieIntegration",
            "PAGER_DUTY": "#/components/schemas/PagerdutyIntegration",
            "PROMETHEUS_WEBHOOK": "#/components/schemas/PrometheusWebhookIntegration",
            "SALESFORCE": "#/components/schemas/SalesforceIntegration",
            "SERVICE_NOW_APPLICATION": "#/components/schemas/ServiceNowEnhancedIntegration",
            "SERVICE_NOW_WEBHOOK": "#/components/schemas/ServiceNowIntegration",
            "SLACK": "#/components/schemas/SlackIntegration",
            "SPLUNK": "#/components/schemas/SplunkIntegration",
            "VICTOR_OPS": "#/components/schemas/VictorOpsIntegration",
            "WATSON_AIOPS_WEBHOOK": "#/components/schemas/WatsonAIOpsWebhookIntegration",
            "WEBEX_TEAMS_WEBHOOK": "#/components/schemas/WebexTeamsWebhookIntegration",
            "WEB_HOOK": "#/components/schemas/WebhookIntegration",
            "Z_CHATOPS": "#/components/schemas/ZChatOpsIntegration"
          },
          "propertyName": "kind"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the returned Alert Channel"
          },
          "kind": {
            "type": "string",
            "description": "The type of the Alerting Channel."
          },
          "name": {
            "type": "string",
            "description": "The name of the Alerting Channel."
          }
        },
        "required": [
          "id",
          "kind",
          "name"
        ]
      },
      "AbstractRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "entity_count": "#/components/schemas/EntityCountRule",
            "entity_count_verification": "#/components/schemas/EntityCountVerificationRule",
            "entity_verification": "#/components/schemas/EntityVerificationRule",
            "host_availability": "#/components/schemas/HostAvailabilityRule",
            "system": "#/components/schemas/SystemRule",
            "threshold": "#/components/schemas/ThresholdRule"
          },
          "propertyName": "ruleType"
        },
        "properties": {
          "ruleType": {
            "type": "string"
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "AccessLogEntry": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "GRANT_TEMP_ACCESS",
              "FIRST_LOGIN",
              "LOGIN",
              "ACCESS",
              "FAILED_LOGIN",
              "LOGOUT"
            ]
          },
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "tenantUnitId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "action",
          "email",
          "fullName",
          "tenantId",
          "timestamp"
        ]
      },
      "AccessLogResponse": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessLogEntry"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AccessRule": {
        "type": "object",
        "properties": {
          "accessType": {
            "type": "string",
            "enum": [
              "READ",
              "READ_WRITE"
            ]
          },
          "relatedId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "relationType": {
            "type": "string",
            "enum": [
              "USER",
              "API_TOKEN",
              "ROLE",
              "TEAM",
              "GLOBAL"
            ]
          }
        },
        "required": [
          "accessType",
          "relationType"
        ]
      },
      "Action": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "outputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "SCRIPT",
              "HTTP",
              "ANSIBLE",
              "EXTERNAL",
              "GITHUB",
              "GITLAB",
              "JIRA",
              "MANUAL",
              "DOC_LINK"
            ],
            "maxLength": 128,
            "minLength": 0
          }
        },
        "required": [
          "createdAt",
          "id",
          "modifiedAt",
          "name",
          "type"
        ]
      },
      "ActionConfiguration": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "agentId": {
            "type": "string"
          },
          "inputParameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterValue"
            }
          }
        },
        "required": [
          "action"
        ]
      },
      "ActionInstance": {
        "type": "object",
        "properties": {
          "actionDescription": {
            "type": "string"
          },
          "actionId": {
            "type": "string"
          },
          "actionInstanceId": {
            "type": "string"
          },
          "actionName": {
            "type": "string"
          },
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "actorType": {
            "type": "string",
            "enum": [
              "ACTOR_UNKNOWN",
              "USER",
              "APITOKEN",
              "POLICY"
            ]
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          },
          "errorMessage": {
            "type": "string"
          },
          "eventEntityType": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "eventSpecificationId": {
            "type": "string"
          },
          "externalSourceType": {
            "type": "string"
          },
          "hostSnapshotId": {
            "type": "string"
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionInstanceParameter"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionInstanceMetadataEntry"
            }
          },
          "output": {
            "type": "string"
          },
          "outputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionInstanceParameter"
            }
          },
          "policyId": {
            "type": "string"
          },
          "problemText": {
            "type": "string"
          },
          "returnCode": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "STATUS_UNKNOWN",
              "SUBMITTED",
              "IN_PROGRESS",
              "SUCCESS",
              "FAILED",
              "READY",
              "TIMEOUT"
            ]
          },
          "targetSnapshotId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SCRIPT",
              "HTTP",
              "ANSIBLE",
              "EXTERNAL",
              "GITHUB",
              "GITLAB",
              "JIRA",
              "MANUAL",
              "DOC_LINK"
            ]
          }
        },
        "required": [
          "actionId",
          "actionName",
          "type"
        ]
      },
      "ActionInstanceMetadataEntry": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ActionInstanceParameter": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "name"
        ]
      },
      "ActionMatch": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "aiEngine": {
            "type": "string"
          },
          "confidence": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "action",
          "aiEngine",
          "confidence",
          "score"
        ]
      },
      "ActionSearchSpace": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "description": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "searchOrder": {
            "type": "string"
          },
          "searchTarget": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "AdaptiveBaseline": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              }
            }
          }
        ],
        "required": [
          "operator"
        ]
      },
      "AdaptiveThresholdRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              }
            }
          }
        ]
      },
      "AdjustedTimeframe": {
        "type": "object",
        "properties": {
          "to": {
            "type": "integer",
            "format": "int64",
            "description": "end of timeframe expressed as the Unix epoch time in milliseconds. Eg: `ISO 8601` standard time `2024-06-27T05:05:55.615Z` can be represented as `1719464755615` in Unix epoch time in milliseconds."
          },
          "windowSize": {
            "type": "integer",
            "format": "int64",
            "description": "windowSize in milliseconds",
            "minimum": 0
          }
        },
        "required": [
          "to"
        ]
      },
      "AgentConfigurationUpdate": {
        "type": "object",
        "properties": {
          "remoteBranch": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "remoteName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "remoteUri": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          }
        }
      },
      "AgentMonitoringIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          }
        ]
      },
      "AlertingConfiguration": {
        "type": "object",
        "properties": {
          "alertName": {
            "type": "string",
            "description": "Name of the Alert Configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "description": "ID of the Alert Configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "description": "List of Alert Channel IDs added in this Alert Configuration.",
            "items": {
              "type": "string",
              "description": "List of Alert Channel IDs added in this Alert Configuration."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "description": "Timer dictating how long the Alert Configuration will stay muted. A value of `0` means the Alert Configuration is currently enabled. Otherwise, the Alert Configuration is currently disabled (muted)."
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "AlertingConfigurationWithLastUpdated": {
        "type": "object",
        "properties": {
          "alertName": {
            "type": "string",
            "description": "Name of the Alert Configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "description": "ID of the Alert Configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "description": "List of Alert Channel IDs added in this Alert Configuration.",
            "items": {
              "type": "string",
              "description": "List of Alert Channel IDs added in this Alert Configuration."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time the configuration was last updated.",
            "minimum": 1
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "description": "Timer dictating how long the Alert Configuration will stay muted. A value of `0` means the Alert Configuration is currently enabled. Otherwise, the Alert Configuration is currently disabled (muted)."
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "AlertingTimeWindow": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "durationType": {
            "type": "string",
            "enum": [
              "millisecond",
              "second",
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "durationUnit": {
            "type": "string",
            "enum": [
              "millisecond",
              "second",
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "writeOnly": true
          }
        },
        "required": [
          "duration",
          "durationType"
        ]
      },
      "ApdexConfiguration": {
        "type": "object",
        "properties": {
          "apdexEntity": {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          "apdexName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "apdexEntity",
          "apdexName",
          "id"
        ]
      },
      "ApdexConfigurationInput": {
        "type": "object",
        "properties": {
          "apdexEntity": {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          "apdexName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "apdexEntity",
          "apdexName"
        ]
      },
      "ApdexEntity": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "application": "#/components/schemas/ApplicationApdexEntity",
            "website": "#/components/schemas/WebsiteApdexEntity"
          },
          "propertyName": "apdexType"
        },
        "properties": {
          "apdexType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          }
        },
        "required": [
          "apdexType",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "ApdexReport": {
        "type": "object",
        "properties": {
          "apdexId": {
            "type": "string"
          },
          "apdexScore": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiCreateGroup": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMember"
            },
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "permissionSet": {
            "$ref": "#/components/schemas/ApiPermissionSet"
          }
        },
        "required": [
          "members",
          "name",
          "permissionSet"
        ]
      },
      "ApiGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMember"
            },
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "permissionSet": {
            "$ref": "#/components/schemas/ApiPermissionSet"
          }
        },
        "required": [
          "id",
          "members",
          "name",
          "permissionSet"
        ]
      },
      "ApiMember": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "userId"
        ]
      },
      "ApiPermissionSet": {
        "type": "object",
        "properties": {
          "actionFilter": {
            "$ref": "#/components/schemas/ScopeBinding"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "businessPerspectiveIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "infraDfqFilter": {
            "$ref": "#/components/schemas/ScopeBinding"
          },
          "kubernetesClusterUUIDs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "kubernetesNamespaceUIDs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "mobileAppIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "restrictedApplicationFilter": {
            "$ref": "#/components/schemas/ApiRestrictedApplicationFilter"
          },
          "syntheticCredentialKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "syntheticTestIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "websiteIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "applicationIds",
          "businessPerspectiveIds",
          "infraDfqFilter",
          "kubernetesClusterUUIDs",
          "kubernetesNamespaceUIDs",
          "mobileAppIds",
          "permissions",
          "syntheticCredentialKeys",
          "syntheticTestIds",
          "websiteIds"
        ]
      },
      "ApiRestrictedApplicationFilter": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "restrictingApplicationId": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "INCLUDE_NO_DOWNSTREAM",
              "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
              "INCLUDE_ALL_DOWNSTREAM"
            ]
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        }
      },
      "ApiToken": {
        "type": "object",
        "properties": {
          "accessGrantingToken": {
            "type": "string"
          },
          "canConfigureAgentRunMode": {
            "type": "boolean"
          },
          "canConfigureAgents": {
            "type": "boolean"
          },
          "canConfigureApiTokens": {
            "type": "boolean"
          },
          "canConfigureApplicationSmartAlerts": {
            "type": "boolean"
          },
          "canConfigureApplications": {
            "type": "boolean"
          },
          "canConfigureAuthenticationMethods": {
            "type": "boolean"
          },
          "canConfigureAutomationActions": {
            "type": "boolean"
          },
          "canConfigureAutomationPolicies": {
            "type": "boolean"
          },
          "canConfigureDatabaseManagement": {
            "type": "boolean"
          },
          "canConfigureEumApplications": {
            "type": "boolean"
          },
          "canConfigureEventsAndAlerts": {
            "type": "boolean"
          },
          "canConfigureGlobalAlertPayload": {
            "type": "boolean"
          },
          "canConfigureGlobalApplicationSmartAlerts": {
            "type": "boolean"
          },
          "canConfigureGlobalInfraSmartAlerts": {
            "type": "boolean"
          },
          "canConfigureGlobalLogSmartAlerts": {
            "type": "boolean"
          },
          "canConfigureGlobalSyntheticSmartAlerts": {
            "type": "boolean"
          },
          "canConfigureIntegrations": {
            "type": "boolean"
          },
          "canConfigureLogManagement": {
            "type": "boolean"
          },
          "canConfigureLogRetentionPeriod": {
            "type": "boolean"
          },
          "canConfigureMaintenanceWindows": {
            "type": "boolean"
          },
          "canConfigureMobileAppMonitoring": {
            "type": "boolean"
          },
          "canConfigureMobileAppSmartAlerts": {
            "type": "boolean"
          },
          "canConfigurePersonalApiTokens": {
            "type": "boolean"
          },
          "canConfigureReleases": {
            "type": "boolean"
          },
          "canConfigureServiceLevelIndicators": {
            "type": "boolean"
          },
          "canConfigureServiceMapping": {
            "type": "boolean"
          },
          "canConfigureSessionSettings": {
            "type": "boolean"
          },
          "canConfigureSyntheticCredentials": {
            "type": "boolean"
          },
          "canConfigureSyntheticLocations": {
            "type": "boolean"
          },
          "canConfigureSyntheticTests": {
            "type": "boolean"
          },
          "canConfigureTeams": {
            "type": "boolean"
          },
          "canConfigureUsers": {
            "type": "boolean"
          },
          "canConfigureWebsiteSmartAlerts": {
            "type": "boolean"
          },
          "canCreateHeapDump": {
            "type": "boolean"
          },
          "canCreatePublicCustomDashboards": {
            "type": "boolean"
          },
          "canCreateThreadDump": {
            "type": "boolean"
          },
          "canDeleteAutomationActionHistory": {
            "type": "boolean"
          },
          "canDeleteLogs": {
            "type": "boolean"
          },
          "canEditAllAccessibleCustomDashboards": {
            "type": "boolean"
          },
          "canInstallNewAgents": {
            "type": "boolean"
          },
          "canManuallyCloseIssue": {
            "type": "boolean"
          },
          "canRunAutomationActions": {
            "type": "boolean"
          },
          "canUseSyntheticCredentials": {
            "type": "boolean"
          },
          "canViewAccountAndBillingInformation": {
            "type": "boolean"
          },
          "canViewAuditLog": {
            "type": "boolean"
          },
          "canViewBizAlerts": {
            "type": "boolean"
          },
          "canViewBusinessActivities": {
            "type": "boolean"
          },
          "canViewBusinessProcessDetails": {
            "type": "boolean"
          },
          "canViewBusinessProcesses": {
            "type": "boolean"
          },
          "canViewLogVolume": {
            "type": "boolean"
          },
          "canViewLogs": {
            "type": "boolean"
          },
          "canViewSyntheticLocations": {
            "type": "boolean"
          },
          "canViewSyntheticTestResults": {
            "type": "boolean"
          },
          "canViewSyntheticTests": {
            "type": "boolean"
          },
          "canViewTraceDetails": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "expiresOn": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "lastUsedOn": {
            "type": "integer",
            "format": "int64"
          },
          "limitedApplicationsScope": {
            "type": "boolean"
          },
          "limitedAutomationScope": {
            "type": "boolean"
          },
          "limitedBizOpsScope": {
            "type": "boolean"
          },
          "limitedInfrastructureScope": {
            "type": "boolean"
          },
          "limitedKubernetesScope": {
            "type": "boolean"
          },
          "limitedLogsScope": {
            "type": "boolean"
          },
          "limitedMobileAppsScope": {
            "type": "boolean"
          },
          "limitedNutanixScope": {
            "type": "boolean"
          },
          "limitedOpenstackScope": {
            "type": "boolean"
          },
          "limitedPcfScope": {
            "type": "boolean"
          },
          "limitedPhmcScope": {
            "type": "boolean"
          },
          "limitedPvcScope": {
            "type": "boolean"
          },
          "limitedSyntheticsScope": {
            "type": "boolean"
          },
          "limitedVsphereScope": {
            "type": "boolean"
          },
          "limitedWebsitesScope": {
            "type": "boolean"
          },
          "limitedZhmcScope": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "accessGrantingToken",
          "internalId",
          "name"
        ]
      },
      "AppDataMetricConfiguration": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "description": "Set aggregation that can be applied to a series of values. Eg: `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "If the granularity is set you will get data points with the specified granularity in seconds. Default: `1000` milliseconds"
          },
          "metric": {
            "type": "string",
            "description": "Set a particular metric, eg: `latency`."
          },
          "numeratorTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "Application": {
        "type": "object",
        "description": "Returns a list of Application Perspectives.",
        "properties": {
          "boundaryScope": {
            "type": "string",
            "description": "Here, `ALL` Application Boundary Scope is considered."
          },
          "entityType": {
            "type": "string",
            "description": "Since, this is an Application Perspective, it will be of type `APPLICATION`.",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique ID of the Application Perspective. Eg: `Av62RoIKQv-A3n6DbMQh9g`."
          },
          "label": {
            "type": "string",
            "description": "Name of the Application Perspective. Eg: `app1`."
          }
        },
        "required": [
          "boundaryScope",
          "id",
          "label"
        ]
      },
      "ApplicationAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationId": {
            "type": "string",
            "writeOnly": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "description": "Selection of applications, services, and endpoints that this Smart Alert configuration is associated with. This selection is connected to the defined `tagFilterExpression` by the logical `AND` operator."
          },
          "boundaryScope": {
            "type": "string",
            "description": "Determines the source of the application alert configuration. An `INBOUND` scope refers to consumer-made calls. An `ALL` scope refers to both consumer and internally made calls.",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the application alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "evaluationType": {
            "type": "string",
            "description": "Determines whether calls of the aggregated metrics are grouped by the application, the service, or the endpoint. This also determines whether the resulting events are categorized as an issue on the respective entity of that group.",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "includeInternal": {
            "type": "boolean",
            "description": "Flag to include Internal Calls. These calls are work done inside a service and correspond to intermediate spans in custom tracing."
          },
          "includeSynthetic": {
            "type": "boolean",
            "description": "Flag to include Synthetic Calls. These calls have a synthetic endpoint as their destination, such as calls to health-check endpoints. "
          },
          "lowSeverityThreshold": {
            "$ref": "#/components/schemas/TupleSeverityThreshold"
          },
          "name": {
            "type": "string",
            "description": "Name of the application alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdApplicationAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "ApplicationAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationId": {
            "type": "string",
            "deprecated": true,
            "description": "ID of the application that this Smart Alert configuration is applied to.",
            "maxLength": 64,
            "minLength": 0
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "description": "Selection of applications, services, and endpoints that this Smart Alert configuration is associated with. This selection is connected to the defined `tagFilterExpression` by the logical `AND` operator."
          },
          "boundaryScope": {
            "type": "string",
            "description": "Determines the source of the application alert configuration. An `INBOUND` scope refers to consumer-made calls. An `ALL` scope refers to both consumer and internally made calls.",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the application alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "evaluationType": {
            "type": "string",
            "description": "Determines whether calls of the aggregated metrics are grouped by the application, the service, or the endpoint. This also determines whether the resulting events are categorized as an issue on the respective entity of that group.",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of this Application App Alert Config. ",
            "maxLength": 64,
            "minLength": 0
          },
          "includeInternal": {
            "type": "boolean",
            "description": "Flag to include Internal Calls. These calls are work done inside a service and correspond to intermediate spans in custom tracing."
          },
          "includeSynthetic": {
            "type": "boolean",
            "description": "Flag to include Synthetic Calls. These calls have a synthetic endpoint as their destination, such as calls to health-check endpoints. "
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time of the initial revision.",
            "minimum": 1
          },
          "lowSeverityThreshold": {
            "$ref": "#/components/schemas/TupleSeverityThreshold"
          },
          "name": {
            "type": "string",
            "description": "Name of the application alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is read-only. Read-only access restricts modification of the config."
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdApplicationAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "id",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "ApplicationAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "errorRate": "#/components/schemas/ErrorsApplicationAlertRule",
            "errors": "#/components/schemas/ErrorsApplicationAlertRule",
            "logs": "#/components/schemas/LogsApplicationAlertRule",
            "slowness": "#/components/schemas/SlownessApplicationAlertRule",
            "statusCode": "#/components/schemas/StatusCodeApplicationAlertRule",
            "throughput": "#/components/schemas/ThroughputApplicationAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "alertType": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "ApplicationApdexEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          {
            "type": "object",
            "properties": {
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ]
              },
              "includeInternal": {
                "type": "boolean"
              },
              "includeSynthetic": {
                "type": "boolean"
              }
            }
          }
        ],
        "required": [
          "boundaryScope",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "ApplicationConfig": {
        "type": "object",
        "properties": {
          "accessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND",
              "DEFAULT"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "scope": {
            "type": "string",
            "enum": [
              "INCLUDE_NO_DOWNSTREAM",
              "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
              "INCLUDE_ALL_DOWNSTREAM"
            ]
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "accessRules",
          "boundaryScope",
          "id",
          "label",
          "scope"
        ]
      },
      "ApplicationEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              }
            }
          }
        ]
      },
      "ApplicationItem": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "application",
          "metrics"
        ]
      },
      "ApplicationMetricResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "ApplicationNode": {
        "type": "object",
        "description": "Selection of applications, services, and endpoints that this Smart Alert configuration is associated with. This selection is connected to the defined `tagFilterExpression` by the logical `AND` operator.",
        "properties": {
          "applicationId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "inclusive": {
            "type": "boolean"
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ServiceNode"
            }
          }
        },
        "required": [
          "applicationId",
          "services"
        ]
      },
      "ApplicationResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Returns a list of Application Perspectives.",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "Page number you want to retrieve in a request / retrieved in a response."
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "number of elements retrieved in a single query."
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "description": "The number of results returned. For eg: If `items` has 5 elements, `totalhits` will be 5"
          }
        }
      },
      "ApplicationScope": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "name"
        ]
      },
      "ApplicationScopeWithMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ApplicationSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ]
              },
              "endpointId": {
                "type": "string"
              },
              "serviceId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "boundaryScope"
        ]
      },
      "ApplicationSloEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SloEntity"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ]
              },
              "endpointId": {
                "type": "string"
              },
              "includeInternal": {
                "type": "boolean"
              },
              "includeSynthetic": {
                "type": "boolean"
              },
              "serviceId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "applicationId",
          "boundaryScope"
        ]
      },
      "ApplicationTimeThreshold": {
        "type": "object",
        "description": "The type of threshold to define the criteria when the event and alert triggers and resolves.",
        "discriminator": {
          "mapping": {
            "requestImpact": "#/components/schemas/TraceImpactApplicationTimeThreshold",
            "violationsInPeriod": "#/components/schemas/ViolationsInPeriodApplicationTimeThreshold",
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceApplicationTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "AuditLogEntry": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/LogEntryActor"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "action",
          "actor",
          "id",
          "message",
          "meta"
        ]
      },
      "AuditLogUiResponse": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntry"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Author": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "API",
              "USER",
              "INSTANA",
              "UNKNOWN"
            ]
          }
        }
      },
      "AvailabilityBlueprintIndicator": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceLevelIndicator"
          },
          {
            "type": "object",
            "properties": {
              "badEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "goodEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "threshold": {
                "type": "number",
                "format": "double",
                "exclusiveMinimum": false,
                "minimum": 0
              }
            }
          }
        ],
        "required": [
          "blueprint",
          "type"
        ]
      },
      "AvailabilitySliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "badEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "badEventFilters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TagFilter"
                },
                "maxItems": 32,
                "minItems": 1
              },
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ]
              },
              "endpointId": {
                "type": "string"
              },
              "goodEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "goodEventFilters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TagFilter"
                },
                "maxItems": 32,
                "minItems": 1
              },
              "includeInternal": {
                "type": "boolean"
              },
              "includeSynthetic": {
                "type": "boolean"
              },
              "serviceId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "boundaryScope"
        ]
      },
      "AvailableMetrics": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricMetadata"
            },
            "uniqueItems": true
          }
        }
      },
      "AvailablePlugins": {
        "type": "object",
        "properties": {
          "plugins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "BackendTraceReference": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The corresponding trace ID. For eg: `07eaf10c1d051234` or `000000000000000007eaf10c1d051234`"
          }
        },
        "required": [
          "traceId"
        ]
      },
      "BinaryOperatorDTO": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          {
            "type": "object",
            "properties": {
              "conjunction": {
                "type": "string",
                "enum": [
                  "AND",
                  "OR"
                ]
              },
              "left": {
                "$ref": "#/components/schemas/MatchExpressionDTO"
              },
              "right": {
                "$ref": "#/components/schemas/MatchExpressionDTO"
              }
            }
          }
        ],
        "required": [
          "conjunction",
          "left",
          "right"
        ]
      },
      "BrowserScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ]
              },
              "recordVideo": {
                "type": "boolean"
              },
              "script": {
                "type": "string",
                "maxLength": 1048576,
                "minLength": 0
              },
              "scriptType": {
                "type": "string",
                "enum": [
                  "Basic",
                  "Jest"
                ]
              },
              "scripts": {
                "$ref": "#/components/schemas/MultipleScriptsConfiguration"
              }
            }
          }
        ],
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "BuiltInEventSpecification": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "hyperParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HyperParam"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "ruleInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleInput"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "shortPluginId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "hyperParams",
          "id",
          "name",
          "ruleInputs",
          "shortPluginId"
        ]
      },
      "BuiltInEventSpecificationWithLastUpdated": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "hyperParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HyperParam"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "ruleInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleInput"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "shortPluginId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "hyperParams",
          "id",
          "name",
          "ruleInputs",
          "shortPluginId"
        ]
      },
      "BusinessActivity": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Unique identifier for the activity generated by the source BPM tool",
            "example": "ApproveInvoiceTask",
            "nullable": true
          },
          "activityName": {
            "type": "string",
            "description": "Name of the activity ",
            "example": "Approve Invoice",
            "nullable": true
          },
          "activityStart": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the activity's start time",
            "example": 1680559706000,
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "description": "Type of the activity ",
            "example": "userTask"
          },
          "callId": {
            "type": "string",
            "writeOnly": true
          },
          "processDefinitionId": {
            "type": "string",
            "description": "The identifier of the process the activity is an instance of.",
            "example": "invoice:2:aa2bbbcc-bb04-11ee-9d4e-0242ac110002",
            "nullable": true
          },
          "processDefinitionName": {
            "type": "string",
            "description": "The name of the process that the activity is an instance of",
            "example": "Invoice Approval",
            "nullable": true
          },
          "rootProcessInstanceId": {
            "type": "string",
            "description": "The id of the root process for the activity",
            "example": "486cbb3b-e633-11ee-8707-0242ac110002",
            "nullable": true
          }
        },
        "required": [
          "activityType"
        ]
      },
      "BusinessPerspectiveConfig": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 300,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "id"
        ]
      },
      "CallGroupsItem": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "CallGroupsResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "CallRelation": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/EndpointSimple"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceSimple"
          },
          "technologies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChangeSummary": {
        "type": "object",
        "description": "Brief summary of changes made in this config version.",
        "properties": {
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "changeType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "DELETE",
              "ENABLE",
              "DISABLE",
              "RESTORE",
              "UNKNOWN"
            ]
          }
        },
        "required": [
          "author",
          "changeType"
        ]
      },
      "CloudfoundryPhysicalContext": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "cfInstanceIndex": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "space": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "CommonVulnerabilitiesAndExposuresIssue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          }
        ]
      },
      "Condition": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          }
        }
      },
      "ConfigVersion": {
        "type": "object",
        "properties": {
          "changeSummary": {
            "$ref": "#/components/schemas/ChangeSummary"
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "deleted": {
            "type": "boolean",
            "deprecated": true,
            "description": "Flag to indicate whether or not the configuration was deleted."
          },
          "enabled": {
            "type": "boolean",
            "deprecated": true,
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "id": {
            "type": "string",
            "description": "ID of this configuration version.",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "id"
        ]
      },
      "ContainerNode": {
        "type": "object"
      },
      "CrashMobileAppAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "CursorPaginatedBusinessActivityItem": {
        "type": "object",
        "properties": {
          "businessActivity": {
            "$ref": "#/components/schemas/BusinessActivity"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "cursor"
        ]
      },
      "CursorPagination": {
        "type": "object",
        "properties": {
          "ingestionTime": {
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "retrievalSize": {
            "type": "integer",
            "format": "int32",
            "maximum": 200,
            "minimum": 1
          }
        }
      },
      "CursorPaginationInfraExploreCursor": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "retrievalSize": {
            "type": "integer",
            "format": "int32",
            "description": "number of values to return"
          }
        }
      },
      "CustomBlueprintIndicator": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceLevelIndicator"
          },
          {
            "type": "object",
            "properties": {
              "badEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "goodEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              }
            }
          }
        ],
        "required": [
          "goodEventsFilter",
          "type"
        ]
      },
      "CustomDashboard": {
        "type": "object",
        "properties": {
          "accessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget"
            },
            "maxItems": 128,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "accessRules",
          "id",
          "title",
          "widgets"
        ]
      },
      "CustomDashboardPreview": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SHARED",
                "WRITABLE"
              ]
            },
            "maxItems": 8,
            "minItems": 0,
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "ownerId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "annotations",
          "id",
          "ownerId",
          "title"
        ]
      },
      "CustomEmailSubjectPrefix": {
        "type": "object",
        "properties": {
          "agentMonitoringIssue": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "A map containing the open and close email subject value of a given agent monitoring issue",
              "example": "{\"openValue\":\"Open email subject prefix value\",\"closeValue\":\"Close email subject prefix value\"}"
            },
            "description": "A map containing the open and close email subject value of a given agent monitoring issue",
            "example": {
              "closeValue": "Close email subject prefix value",
              "openValue": "Open email subject prefix value"
            }
          },
          "change": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "A map containing the open and close email subject value of a given change event",
              "example": "{\"changeValue\":\"Email subject prefix value\"}"
            },
            "description": "A map containing the open and close email subject value of a given change event",
            "example": {
              "changeValue": "Email subject prefix value"
            }
          },
          "incident": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "A map containing the open and close email subject value of a given incident",
              "example": "{\"openValue\":\"Open email subject prefix value\",\"closeValue\":\"Close email subject prefix value\"}"
            },
            "description": "A map containing the open and close email subject value of a given incident",
            "example": {
              "closeValue": "Close email subject prefix value",
              "openValue": "Open email subject prefix value"
            }
          },
          "issue": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "A map containing the open and close email subject value of a given issue",
              "example": "{\"openValue\":\"Open email subject prefix value\",\"closeValue\":\"Close email subject prefix value\"}"
            },
            "description": "A map containing the open and close email subject value of a given issue",
            "example": {
              "closeValue": "Close email subject prefix value",
              "openValue": "Open email subject prefix value"
            }
          }
        }
      },
      "CustomEventMobileAppAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "customEventName": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "customEventName",
          "metricName"
        ]
      },
      "CustomEventSpecification": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 32765,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "entityType": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleLogicalOperator": {
            "type": "string",
            "description": "Set AND / OR",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractRule"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "entityType",
          "name",
          "rules"
        ]
      },
      "CustomEventSpecificationWithLastUpdated": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "applicationAlertConfigId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "deleted": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "maxLength": 32765,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "entityType": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "migrated": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleLogicalOperator": {
            "type": "string",
            "description": "Set AND / OR",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractRule"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "entityType",
          "id",
          "name",
          "rules"
        ]
      },
      "CustomEventWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "customEventName": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "customEventName",
          "metricName"
        ]
      },
      "CustomPayloadConfiguration": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "Required parameters for custom payload configuration.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          }
        },
        "required": [
          "fields"
        ]
      },
      "CustomPayloadField": {
        "type": "object",
        "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
        "discriminator": {
          "mapping": {
            "dynamic": "#/components/schemas/DynamicField",
            "staticString": "#/components/schemas/StaticStringField"
          },
          "propertyName": "type"
        },
        "properties": {
          "key": {
            "type": "string",
            "description": "A user-specified unique identifier or name for a custom payload entry."
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "CustomPayloadWithLastUpdated": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "Required parameters for custom payload configuration.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time (in milliseconds) the configuration was last updated.",
            "minimum": 1
          }
        },
        "required": [
          "fields"
        ]
      },
      "DNSActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "acceptCNAME": {
                "type": "boolean"
              },
              "lookup": {
                "type": "string"
              },
              "lookupServerName": {
                "type": "boolean"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "queryType": {
                "type": "string",
                "enum": [
                  "A",
                  "AAAA",
                  "ANY",
                  "AXFR",
                  "CNAME",
                  "HINFO",
                  "MAILB",
                  "MAILA",
                  "MINFO",
                  "MB",
                  "MD",
                  "MF",
                  "MG",
                  "MR",
                  "MX",
                  "NULL",
                  "NS",
                  "PTR",
                  "SOA",
                  "TXT",
                  "WKS"
                ]
              },
              "recursiveLookups": {
                "type": "boolean"
              },
              "server": {
                "type": "string"
              },
              "serverRetries": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "required": [
          "lookup",
          "markSyntheticCall",
          "server",
          "syntheticType"
        ]
      },
      "DashboardApiToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DatabaseIntegration": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DeprecatedTagFilter": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ]
          },
          "name": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "LESS_THAN",
              "LESS_OR_EQUAL_THAN",
              "GREATER_THAN",
              "GREATER_OR_EQUAL_THAN",
              "NOT_EMPTY",
              "NOT_EQUAL",
              "NOT_CONTAIN",
              "IS_EMPTY",
              "NOT_BLANK",
              "IS_BLANK",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "operator",
          "value"
        ]
      },
      "Duration": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "unit": {
            "type": "string",
            "enum": [
              "MINUTES",
              "HOURS",
              "DAYS"
            ]
          }
        },
        "required": [
          "amount",
          "unit"
        ]
      },
      "DynamicField": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomPayloadField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/DynamicFieldValue"
              }
            }
          }
        ],
        "required": [
          "key",
          "value"
        ]
      },
      "DynamicFieldValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key for selected dynamic tag: specifies which dictionary style value user is interested in."
          },
          "tagName": {
            "type": "string",
            "description": "Each dynamic payload entry is associated with tag from Instana's tag catalog"
          }
        },
        "required": [
          "tagName"
        ]
      },
      "DynamicParameter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "resolvedValue": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          }
        }
      },
      "EditUser": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          }
        },
        "required": [
          "fullName"
        ]
      },
      "EmailIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "customEmailSubjectPrefix": {
                "$ref": "#/components/schemas/CustomEmailSubjectPrefix"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "required": [
          "emails",
          "id",
          "kind",
          "name"
        ]
      },
      "EmptyConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          }
        ],
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "Endpoint": {
        "type": "object",
        "description": "Returns a list of Endpoints.",
        "properties": {
          "entityType": {
            "type": "string",
            "description": "Since, this is a Endpoint, it will be of type `ENDPOINT`.",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique ID of the Service. Eg: `NCRq5oYnan5x-PkdTPQwLLUdu5M`."
          },
          "isSynthetic": {
            "type": "boolean",
            "writeOnly": true
          },
          "label": {
            "type": "string",
            "description": "Name of the Endpoint. Eg: `GET /api/fetch`."
          },
          "serviceId": {
            "type": "string",
            "description": "The serviceId this endpoint belongs to."
          },
          "synthetic": {
            "type": "boolean"
          },
          "syntheticType": {
            "type": "string",
            "enum": [
              "NON_SYNTHETIC",
              "SYNTHETIC",
              "MIXED"
            ]
          },
          "technologies": {
            "type": "array",
            "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`",
            "items": {
              "type": "string",
              "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`"
            },
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "description": "The type of the Endpoint.",
            "enum": [
              "UNDEFINED",
              "RPC",
              "EVENT",
              "GRAPHQL",
              "BATCH",
              "SHELL",
              "HTTP",
              "SDK",
              "OPENTELEMETRY",
              "INTERNAL",
              "DATABASE",
              "MESSAGING",
              "PAGE",
              "PAGE_RESOURCE"
            ]
          }
        },
        "required": [
          "id",
          "label",
          "serviceId",
          "technologies",
          "type"
        ]
      },
      "EndpointConfig": {
        "type": "object",
        "properties": {
          "endpointCase": {
            "type": "string",
            "enum": [
              "ORIGINAL",
              "LOWER",
              "UPPER"
            ]
          },
          "endpointNameByCollectedPathTemplateRuleEnabled": {
            "type": "boolean"
          },
          "endpointNameByFirstPathSegmentRuleEnabled": {
            "type": "boolean"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpEndpointRule"
            },
            "maxItems": 500,
            "minItems": 1
          },
          "serviceId": {
            "type": "string"
          }
        },
        "required": [
          "endpointCase",
          "serviceId"
        ]
      },
      "EndpointEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "endpointId": {
                "type": "string"
              },
              "endpointServiceId": {
                "type": "string"
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              }
            }
          }
        ]
      },
      "EndpointItem": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "endpoint",
          "metrics"
        ]
      },
      "EndpointMetricResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "EndpointNode": {
        "type": "object",
        "properties": {
          "endpointId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "inclusive": {
            "type": "boolean"
          }
        },
        "required": [
          "endpointId"
        ]
      },
      "EndpointResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Returns a list of Endpoints.",
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "Page number you want to retrieve in a request / retrieved in a response."
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "number of elements retrieved in a single query."
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "description": "The number of results returned. For eg: If `items` has 5 elements, `totalhits` will be 5"
          }
        }
      },
      "EndpointSimple": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNDEFINED",
              "RPC",
              "EVENT",
              "GRAPHQL",
              "BATCH",
              "SHELL",
              "HTTP",
              "SDK",
              "OPENTELEMETRY",
              "INTERNAL",
              "DATABASE",
              "MESSAGING",
              "PAGE",
              "PAGE_RESOURCE"
            ]
          }
        }
      },
      "EntityCountRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "conditionOperator": {
                "type": "string",
                "enum": [
                  ">",
                  ">=",
                  "<",
                  "<=",
                  "=",
                  "!="
                ]
              },
              "conditionValue": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ],
        "required": [
          "conditionOperator"
        ]
      },
      "EntityCountVerificationRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "conditionOperator": {
                "type": "string",
                "enum": [
                  ">",
                  ">=",
                  "<",
                  "<=",
                  "=",
                  "!="
                ]
              },
              "conditionValue": {
                "type": "number",
                "format": "double"
              },
              "matchingEntityLabel": {
                "type": "string",
                "maxLength": 256,
                "minLength": 0
              },
              "matchingEntityType": {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              "matchingOperator": {
                "type": "string",
                "enum": [
                  "is",
                  "contains",
                  "startsWith",
                  "endsWith"
                ]
              }
            }
          }
        ],
        "required": [
          "conditionOperator",
          "matchingEntityLabel",
          "matchingEntityType",
          "matchingOperator"
        ]
      },
      "EntityHealthInfo": {
        "type": "object",
        "properties": {
          "maxSeverity": {
            "type": "number",
            "format": "double",
            "maximum": 10,
            "minimum": 0
          },
          "openIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "openIssues"
        ]
      },
      "EntityId": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "pluginId": {
            "type": "string"
          },
          "steadyId": {
            "type": "string"
          }
        },
        "required": [
          "host",
          "pluginId",
          "steadyId"
        ]
      },
      "EntityVerificationRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "matchingEntityLabel": {
                "type": "string",
                "maxLength": 256,
                "minLength": 0
              },
              "matchingEntityType": {
                "type": "string",
                "maxLength": 64,
                "minLength": 0
              },
              "matchingOperator": {
                "type": "string",
                "enum": [
                  "is",
                  "contains",
                  "startsWith",
                  "endsWith"
                ]
              },
              "offlineDuration": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "required": [
          "matchingEntityLabel",
          "matchingEntityType",
          "matchingOperator"
        ]
      },
      "ErrorBudgetAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceLevelsAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string",
                "enum": [
                  "BURN_RATE",
                  "BURNED_PERCENTAGE"
                ]
              }
            }
          }
        ],
        "required": [
          "metric"
        ]
      },
      "ErrorsApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "endpointServiceId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "entityId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "entityType": {
            "type": "string",
            "enum": [
              "Entity10",
              "App20",
              "Service20",
              "Endpoint20",
              "Website",
              "Synthetic",
              "MobileApp"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "metricAccessId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "plugin": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "rca": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "state": {
            "type": "string",
            "maxLength": 8,
            "minLength": 0
          },
          "type": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "entityId",
          "id",
          "plugin",
          "state",
          "type"
        ]
      },
      "EventFilteringConfiguration": {
        "type": "object",
        "description": "Event Filter Configuration for supporting the scope of the Alert Configuration. Applies a filter based on the application perspective or selected entities.",
        "properties": {
          "applicationAlertConfigIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "incident",
                "critical",
                "warning",
                "change",
                "online",
                "offline",
                "agent_monitoring_issue",
                "cve_issue",
                "none"
              ]
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          }
        }
      },
      "EventResult": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "APPLICATION": "#/components/schemas/ApplicationEventResult",
            "ENDPOINT": "#/components/schemas/EndpointEventResult",
            "INFRASTRUCTURE": "#/components/schemas/InfraEventResult",
            "MOBILE_APP": "#/components/schemas/MobileAppEventResult",
            "SERVICE": "#/components/schemas/ServiceEventResult",
            "SYNTHETICS": "#/components/schemas/SyntheticsEventResult",
            "WEBSITE": "#/components/schemas/WebsiteEventResult"
          },
          "propertyName": "entityType"
        },
        "properties": {
          "detail": {
            "type": "string",
            "description": "Details of the event."
          },
          "end": {
            "type": "integer",
            "format": "int64",
            "description": "A Unix timestamp representing the end time of the Event."
          },
          "entityLabel": {
            "type": "string",
            "description": "The label of the affected entity of the event."
          },
          "entityName": {
            "type": "string",
            "description": "The name or type of the affected entity of the event."
          },
          "entityType": {
            "type": "string",
            "description": "The category of the affected entity."
          },
          "eventId": {
            "type": "string",
            "description": "ID of this Event."
          },
          "fixSuggestion": {
            "type": "string",
            "deprecated": true,
            "description": "Details of the event."
          },
          "metrics": {
            "type": "array",
            "description": "List of metrics associated with the Event.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "List of metrics associated with the Event."
              },
              "description": "List of metrics associated with the Event."
            }
          },
          "probableCause": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Metadata of the probable root cause for this event. Only present in case of specific \"Incident\" type events."
            },
            "description": "Metadata of the probable root cause for this event. Only present in case of specific \"Incident\" type events."
          },
          "problem": {
            "type": "string",
            "description": "Main problem title of the Event."
          },
          "recentEvents": {
            "type": "array",
            "description": "List of related recent events. Only present in case of \"Incident\" type events.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "List of related recent events. Only present in case of \"Incident\" type events."
              },
              "description": "List of related recent events. Only present in case of \"Incident\" type events."
            }
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the Event when triggered."
          },
          "snapshotId": {
            "type": "string",
            "deprecated": true,
            "description": "The snapshot ID of the affected entity of this event."
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "description": "A Unix timestamp representing the start time of the Event."
          },
          "state": {
            "type": "string",
            "description": "The state of the Event, \"open\" or \"close\". "
          },
          "type": {
            "type": "string",
            "description": "The type of Event."
          }
        }
      },
      "EventSpecificationInfo": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "entityType": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean"
          },
          "migrated": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "triggering": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "BUILT_IN",
              "CUSTOM"
            ]
          }
        },
        "required": [
          "entityType",
          "id",
          "name",
          "type"
        ]
      },
      "ExtendedService": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "entityType": {
            "type": "string",
            "description": "Since, this is a Service, it will be of type `SERVICE`.",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique ID of the Service. Eg: `3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`."
          },
          "label": {
            "type": "string",
            "description": "Name of the Service. Eg: `payment`."
          },
          "maxSeverity": {
            "type": "number",
            "format": "double",
            "maximum": 10,
            "minimum": 0
          },
          "numberOfOpenIssues": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "snapshotIds": {
            "type": "array",
            "description": "A unique identifier the metrics are assigned to.",
            "items": {
              "type": "string",
              "description": "A unique identifier the metrics are assigned to."
            },
            "uniqueItems": true
          },
          "technologies": {
            "type": "array",
            "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`",
            "items": {
              "type": "string",
              "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`"
            },
            "uniqueItems": true
          },
          "types": {
            "type": "array",
            "description": "Shows types of Endpoints a Service can consist of. It may be one or more. Eg: `HTTP` `OPENTELEMETRY` can be in 1 Service.",
            "items": {
              "type": "string",
              "description": "Shows types of Endpoints a Service can consist of. It may be one or more. Eg: `HTTP` `OPENTELEMETRY` can be in 1 Service.",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ]
            },
            "uniqueItems": true
          }
        },
        "required": [
          "applications",
          "id",
          "label",
          "snapshotIds",
          "technologies",
          "types"
        ]
      },
      "FailureSyntheticAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "Field": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "secured": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "encoding",
          "name",
          "value"
        ]
      },
      "FixedHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "name",
          "type"
        ]
      },
      "FixedTimeWindow": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeWindow"
          },
          {
            "type": "object",
            "properties": {
              "startTimestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "required": [
          "duration",
          "durationUnit",
          "startTimestamp"
        ]
      },
      "FullTrace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rootSpan": {
            "$ref": "#/components/schemas/Span"
          },
          "totalErrorCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        },
        "required": [
          "id",
          "rootSpan"
        ]
      },
      "GenericInfraAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/InfraAlertRule"
          }
        ],
        "required": [
          "aggregation",
          "crossSeriesAggregation",
          "entityType",
          "metricName"
        ]
      },
      "GeoLocationConfiguration": {
        "type": "object",
        "properties": {
          "geoDetailRemoval": {
            "type": "string",
            "enum": [
              "NO_REMOVAL",
              "REMOVE_COORDINATES",
              "REMOVE_CITY",
              "REMOVE_ALL"
            ]
          },
          "geoMappingRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoMappingRule"
            },
            "maxItems": 512,
            "minItems": 0
          }
        },
        "required": [
          "geoDetailRemoval"
        ]
      },
      "GeoMappingRule": {
        "type": "object",
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "cidr": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "city": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          },
          "continentCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "leastSpecificSubdivision": {
            "$ref": "#/components/schemas/GeoSubdivision"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "subdivisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoSubdivision"
            },
            "maxItems": 8,
            "minItems": 0
          }
        },
        "required": [
          "cidr",
          "subdivisions"
        ]
      },
      "GeoSubdivision": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "name"
        ]
      },
      "GetActivities": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "timeframe": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "order",
          "pagination",
          "timeFrame"
        ]
      },
      "GetApplicationMetrics": {
        "type": "object",
        "properties": {
          "includeInternal": {
            "type": "boolean",
            "writeOnly": true
          },
          "includeSynthetic": {
            "type": "boolean",
            "writeOnly": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            }
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics",
          "timeFrame"
        ]
      },
      "GetApplications": {
        "type": "object",
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "description": "Use when querying calls of an application:\n `INBOUND`: only inbound calls \n `ALL`: all the calls to that application (inbound + internal)",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "applicationId": {
            "type": "string",
            "description": "An Instana generated unique identifier for an Application. If specified, the list of results will be filtered for the specified Application ID. Eg: `Av62RoIKQv-A3n6DbMQh9g`.\nOne can see the application id from Instana UI by going to an Application Perspective page. In the URL, there will be `appId=Av62RoIKQv-A3n6DbMQh9g`.\nAlternatively, one can use `Get applications` API endpoint to get the application id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "endpointId": {
            "type": "string",
            "description": "An Instana generated unique identifier for an Endpoint. If specified, the list of results will be filtered for the specified Endpoint ID. Eg `NCRq5oYnan5x-PkdTPQwLLUdu5M`.\nOne can see the endpoint id from Instana UI by going to an Endpoint page. In the URL, there will be `endpointId=NCRq5oYnan5x-PkdTPQwLLUdu5M`.\nAlternatively, one can use `Get endpoints` API endpoint to get the endpoint id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "endpointTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ]
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "metrics": {
            "type": "array",
            "description": "A list of objects each of which defines a metric and the (statistical) aggregation -- MEAN, SUM, MAX, etc -- that should be used to summarize it for the defined time frame. Eg: `[{ 'metric': 'latency', 'aggregation': 'MEAN'}]`. To know more about supported metrics and its aggregation, See `Get Metric catalog`.",
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "description": "filter by name with `contains` semantic. Eg: Let's say there are 2 names `app1` and `app2`, you can set `app`` here to include the two names",
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "description": "An Instana generated unique identifier for a Service. If specified, the list of results will be filtered for the specified Service ID. Eg: `3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nOne can see the service id from Instana UI by going to a Service page. In the URL, there will be `serviceId=3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nAlternatively, one can use `Get services` API endpoint to get the service id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "technologies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetAvailableMetricsQuery": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search term used to filter results using fields such as label, description, tag name or keywords",
            "maxLength": 200,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "description": "Entity type. Identifier for the monitored technology."
          }
        },
        "required": [
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetAvailablePluginsQuery": {
        "type": "object",
        "properties": {
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetCallGroups": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "includeInternal": {
            "type": "boolean"
          },
          "includeSynthetic": {
            "type": "boolean"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricConfig"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "group",
          "metrics"
        ]
      },
      "GetCombinedMetrics": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "uniqueItems": true
          },
          "plugin": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "rollup": {
            "type": "integer",
            "format": "int32"
          },
          "snapshotIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 30,
            "minItems": 1,
            "uniqueItems": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics",
          "plugin"
        ]
      },
      "GetDynamicParameterValues": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicParameter"
            }
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "eventId",
          "parameters",
          "timestamp"
        ]
      },
      "GetEndpoints": {
        "type": "object",
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "description": "Use when querying calls of an application:\n `INBOUND`: only inbound calls \n `ALL`: all the calls to that application (inbound + internal)",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "applicationId": {
            "type": "string",
            "description": "An Instana generated unique identifier for an Application. If specified, the list of results will be filtered for the specified Application ID. Eg: `Av62RoIKQv-A3n6DbMQh9g`.\nOne can see the application id from Instana UI by going to an Application Perspective page. In the URL, there will be `appId=Av62RoIKQv-A3n6DbMQh9g`.\nAlternatively, one can use `Get applications` API endpoint to get the application id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "endpointId": {
            "type": "string",
            "description": "An Instana generated unique identifier for an Endpoint. If specified, the list of results will be filtered for the specified Endpoint ID. Eg `NCRq5oYnan5x-PkdTPQwLLUdu5M`.\nOne can see the endpoint id from Instana UI by going to an Endpoint page. In the URL, there will be `endpointId=NCRq5oYnan5x-PkdTPQwLLUdu5M`.\nAlternatively, one can use `Get endpoints` API endpoint to get the endpoint id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "endpointTypes": {
            "type": "array",
            "description": "A list of endpoint types, each of which is a string. An endpoint can specified for a database, an SDK, etc.",
            "items": {
              "type": "string",
              "description": "A list of endpoint types, each of which is a string. An endpoint can specified for a database, an SDK, etc.",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ]
            },
            "maxItems": 8,
            "minItems": 0,
            "uniqueItems": true
          },
          "excludeSynthetic": {
            "type": "boolean",
            "description": "A variable used to specify whether synthetic endpoints should be excluded. If set to 'true', synthetic endpoints will be excluded from the result."
          },
          "metrics": {
            "type": "array",
            "description": "A list of objects each of which defines a metric and the (statistical) aggregation -- MEAN, SUM, MAX, etc -- that should be used to summarize it for the defined time frame. Eg: `[{ 'metric': 'latency', 'aggregation': 'MEAN'}]`. To know more about supported metrics and its aggregation, See `Get Metric catalog`.",
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "description": "filter by endpoint name with `contains` semantic. Eg: Let's say there are 2 Endpoint names `GET /api/fetch` and `GET /api/update`, you can set `GET /api/` here to include the two Endpoints.",
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "description": "An Instana generated unique identifier for a Service. If specified, the list of results will be filtered for the specified Service ID. Eg: `3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nOne can see the service id from Instana UI by going to a Service page. In the URL, there will be `serviceId=3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nAlternatively, one can use `Get services` API endpoint to get the service id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetInfrastructureGroupsQuery": {
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Entity grouping tag. Use the Instana Analyze Infrastructure dashboard to determine the entity grouping tag name.",
            "items": {
              "type": "string",
              "description": "Entity grouping tag. Use the Instana Analyze Infrastructure dashboard to determine the entity grouping tag name."
            },
            "maxItems": 5,
            "minItems": 0
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfraMetricConfiguration"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "missingPlaceholder": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPaginationInfraExploreCursor"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "description": "Type of entities"
          }
        },
        "required": [
          "groupBy",
          "pagination",
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetInfrastructureQuery": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfraMetricConfiguration"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "missingPlaceholder": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPaginationInfraExploreCursor"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "description": "Type of entities"
          }
        },
        "required": [
          "pagination",
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetMetricsResult": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricTagGroup"
            }
          },
          "includeAggregatedTestIds": {
            "type": "boolean",
            "writeOnly": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricConfiguration"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetMobileAppBeaconGroups": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/MobileAppBeaconTagGroup"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ]
          }
        },
        "required": [
          "group",
          "metrics",
          "type"
        ]
      },
      "GetMobileAppBeacons": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "GetMobileAppMetrics": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ]
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetMobileAppMetricsV2": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ]
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetPayloadKeysResult": {
        "type": "object",
        "properties": {
          "payloadKeys": {
            "type": "array",
            "description": "Keys that can be used to retrieve plugin payloads.",
            "items": {
              "type": "string",
              "description": "Keys that can be used to retrieve plugin payloads."
            }
          }
        }
      },
      "GetServices": {
        "type": "object",
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "description": "Use when querying calls of an application:\n `INBOUND`: only inbound calls \n `ALL`: all the calls to that application (inbound + internal)",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "applicationId": {
            "type": "string",
            "description": "An Instana generated unique identifier for an Application. If specified, the list of results will be filtered for the specified Application ID. Eg: `Av62RoIKQv-A3n6DbMQh9g`.\nOne can see the application id from Instana UI by going to an Application Perspective page. In the URL, there will be `appId=Av62RoIKQv-A3n6DbMQh9g`.\nAlternatively, one can use `Get applications` API endpoint to get the application id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "contextScope": {
            "type": "string",
            "description": "separate filtering and group by service id field\n - upstream is filtered on destination service and groups on source service\n - downstream is filtered on source service and groups on destination service\n - none is filtered on destination service and no grouping",
            "enum": [
              "NONE",
              "UPSTREAM",
              "DOWNSTREAM"
            ]
          },
          "metrics": {
            "type": "array",
            "description": "A list of objects each of which defines a metric and the (statistical) aggregation -- MEAN, SUM, MAX, etc -- that should be used to summarize it for the defined time frame. Eg: `[{ 'metric': 'latency', 'aggregation': 'MEAN'}]`. To know more about supported metrics and its aggregation, See `Get Metric catalog`.",
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "description": "filter by name with `contains` semantic. Eg: Let's say there are 2 service names `ecomm-order` and `ecomm-deliver`, you can set `ecomm-` here to include the two Services.",
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "description": "An Instana generated unique identifier for a Service. If specified, the list of results will be filtered for the specified Service ID. Eg: `3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nOne can see the service id from Instana UI by going to a Service page. In the URL, there will be `serviceId=3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`.\nAlternatively, one can use `Get services` API endpoint to get the service id in `id` parameter.\n",
            "maxLength": 64,
            "minLength": 0
          },
          "technologies": {
            "type": "array",
            "description": "A list of technologies to be used for filtering data. For example, technologies could include AWS ECS, Cassandra, DB2, JVM, Kafka, etc. A full list of available technologies can be found in X.",
            "items": {
              "type": "string",
              "description": "A list of technologies to be used for filtering data. For example, technologies could include AWS ECS, Cassandra, DB2, JVM, Kafka, etc. A full list of available technologies can be found in X."
            },
            "maxItems": 20,
            "minItems": 0,
            "uniqueItems": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetSnapshotsQuery": {
        "type": "object",
        "properties": {
          "snapshotIds": {
            "type": "array",
            "description": "List of one or more snapshot ids.",
            "items": {
              "type": "string",
              "description": "List of one or more snapshot ids."
            },
            "maxItems": 1000,
            "minItems": 0,
            "uniqueItems": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "snapshotIds"
        ]
      },
      "GetTestResult": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "locationId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricConfiguration"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "testId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetTestResultBase": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        }
      },
      "GetTestResultList": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "syntheticMetrics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "syntheticMetrics"
        ]
      },
      "GetTestSummaryResult": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricConfiguration"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetTraceDownloadResultItem": {
        "type": "object",
        "properties": {
          "callCount": {
            "type": "integer",
            "format": "int64"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "destination": {
            "$ref": "#/components/schemas/CallRelation"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "errorCount": {
            "type": "integer",
            "format": "int64"
          },
          "foreignParentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "minSelfTime": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "networkTime": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetTraceGroups": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "includeInternal": {
            "type": "boolean"
          },
          "includeSynthetic": {
            "type": "boolean"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricConfig"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "group",
          "metrics"
        ]
      },
      "GetTraces": {
        "type": "object",
        "properties": {
          "includeInternal": {
            "type": "boolean"
          },
          "includeSynthetic": {
            "type": "boolean"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        }
      },
      "GetWebsiteBeaconGroups": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/WebsiteBeaconTagGroup"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ]
          }
        },
        "required": [
          "group",
          "metrics",
          "type"
        ]
      },
      "GetWebsiteBeacons": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "GetWebsiteMetrics": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ]
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetWebsiteMetricsV2": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ]
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GlobalApplicationAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationIds": {
            "type": "array",
            "description": "IDs of the applications that this Smart Alert is applied to.",
            "items": {
              "type": "string",
              "description": "IDs of the applications that this Smart Alert is applied to."
            },
            "uniqueItems": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "description": "Selection of applications, services, and endpoints that this Smart Alert configuration is associated with. This selection is connected to the defined `tagFilterExpression` by the logical `AND` operator."
          },
          "boundaryScope": {
            "type": "string",
            "description": "Determines the source of the application alert configuration. An `INBOUND` scope refers to consumer-made calls. An `ALL` scope refers to both consumer and internally made calls.",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "builtIn": {
            "type": "boolean",
            "description": "Flag that indicates whether this configuration is a built-in Smart Alert. "
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the application alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "evaluationType": {
            "type": "string",
            "description": "Determines whether calls of the aggregated metrics are grouped by the application, the service, or the endpoint. This also determines whether the resulting events are categorized as an issue on the respective entity of that group.",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of this Global Application Alert Configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "includeInternal": {
            "type": "boolean",
            "description": "Flag to include Internal Calls. These calls are work done inside a service and correspond to intermediate spans in custom tracing."
          },
          "includeSynthetic": {
            "type": "boolean",
            "description": "Flag to include Synthetic Calls. These calls have a synthetic endpoint as their destination, such as calls to health-check endpoints. "
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time of the initial revision.",
            "minimum": 1
          },
          "lowSeverityThreshold": {
            "$ref": "#/components/schemas/TupleSeverityThreshold"
          },
          "name": {
            "type": "string",
            "description": "Name of the application alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is read-only. Read-only access restricts modification of the config."
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdApplicationAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "id",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "GlobalApplicationsAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "description": "Selection of applications, services, and endpoints that this Smart Alert configuration is associated with. This selection is connected to the defined `tagFilterExpression` by the logical `AND` operator."
          },
          "boundaryScope": {
            "type": "string",
            "description": "Determines the source of the application alert configuration. An `INBOUND` scope refers to consumer-made calls. An `ALL` scope refers to both consumer and internally made calls.",
            "enum": [
              "ALL",
              "INBOUND"
            ]
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the application alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "evaluationType": {
            "type": "string",
            "description": "Determines whether calls of the aggregated metrics are grouped by the application, the service, or the endpoint. This also determines whether the resulting events are categorized as an issue on the respective entity of that group.",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "includeInternal": {
            "type": "boolean",
            "description": "Flag to include Internal Calls. These calls are work done inside a service and correspond to intermediate spans in custom tracing."
          },
          "includeSynthetic": {
            "type": "boolean",
            "description": "Flag to include Synthetic Calls. These calls have a synthetic endpoint as their destination, such as calls to health-check endpoints. "
          },
          "lowSeverityThreshold": {
            "$ref": "#/components/schemas/TupleSeverityThreshold"
          },
          "name": {
            "type": "string",
            "description": "Name of the application alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdApplicationAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "GoogleChatIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "GraphEdge": {
        "type": "object",
        "properties": {
          "destination": {
            "type": "string"
          },
          "relation": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "GraphNode": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "entityId": {
            "$ref": "#/components/schemas/EntityId"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "plugin": {
            "type": "string"
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "groupbyTag": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ]
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "GroupByTag": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          }
        },
        "required": [
          "tagName"
        ]
      },
      "GroupMapping": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "key": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "value": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          }
        },
        "required": [
          "groupId",
          "key",
          "value"
        ]
      },
      "HealthState": {
        "type": "object",
        "properties": {
          "health": {
            "type": "string",
            "enum": [
              "RED",
              "YELLOW",
              "GREEN"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HistoricBaseline": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "baseline": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              },
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              },
              "lastUpdated": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "seasonality": {
                "type": "string",
                "enum": [
                  "WEEKLY",
                  "DAILY"
                ]
              }
            }
          }
        ],
        "required": [
          "operator",
          "seasonality"
        ]
      },
      "HostAvailabilityRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "closeAfter": {
                "type": "integer",
                "format": "int64",
                "maximum": 86400000
              },
              "offlineDuration": {
                "type": "integer",
                "format": "int64"
              },
              "tagFilter": {
                "$ref": "#/components/schemas/TagFilter"
              }
            }
          }
        ]
      },
      "HttpActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "allowInsecure": {
                "type": "boolean"
              },
              "body": {
                "type": "string"
              },
              "expectExists": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expectJson": {
                "$ref": "#/components/schemas/ContainerNode"
              },
              "expectMatch": {
                "type": "string"
              },
              "expectNotEmpty": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expectStatus": {
                "type": "integer",
                "format": "int32"
              },
              "followRedirect": {
                "type": "boolean"
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "operation": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PUT"
                ]
              },
              "url": {
                "type": "string",
                "maxLength": 2047,
                "minLength": 0
              },
              "validationString": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "markSyntheticCall",
          "syntheticType",
          "url"
        ]
      },
      "HttpEndpointConfig": {
        "type": "object",
        "properties": {
          "endpointNameByCollectedPathTemplateRuleEnabled": {
            "type": "boolean"
          },
          "endpointNameByFirstPathSegmentRuleEnabled": {
            "type": "boolean"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpEndpointRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "serviceId": {
            "type": "string"
          }
        },
        "required": [
          "rules",
          "serviceId"
        ]
      },
      "HttpEndpointRule": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "pathSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
            },
            "maxItems": 16,
            "minItems": 1
          },
          "testCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 32,
            "minItems": 0
          }
        },
        "required": [
          "pathSegments"
        ]
      },
      "HttpPathSegmentMatchingRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "FIXED": "#/components/schemas/FixedHttpPathSegmentMatchingRule",
            "MATCH_ALL": "#/components/schemas/MatchAllHttpPathSegmentMatchingRule",
            "PARAMETER": "#/components/schemas/PathParameterHttpPathSegmentMatchingRule",
            "UNSUPPORTED": "#/components/schemas/UnsupportedHttpPathSegmentMatchingRule"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UNSUPPORTED",
              "FIXED",
              "PARAMETER",
              "MATCH_ALL"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "HttpScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "script": {
                "type": "string",
                "maxLength": 1048576,
                "minLength": 0
              },
              "scriptType": {
                "type": "string",
                "enum": [
                  "Basic",
                  "Jest"
                ]
              },
              "scripts": {
                "$ref": "#/components/schemas/MultipleScriptsConfiguration"
              }
            }
          }
        ],
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "HyperParam": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "maxValue": {
            "type": "number",
            "format": "double"
          },
          "minValue": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "valueFormat": {
            "type": "string",
            "description": "|\n* NUMBER: Generic number\n* BYTES: Number of bytes\n* KILO_BYTES: Number of kilobytes\n* MEGA_BYTES: Number of megabytes\n* PERCENTAGE: Percentage in scale [0,1]\n* PERCENTAGE_100: Percentage in scale [0,100]\n* PERCENTAGE_NO_CAPPING: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* PERCENTAGE_100_NO_CAPPING: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* LATENCY: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* NANOS: Time in nanoseconds\n* MILLIS: Time in milliseconds\n* MICROS: Time in microseconds\n* SECONDS: Time in seconds\n* RATE: Number of occurrences per second\n* BYTE_RATE: Number of bytes per second\n* UNDEFINED: Metric value unit is not known\n",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "PERCENTAGE_100",
              "PERCENTAGE_NO_CAPPING",
              "PERCENTAGE_100_NO_CAPPING",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ]
          }
        },
        "required": [
          "description",
          "id",
          "name"
        ]
      },
      "IdentityProviderPatch": {
        "type": "object",
        "properties": {
          "restrictEmptyIdpGroups": {
            "type": "boolean"
          }
        }
      },
      "Incident": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "properties": {
              "distances": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/IssueDistance"
                }
              },
              "issues": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              },
              "triggeringIssue": {
                "type": "string",
                "writeOnly": true
              },
              "triggeringIssueId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "InfraAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the Infrastructure Smart Alert. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "groupBy": {
            "type": "array",
            "description": "The grouping tags used to group the metric results.",
            "items": {
              "type": "string",
              "description": "The grouping tags used to group the metric results."
            },
            "maxItems": 5,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "description": "Name of the Infrastructure Smart Alert. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/InfraAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdInfraAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical)."
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/InfraTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "groupBy",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "InfraAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the Infrastructure Smart Alert. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "groupBy": {
            "type": "array",
            "description": "The grouping tags used to group the metric results.",
            "items": {
              "type": "string",
              "description": "The grouping tags used to group the metric results."
            },
            "maxItems": 5,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Infrastructure Smart Alert. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean"
          },
          "rule": {
            "$ref": "#/components/schemas/InfraAlertRule"
          },
          "rules": {
            "type": "array",
            "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
            "items": {
              "$ref": "#/components/schemas/RuleWithThresholdInfraAlertRule"
            },
            "maxItems": 1,
            "minItems": 1
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "deprecated": true,
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical)."
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/InfraTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "groupBy",
          "id",
          "name",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "InfraAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "genericRule": "#/components/schemas/GenericInfraAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "alertType": {
            "type": "string"
          },
          "crossSeriesAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "entityType": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          },
          "regex": {
            "type": "boolean"
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "InfraEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "ibmMqFileTransfer": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              },
              "snapshotId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "InfraExploreCursor": {
        "type": "object",
        "description": "cursor to use between successive queries"
      },
      "InfraMetricConfiguration": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "crossSeriesAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int64",
            "description": "   * If granularity is not specified an aggregated value for the selected timeframe is returned.\n   * If granularity is specified data points are returned with the specified granularity\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in milliseconds)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n",
            "title": "granularity in milliseconds"
          },
          "metric": {
            "type": "string"
          },
          "regex": {
            "type": "boolean"
          },
          "required": {
            "type": "boolean",
            "description": "When true, metric must be present with values"
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "InfraTimeThreshold": {
        "type": "object",
        "description": "The type of threshold to define the criteria when the event and alert triggers and resolves.",
        "discriminator": {
          "mapping": {
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceInfraTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "InfrastructureEntitiesResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfrastructureItem"
            }
          },
          "next": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "description": "represents the total number of results",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "InfrastructureGroup": {
        "type": "object",
        "description": "group of infrastructure entities",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "number of entities in this group"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "map of metric keys to array of timestamp,value pairs",
              "items": {
                "type": "array",
                "description": "map of metric keys to array of timestamp,value pairs",
                "items": {
                  "type": "number",
                  "description": "map of metric keys to array of timestamp,value pairs"
                }
              }
            },
            "description": "map of metric keys to array of timestamp,value pairs"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "tag keys and values for this group"
            },
            "description": "tag keys and values for this group"
          }
        }
      },
      "InfrastructureGroupsResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfrastructureGroup"
            }
          },
          "next": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "description": "represents the total number of results",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "InfrastructureItem": {
        "type": "object",
        "properties": {
          "entityHealthInfo": {
            "$ref": "#/components/schemas/EntityHealthInfo"
          },
          "label": {
            "type": "string"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "plugin": {
            "type": "string"
          },
          "snapshotId": {
            "type": "string"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "Epoch time in milliseconds if the snapshot is offline. Set to 9223372036854775807 if the snapshot is online."
          }
        }
      },
      "InfrastructureMetricResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricItem"
            }
          }
        }
      },
      "IngestionOffsetCursor": {
        "type": "object"
      },
      "InstanaVersionInfo": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "imageTag": {
            "type": "string"
          }
        }
      },
      "IntegrationOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the alert channel"
          },
          "kind": {
            "type": "string",
            "description": "The type of the Alerting Channel."
          },
          "name": {
            "type": "string",
            "description": "The name of the Alerting Channel."
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Properties of the alert channel in pairs of key/value"
            },
            "description": "Properties of the alert channel in pairs of key/value"
          }
        },
        "required": [
          "id",
          "kind",
          "name"
        ]
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "groupId"
        ]
      },
      "InvitationResponse": {
        "type": "object",
        "properties": {
          "invitationResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationResult"
            }
          }
        }
      },
      "InvitationResult": {
        "type": "object",
        "properties": {
          "invitationStatus": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INTERNAL_ERROR",
              "FAILURE_USER_ALREADY_EXISTS",
              "FAILURE_USER_ALREADY_INVITED",
              "FAILURE_ONLY_DEFAULT_GROUP_INVITATION_ALLOWED",
              "FAILURE_TENANT_IDP_CONFIGURED"
            ]
          },
          "userEmail": {
            "type": "string"
          }
        }
      },
      "IpMaskingConfiguration": {
        "type": "object",
        "properties": {
          "ipMasking": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "STRICT",
              "REMOVE_ALL_DETAILS"
            ]
          }
        },
        "required": [
          "ipMasking"
        ]
      },
      "Issue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "properties": {
              "eventmode": {
                "type": "string",
                "enum": [
                  "infra",
                  "application_20",
                  "service_20",
                  "endpoint_20",
                  "website",
                  "synthetic",
                  "mobile_app"
                ],
                "writeOnly": true
              },
              "incidents": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              },
              "triggering": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "IssueDistance": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string"
          },
          "logicalDistanceToTriggering": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDistanceToTriggering": {
            "type": "integer",
            "format": "int32"
          },
          "temporalDistanceToTriggering": {
            "type": "integer",
            "format": "int64"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "JsStackTraceLine": {
        "type": "object",
        "properties": {
          "column": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "file": {
            "type": "string"
          },
          "line": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "name": {
            "type": "string"
          },
          "translationExplanation": {
            "type": "string"
          },
          "translationStatus": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          }
        },
        "required": [
          "file"
        ]
      },
      "KubernetesPhysicalContext": {
        "type": "object",
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "namespace": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "node": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "pod": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "LatencyBlueprintIndicator": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceLevelIndicator"
          },
          {
            "type": "object",
            "properties": {
              "badEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "goodEventsFilter": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "threshold": {
                "type": "number",
                "format": "double",
                "exclusiveMinimum": false,
                "minimum": 0
              }
            }
          }
        ],
        "required": [
          "type"
        ]
      },
      "LocationStatus": {
        "type": "object",
        "properties": {
          "locationDisplayLabel": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          },
          "successRuns": {
            "type": "integer",
            "format": "int64"
          },
          "totalTestRuns": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "locationId"
        ]
      },
      "LogAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "groupBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupByTag"
            },
            "maxItems": 1,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/LogTimeThreshold"
          }
        },
        "required": [
          "description",
          "granularity",
          "name",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "LogAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "groupBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupByTag"
            },
            "maxItems": 1,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean"
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/LogTimeThreshold"
          }
        },
        "required": [
          "description",
          "granularity",
          "id",
          "name",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "LogEntryActor": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "USER",
              "API_TOKEN",
              "POLICY"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "LogTimeThreshold": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceLogTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "LogsApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "enum": [
                  "WARN",
                  "ERROR",
                  "ANY"
                ]
              },
              "loglevel": {
                "type": "string",
                "enum": [
                  "WARN",
                  "ERROR",
                  "ANY"
                ],
                "writeOnly": true
              },
              "message": {
                "type": "string"
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ]
              }
            }
          }
        ],
        "required": [
          "level",
          "metricName",
          "operator"
        ]
      },
      "MaintenanceConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query"
        ]
      },
      "MaintenanceConfigScheduling": {
        "type": "object",
        "description": "Time scheduling of the Maintenance Window configurations.",
        "discriminator": {
          "mapping": {
            "ONE_TIME": "#/components/schemas/OneTimeMaintenanceWindow",
            "RECURRENT": "#/components/schemas/RecurrentMaintenanceWindow"
          },
          "propertyName": "type"
        },
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "type": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          }
        },
        "required": [
          "duration",
          "start",
          "type"
        ]
      },
      "MaintenanceConfigV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Maintenance Window configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "description": "Name of the Maintenance Window configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "paused": {
            "type": "boolean",
            "description": "Boolean flag to determine if the Maintenance Window configuration is paused or still live."
          },
          "query": {
            "type": "string",
            "description": "Dynamic Focus Query that determines the scope of the Maintenance Window configuration.",
            "maxLength": 2048,
            "minLength": 0
          },
          "scheduling": {
            "$ref": "#/components/schemas/MaintenanceConfigScheduling"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilterExpressionEnabled": {
            "type": "boolean",
            "description": "Boolean flag to determine if the tagFilterExpression is enabled."
          }
        },
        "required": [
          "id",
          "name",
          "query",
          "scheduling"
        ]
      },
      "MaintenanceConfigV2WithStateAndOccurrence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Maintenance Window configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Maintenance Window configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "occurrence": {
            "$ref": "#/components/schemas/Occurrence"
          },
          "paused": {
            "type": "boolean",
            "description": "Boolean flag to determine if the Maintenance Window configuration is paused or still live."
          },
          "query": {
            "type": "string",
            "description": "Dynamic Focus Query that determines the scope of the Maintenance Window configuration.",
            "maxLength": 2048,
            "minLength": 0
          },
          "scheduling": {
            "$ref": "#/components/schemas/MaintenanceConfigScheduling"
          },
          "state": {
            "type": "string",
            "description": "State of the Maintenance Window, it can be: UNSCHEDULED, SCHEDULED, ACTIVE, PAUSED, EXPIRED.",
            "enum": [
              "UNSCHEDULED",
              "SCHEDULED",
              "ACTIVE",
              "PAUSED",
              "EXPIRED"
            ]
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilterExpressionEnabled": {
            "type": "boolean",
            "description": "Boolean flag to determine if the tagFilterExpression is enabled."
          }
        },
        "required": [
          "id",
          "name",
          "occurrence",
          "query",
          "scheduling"
        ]
      },
      "MaintenanceConfigWithLastUpdated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query"
        ]
      },
      "MaintenanceWindow": {
        "type": "object",
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "id"
        ]
      },
      "ManualCloseInfo": {
        "type": "object",
        "properties": {
          "closeTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "disableEvent": {
            "type": "boolean"
          },
          "muteAlerts": {
            "type": "boolean"
          },
          "reasonForClosing": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "reasonForClosing",
          "username"
        ]
      },
      "ManualServiceConfig": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "existingServiceId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "unmonitoredServiceName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tagFilterExpression"
        ]
      },
      "MatchAllHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          }
        ],
        "required": [
          "type"
        ]
      },
      "MatchExpressionDTO": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "BINARY_OP": "#/components/schemas/BinaryOperatorDTO",
            "LEAF": "#/components/schemas/TagMatcherDTO"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "ai": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "aiOriginated": {
            "type": "boolean"
          },
          "builtIn": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "sensorImported": {
            "type": "boolean"
          }
        }
      },
      "MetricAPIResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "metrics"
        ]
      },
      "MetricConfig": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "description": "Set aggregation that can be applied to a series of values. Eg: `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "If the granularity is set you will get data points with the specified granularity in seconds. Default: `1000` milliseconds"
          },
          "metric": {
            "type": "string",
            "description": "Set a particular metric, eg: `latency`."
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "MetricConfiguration": {
        "type": "object",
        "properties": {
          "metricAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "metricName": {
            "type": "string"
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "exclusiveMinimum": true,
            "minimum": 0
          }
        },
        "required": [
          "metricName"
        ]
      },
      "MetricDescription": {
        "type": "object",
        "properties": {
          "aggregations": {
            "type": "array",
            "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
            "items": {
              "type": "string",
              "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND",
                "INCREASE"
              ]
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "description": "The preselected aggregation for a metric. For example, for `Call latency` the default aggregation is `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the metric. For example, for `Call count` metric, the description would be something like `Number of received calls`"
          },
          "formatter": {
            "type": "string",
            "description": "* `NUMBER`: Generic number\n* `BYTES`: Number of bytes\n* `KILO_BYTES`: Number of kilobytes\n* `MEGA_BYTES`: Number of megabytes\n* `PERCENTAGE`: Percentage in scale [0,1]\n* `PERCENTAGE_100`: Percentage in scale [0,100]\n* `PERCENTAGE_NO_CAPPING`: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* `PERCENTAGE_100_NO_CAPPING`: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* `LATENCY`: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* `NANOS`: Time in nanoseconds\n* `MILLIS`: Time in milliseconds\n* `MICROS`: Time in microseconds\n* `SECONDS`: Time in seconds\n* `RATE`: Number of occurrences per second\n* `BYTE_RATE`: Number of bytes per second\n* `UNDEFINED`: Metric value unit is not known\n"
          },
          "label": {
            "type": "string",
            "description": "The name of the metric. For example, `Call count`, `Erroneous calls`, `Service count` etc."
          },
          "metricId": {
            "type": "string",
            "description": "The unique id of the metric. For example, `calls`, `erroneousCalls`, `latency` etc."
          }
        },
        "required": [
          "aggregations",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "MetricInstance": {
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "formatter": {
            "type": "string",
            "description": "|\n* NUMBER: Generic number\n* BYTES: Number of bytes\n* KILO_BYTES: Number of kilobytes\n* MEGA_BYTES: Number of megabytes\n* PERCENTAGE: Percentage in scale [0,1]\n* PERCENTAGE_100: Percentage in scale [0,100]\n* PERCENTAGE_NO_CAPPING: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* PERCENTAGE_100_NO_CAPPING: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* LATENCY: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* NANOS: Time in nanoseconds\n* MILLIS: Time in milliseconds\n* MICROS: Time in microseconds\n* SECONDS: Time in seconds\n* RATE: Number of occurrences per second\n* BYTE_RATE: Number of bytes per second\n* UNDEFINED: Metric value unit is not known\n",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "PERCENTAGE_100",
              "PERCENTAGE_NO_CAPPING",
              "PERCENTAGE_100_NO_CAPPING",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ]
          },
          "label": {
            "type": "string"
          },
          "metricId": {
            "type": "string"
          },
          "pluginId": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "formatter",
          "label",
          "metricId",
          "pluginId"
        ]
      },
      "MetricItem": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "plugin": {
            "type": "string"
          },
          "snapshotId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MetricMetadata": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of the metric"
          },
          "crossSeriesAggregations": {
            "type": "array",
            "description": "Possible cross series aggregation the metric supports",
            "items": {
              "type": "string",
              "description": "Possible cross series aggregation the metric supports",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND",
                "INCREASE"
              ]
            },
            "uniqueItems": true
          },
          "description": {
            "type": "string",
            "description": "Description of the metric"
          },
          "format": {
            "type": "string",
            "description": "|\n* NUMBER: Generic number\n* BYTES: Number of bytes\n* KILO_BYTES: Number of kilobytes\n* MEGA_BYTES: Number of megabytes\n* PERCENTAGE: Percentage in scale [0,1]\n* PERCENTAGE_100: Percentage in scale [0,100]\n* PERCENTAGE_NO_CAPPING: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* PERCENTAGE_100_NO_CAPPING: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* LATENCY: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* NANOS: Time in nanoseconds\n* MILLIS: Time in milliseconds\n* MICROS: Time in microseconds\n* SECONDS: Time in seconds\n* RATE: Number of occurrences per second\n* BYTE_RATE: Number of bytes per second\n* UNDEFINED: Metric value unit is not known\n",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "PERCENTAGE_100",
              "PERCENTAGE_NO_CAPPING",
              "PERCENTAGE_100_NO_CAPPING",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ]
          },
          "id": {
            "type": "string",
            "description": "Identifier for the metric"
          },
          "infraTagCategory": {
            "type": "string",
            "description": "Category of the entity",
            "enum": [
              "ACE",
              "ALICLOUD",
              "AWS",
              "AZURE",
              "CASSANDRA",
              "CLOUD_FOUNDRY",
              "CLR",
              "COCKROACH",
              "CONSUL",
              "CONTAINER",
              "COUCHBASE",
              "DFQ",
              "ELASTICSEARCH",
              "GCP",
              "HADOOP_YARN",
              "HAZELCAST",
              "IBM_CLOUD",
              "IBM_DATAPOWER",
              "IBM_I_SERIES",
              "IBM_MQ",
              "IBM_MQMFT",
              "IBM_OPENSTACK",
              "KAFKA_CONNECT",
              "KUBERNETES",
              "MONGO_DB",
              "OTHERS",
              "REDIS",
              "SAP",
              "SELF_MONITORING",
              "SOLR",
              "SPARK",
              "TIBCOBW",
              "TUXEDO",
              "VSHPERE",
              "WEBSPHERE"
            ]
          },
          "label": {
            "type": "string",
            "description": "Label for the metric"
          },
          "ownerType": {
            "type": "string",
            "description": "Type of the entity associated with the metric"
          }
        },
        "required": [
          "id",
          "infraTagCategory",
          "label",
          "ownerType"
        ]
      },
      "MetricPattern": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "is",
              "contains",
              "startsWith",
              "endsWith",
              "any"
            ]
          },
          "placeholder": {
            "type": "string"
          },
          "postfix": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "required": [
          "operator",
          "prefix"
        ]
      },
      "MetricsResult": {
        "type": "object",
        "properties": {
          "metricsResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricsResultItem"
            }
          }
        },
        "required": [
          "metricsResult"
        ]
      },
      "MetricsResultItem": {
        "type": "object",
        "properties": {
          "customTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "tests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricsTestResultItem"
            }
          }
        },
        "required": [
          "metrics"
        ]
      },
      "MetricsTestResultItem": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceId": {
            "type": "string"
          },
          "testId": {
            "type": "string"
          },
          "testName": {
            "type": "string"
          }
        },
        "required": [
          "testId"
        ]
      },
      "MobileApp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "MobileAppAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "completeTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the mobile app alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "mobileAppId": {
            "type": "string",
            "description": "ID of the mobile app that this Smart Alert configuration is applied to.",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "description": "Name of the mobile app alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/MobileAppTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "mobileAppId",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "MobileAppAlertRule": {
        "type": "object",
        "description": "Indicates the type of rule this alert configuration is about.",
        "discriminator": {
          "mapping": {
            "crash": "#/components/schemas/CrashMobileAppAlertRule",
            "customEvent": "#/components/schemas/CustomEventMobileAppAlertRule",
            "statusCode": "#/components/schemas/StatusCodeMobileAppAlertRule",
            "throughput": "#/components/schemas/ThroughputMobileAppAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "alertType": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "MobileAppBeaconGroupsItem": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "earliestTimestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "MobileAppBeaconGroupsResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileAppBeaconGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "MobileAppBeaconResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileAppBeaconsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "MobileAppBeaconTagGroup": {
        "type": "object",
        "properties": {
          "groupbyTag": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ]
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "MobileAppBeaconsItem": {
        "type": "object",
        "properties": {
          "beacon": {
            "$ref": "#/components/schemas/MobileAppMonitoringBeacon"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          }
        },
        "required": [
          "beacon",
          "cursor"
        ]
      },
      "MobileAppEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "mobileAppId": {
                "type": "string"
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              }
            }
          }
        ]
      },
      "MobileAppMetricResult": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        }
      },
      "MobileAppMonitoringBeacon": {
        "type": "object",
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "agentVersion": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "appBuild": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "appVersion": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "appVersionNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "backendTraceId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "batchSize": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "beaconId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "bundleIdentifier": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "carrier": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "city": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "clockSkew": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "connectionType": {
            "type": "string",
            "maxLength": 16,
            "minLength": 0
          },
          "continent": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "continentCode": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "country": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "countryCode": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "customEventName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "customMetric": {
            "type": "number",
            "format": "double"
          },
          "decodedBodySize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "deviceHardware": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "deviceManufacturer": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "deviceModel": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "effectiveConnectionType": {
            "type": "string",
            "maxLength": 16,
            "minLength": 0
          },
          "encodedBodySize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "environment": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "errorMessage": {
            "type": "string",
            "maxLength": 16384,
            "minLength": 0
          },
          "errorType": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 0
          },
          "googlePlayServicesMissing": {
            "type": "boolean"
          },
          "httpCallHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "httpCallMethod": {
            "type": "string",
            "maxLength": 16,
            "minLength": 0
          },
          "httpCallOrigin": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 0
          },
          "httpCallPath": {
            "type": "string",
            "maxLength": 4096,
            "minLength": 0
          },
          "httpCallStatus": {
            "type": "integer",
            "format": "int32",
            "maximum": 599,
            "minimum": -1
          },
          "httpCallUrl": {
            "type": "string",
            "maxLength": 4096,
            "minLength": 0
          },
          "ingestionTime": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "internalMeta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "mobileAppId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "mobileAppLabel": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "osName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "osVersion": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "parentBeaconId": {
            "type": "string"
          },
          "parsedStackTrace": {
            "type": "string",
            "maxLength": 16384,
            "minLength": 0
          },
          "platform": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0
          },
          "region": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "rooted": {
            "type": "boolean"
          },
          "sessionId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "stackTrace": {
            "type": "string",
            "maxLength": 16384,
            "minLength": 0
          },
          "stackTraceKeyChecksum": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "stackTraceKeyInformation": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 0
          },
          "stackTraceLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StackTraceLine"
            },
            "maxItems": 128,
            "minItems": 0
          },
          "stackTraceParsingStatus": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "subdivision": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "subdivisionCode": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "tenant": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "transferSize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "type": {
            "type": "string",
            "maxLength": 24,
            "minLength": 0
          },
          "unit": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "useFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0
          },
          "userEmail": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "userId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "userIp": {
            "type": "string",
            "maxLength": 45,
            "minLength": 0
          },
          "userLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0
          },
          "userName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "userSessionId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "view": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "viewportHeight": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "viewportWidth": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          }
        },
        "required": [
          "beaconId",
          "mobileAppId",
          "sessionId",
          "type"
        ]
      },
      "MobileAppMonitoringMetricDescription": {
        "type": "object",
        "properties": {
          "aggregations": {
            "type": "array",
            "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
            "items": {
              "type": "string",
              "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND",
                "INCREASE"
              ]
            },
            "uniqueItems": true
          },
          "beaconTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "description": "The preselected aggregation for a metric. For example, for `Call latency` the default aggregation is `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the metric. For example, for `Call count` metric, the description would be something like `Number of received calls`"
          },
          "formatter": {
            "type": "string",
            "description": "* `NUMBER`: Generic number\n* `BYTES`: Number of bytes\n* `KILO_BYTES`: Number of kilobytes\n* `MEGA_BYTES`: Number of megabytes\n* `PERCENTAGE`: Percentage in scale [0,1]\n* `PERCENTAGE_100`: Percentage in scale [0,100]\n* `PERCENTAGE_NO_CAPPING`: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* `PERCENTAGE_100_NO_CAPPING`: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* `LATENCY`: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* `NANOS`: Time in nanoseconds\n* `MILLIS`: Time in milliseconds\n* `MICROS`: Time in microseconds\n* `SECONDS`: Time in seconds\n* `RATE`: Number of occurrences per second\n* `BYTE_RATE`: Number of bytes per second\n* `UNDEFINED`: Metric value unit is not known\n"
          },
          "label": {
            "type": "string",
            "description": "The name of the metric. For example, `Call count`, `Erroneous calls`, `Service count` etc."
          },
          "metricId": {
            "type": "string",
            "description": "The unique id of the metric. For example, `calls`, `erroneousCalls`, `latency` etc."
          },
          "pathToValueInBeacon": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 1
          },
          "tagName": {
            "type": "string"
          }
        },
        "required": [
          "aggregations",
          "beaconTypes",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "MobileAppMonitoringMetricsConfiguration": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "description": "Set aggregation that can be applied to a series of values. Eg: `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "If the granularity is set you will get data points with the specified granularity in seconds. Default: `1000` milliseconds"
          },
          "metric": {
            "type": "string",
            "description": "Set a particular metric, eg: `latency`."
          },
          "numeratorTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "MobileAppTimeThreshold": {
        "type": "object",
        "description": "The type of threshold to define the criteria when the event and alert triggers and resolves.",
        "discriminator": {
          "mapping": {
            "userImpactOfViolationsInSequence": "#/components/schemas/UserImpactMobileAppTimeThreshold",
            "violationsInPeriod": "#/components/schemas/ViolationsInPeriodMobileAppTimeThreshold",
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceMobileAppTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "MonitoringState": {
        "type": "object",
        "properties": {
          "hasEntities": {
            "type": "boolean"
          },
          "hostCount": {
            "type": "integer",
            "format": "int32"
          },
          "serverlessCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MultipleScriptsConfiguration": {
        "type": "object",
        "properties": {
          "bundle": {
            "type": "string"
          },
          "scriptFile": {
            "type": "string"
          }
        }
      },
      "NewApplicationConfig": {
        "type": "object",
        "properties": {
          "accessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND",
              "DEFAULT"
            ]
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "scope": {
            "type": "string",
            "enum": [
              "INCLUDE_NO_DOWNSTREAM",
              "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
              "INCLUDE_ALL_DOWNSTREAM"
            ]
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "accessRules",
          "boundaryScope",
          "label",
          "scope"
        ]
      },
      "NewBusinessPerspectiveConfig": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 300,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        }
      },
      "NewManualServiceConfig": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "existingServiceId": {
            "type": "string"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "unmonitoredServiceName": {
            "type": "string"
          }
        },
        "required": [
          "tagFilterExpression"
        ]
      },
      "Occurrence": {
        "type": "object",
        "description": "Time window of the Maintence Window configuration occurrences.",
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "Office365Integration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "OneTimeMaintenanceWindow": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MaintenanceConfigScheduling"
          }
        ],
        "required": [
          "duration",
          "start",
          "type"
        ]
      },
      "OpsgenieIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "alias": {
                "type": "string"
              },
              "apiKey": {
                "type": "string"
              },
              "region": {
                "type": "string",
                "enum": [
                  "US",
                  "EU"
                ]
              },
              "tags": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "apiKey",
          "id",
          "kind",
          "name",
          "region"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "by": {
            "type": "string",
            "description": "If the granularity is set to `1` you can use the metric name eg. `latency.p95` to order by that value."
          },
          "collation": {
            "type": "string",
            "description": "Language code used for sorting. Ignored for infrastructure queries."
          },
          "direction": {
            "type": "string",
            "description": "The order in which results will be sorted, either `ASC` for ascending or `DESC` for descending.",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "required": [
          "by",
          "direction"
        ]
      },
      "PagerdutyIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "serviceIntegrationKey": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "serviceIntegrationKey"
        ]
      },
      "PaginatedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "Page number for a specific page in the results. For example, if you'd like to retrieve the 5th page out of 10 pages, the value would be 5.",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "Set the number of items you want to return with one query. Eg: if you want to retrieve 10 items, the value would be 10.",
            "maximum": 200,
            "minimum": 1
          }
        }
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "secured": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "name",
          "type",
          "valueType"
        ]
      },
      "ParameterValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "PathParameterHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "name",
          "type"
        ]
      },
      "PhysicalContext": {
        "type": "object",
        "properties": {
          "cloudfoundry": {
            "$ref": "#/components/schemas/CloudfoundryPhysicalContext"
          },
          "cluster": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "container": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "host": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/KubernetesPhysicalContext"
          },
          "process": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "PluginResult": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "plugin": {
            "type": "string"
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trigger": {
            "$ref": "#/components/schemas/Trigger"
          },
          "typeConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeConfiguration"
            }
          }
        },
        "required": [
          "id",
          "name",
          "trigger",
          "typeConfigurations"
        ]
      },
      "PolicyRunnable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "runConfiguration": {
            "$ref": "#/components/schemas/RunConfiguration"
          },
          "type": {
            "type": "string",
            "enum": [
              "action",
              "workflow"
            ]
          }
        },
        "required": [
          "id",
          "runConfiguration",
          "type"
        ]
      },
      "PostSnapshotsResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Detail information for requested snapshots.",
            "items": {
              "$ref": "#/components/schemas/SnapshotItem"
            }
          },
          "notFoundSnapshotsIds": {
            "type": "array",
            "description": "Snapshot ids for snapshots that could not be retrieved.",
            "items": {
              "type": "string",
              "description": "Snapshot ids for snapshots that could not be retrieved."
            }
          }
        }
      },
      "Problem": {
        "type": "object",
        "properties": {
          "fixSuggestion": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "problemText": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "id"
        ]
      },
      "PrometheusWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "receiver": {
                "type": "string"
              },
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "RecurrentMaintenanceWindow": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MaintenanceConfigScheduling"
          },
          {
            "type": "object",
            "properties": {
              "rrule": {
                "type": "string"
              },
              "timezoneId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "duration",
          "rrule",
          "start",
          "type"
        ]
      },
      "Release": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationScope"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceScope"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "name",
          "start"
        ]
      },
      "ReleaseScope": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          }
        }
      },
      "ReleaseWithMetadata": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseScope"
            },
            "writeOnly": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "RollingTimeWindow": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeWindow"
          }
        ],
        "required": [
          "duration",
          "durationUnit"
        ]
      },
      "RuleInput": {
        "type": "object",
        "properties": {
          "inputKind": {
            "type": "string",
            "enum": [
              "METRIC",
              "SNAPSHOT_FIELD",
              "EVENT",
              "DERIVED_METRIC",
              "METRIC_PATTERN"
            ]
          },
          "inputName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "inputKind",
          "inputName"
        ]
      },
      "RuleWithThresholdApplicationAlertRule": {
        "type": "object",
        "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "thresholdOperator": {
            "type": "string",
            "enum": [
              ">",
              ">=",
              "<",
              "<="
            ]
          },
          "thresholds": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Threshold"
            }
          }
        },
        "required": [
          "rule",
          "thresholdOperator",
          "thresholds"
        ]
      },
      "RuleWithThresholdInfraAlertRule": {
        "type": "object",
        "description": "A list of rules where each rule is associated with multiple thresholds and their corresponding severity levels. This enables more complex alert configurations with validations to ensure consistent and logical threshold-severity combinations.",
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/InfraAlertRule"
          },
          "thresholdOperator": {
            "type": "string",
            "enum": [
              ">",
              ">=",
              "<",
              "<="
            ]
          },
          "thresholds": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Threshold"
            }
          }
        },
        "required": [
          "rule",
          "thresholdOperator",
          "thresholds"
        ]
      },
      "RunConfiguration": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionConfiguration"
            }
          }
        },
        "required": [
          "actions"
        ]
      },
      "SSLCertificateConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "daysRemainingCheck": {
                "type": "integer",
                "format": "int32",
                "maximum": 365,
                "minimum": 1
              },
              "hostname": {
                "type": "string",
                "maxLength": 2047,
                "minLength": 0
              },
              "port": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "required": [
          "daysRemainingCheck",
          "hostname",
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "SalesforceIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "bearerToken": {
                "type": "string"
              },
              "clientId": {
                "type": "string"
              },
              "clientSecret": {
                "type": "string"
              },
              "salesforceUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "clientId",
          "clientSecret",
          "id",
          "kind",
          "name",
          "salesforceUrl"
        ]
      },
      "ScopeBinding": {
        "type": "object",
        "properties": {
          "scopeId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "scopeRoleId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          }
        }
      },
      "SearchFieldResult": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fixedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keyword": {
            "type": "string"
          },
          "termType": {
            "type": "string"
          }
        }
      },
      "Service": {
        "type": "object",
        "description": "Returns a list of Services.",
        "properties": {
          "entityType": {
            "type": "string",
            "description": "Since, this is a Service, it will be of type `SERVICE`.",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique ID of the Service. Eg: `3feb3dcd206c166ef2b41c707e0cd38d7cd325aa`."
          },
          "label": {
            "type": "string",
            "description": "Name of the Service. Eg: `payment`."
          },
          "snapshotIds": {
            "type": "array",
            "description": "A unique identifier the metrics are assigned to.",
            "items": {
              "type": "string",
              "description": "A unique identifier the metrics are assigned to."
            },
            "uniqueItems": true
          },
          "technologies": {
            "type": "array",
            "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`",
            "items": {
              "type": "string",
              "description": "List of technologies: `Eg:[\"springbootApplicationContainer\"]`"
            },
            "uniqueItems": true
          },
          "types": {
            "type": "array",
            "description": "Shows types of Endpoints a Service can consist of. It may be one or more. Eg: `HTTP` `OPENTELEMETRY` can be in 1 Service.",
            "items": {
              "type": "string",
              "description": "Shows types of Endpoints a Service can consist of. It may be one or more. Eg: `HTTP` `OPENTELEMETRY` can be in 1 Service.",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ]
            },
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "label",
          "snapshotIds",
          "technologies",
          "types"
        ]
      },
      "ServiceConfig": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "matchSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceMatchingRule"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        },
        "required": [
          "enabled",
          "id",
          "label",
          "matchSpecification",
          "name"
        ]
      },
      "ServiceEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              },
              "serviceId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ServiceItem": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          }
        },
        "required": [
          "metrics",
          "service"
        ]
      },
      "ServiceLevelIndicator": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "availability": "#/components/schemas/AvailabilityBlueprintIndicator",
            "custom": "#/components/schemas/CustomBlueprintIndicator",
            "latency": "#/components/schemas/LatencyBlueprintIndicator"
          },
          "propertyName": "blueprint"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "blueprint": {
            "type": "string",
            "enum": [
              "latency",
              "availability",
              "custom"
            ]
          },
          "threshold": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string",
            "enum": [
              "eventBased",
              "timeBased"
            ]
          }
        }
      },
      "ServiceLevelObjectiveAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceLevelsAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string",
                "enum": [
                  "STATUS"
                ]
              }
            }
          }
        ]
      },
      "ServiceLevelObjectiveConfiguration": {
        "type": "object",
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "entity": {
            "$ref": "#/components/schemas/SloEntity"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "indicator": {
            "$ref": "#/components/schemas/ServiceLevelIndicator"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "target": {
            "type": "number",
            "format": "double",
            "exclusiveMaximum": false,
            "exclusiveMinimum": true,
            "maximum": 0.9999,
            "minimum": 0
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          }
        },
        "required": [
          "entity",
          "indicator",
          "name",
          "tags",
          "target",
          "timeWindow"
        ]
      },
      "ServiceLevelsAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "burnRateTimeWindows": {
            "$ref": "#/components/schemas/ServiceLevelsBurnRateTimeWindows"
          },
          "customPayloadFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/ServiceLevelsAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "sloIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "threshold": {
            "$ref": "#/components/schemas/StaticThreshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ServiceLevelsTimeThreshold"
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "name",
          "rule",
          "sloIds",
          "threshold",
          "timeThreshold"
        ]
      },
      "ServiceLevelsAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "ERROR_BUDGET": "#/components/schemas/ErrorBudgetAlertRule",
            "SERVICE_LEVELS_OBJECTIVE": "#/components/schemas/ServiceLevelObjectiveAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "alertType": {
            "type": "string"
          }
        },
        "required": [
          "alertType"
        ]
      },
      "ServiceLevelsBurnRateTimeWindows": {
        "type": "object",
        "properties": {
          "longTimeWindow": {
            "$ref": "#/components/schemas/AlertingTimeWindow"
          },
          "shortTimeWindow": {
            "$ref": "#/components/schemas/AlertingTimeWindow"
          }
        }
      },
      "ServiceLevelsTimeThreshold": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "integer",
            "format": "int64"
          },
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ServiceLevelseAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "burnRateTimeWindows": {
            "$ref": "#/components/schemas/ServiceLevelsBurnRateTimeWindows"
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean"
          },
          "rule": {
            "$ref": "#/components/schemas/ServiceLevelsAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32"
          },
          "sloIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "threshold": {
            "$ref": "#/components/schemas/StaticThreshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ServiceLevelsTimeThreshold"
          },
          "triggering": {
            "type": "boolean"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "id",
          "name",
          "rule",
          "sloIds",
          "threshold",
          "timeThreshold"
        ]
      },
      "ServiceMap": {
        "type": "object",
        "properties": {
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceMapConnection"
            },
            "uniqueItems": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedService"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "connections",
          "services"
        ]
      },
      "ServiceMapConnection": {
        "type": "object",
        "properties": {
          "calls": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorRate": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0
          },
          "from": {
            "type": "string"
          },
          "latency": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "to": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "ServiceMatchingRule": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ServiceMetricResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "ServiceNode": {
        "type": "object",
        "properties": {
          "endpoints": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EndpointNode"
            }
          },
          "inclusive": {
            "type": "boolean"
          },
          "serviceId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "endpoints",
          "serviceId"
        ]
      },
      "ServiceNowEnhancedIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "autoCloseIncidents": {
                "type": "boolean"
              },
              "enableSendInstanaNotes": {
                "type": "boolean"
              },
              "enableSendServiceNowActivities": {
                "type": "boolean"
              },
              "enableSendServiceNowWorkNotes": {
                "type": "boolean"
              },
              "instanaNotes": {
                "type": "boolean",
                "writeOnly": true
              },
              "instanaUrl": {
                "type": "string"
              },
              "manuallyClosedIncidents": {
                "type": "boolean"
              },
              "password": {
                "type": "string"
              },
              "resolutionOfIncident": {
                "type": "boolean"
              },
              "serviceNowActivities": {
                "type": "boolean",
                "writeOnly": true
              },
              "serviceNowUrl": {
                "type": "string"
              },
              "serviceNowWorkNotes": {
                "type": "boolean",
                "writeOnly": true
              },
              "tenant": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "password",
          "serviceNowUrl",
          "tenant",
          "unit",
          "username"
        ]
      },
      "ServiceNowIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "autoCloseIncidents": {
                "type": "boolean"
              },
              "password": {
                "type": "string"
              },
              "serviceNowUrl": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "password",
          "serviceNowUrl",
          "username"
        ]
      },
      "ServiceResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Returns a list of Services.",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "Page number you want to retrieve in a request / retrieved in a response."
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "number of elements retrieved in a single query."
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "description": "The number of results returned. For eg: If `items` has 5 elements, `totalhits` will be 5"
          }
        }
      },
      "ServiceScope": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "scopedTo": {
            "$ref": "#/components/schemas/ServiceScopedTo"
          }
        },
        "required": [
          "name"
        ]
      },
      "ServiceScopeWithMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scopedTo": {
            "$ref": "#/components/schemas/ServiceScopedToWithMetadata"
          }
        },
        "required": [
          "id"
        ]
      },
      "ServiceScopedTo": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationScope"
            },
            "maxItems": 10,
            "minItems": 1
          }
        },
        "required": [
          "applications"
        ]
      },
      "ServiceScopedToWithMetadata": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 1
          }
        },
        "required": [
          "applications"
        ]
      },
      "ServiceSimple": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "SessionSettings": {
        "type": "object",
        "properties": {
          "idleTimeInMillis": {
            "type": "integer",
            "format": "int64",
            "maximum": 28800000,
            "minimum": 60000
          },
          "tokenLifeTimeInMillis": {
            "type": "integer",
            "format": "int64",
            "maximum": 604800000,
            "minimum": 900000
          }
        }
      },
      "SlackIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "channel": {
                "type": "string"
              },
              "emojiRendering": {
                "type": "boolean"
              },
              "iconUrl": {
                "type": "string"
              },
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "SliConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "initialEvaluationTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "metricConfiguration": {
            "$ref": "#/components/schemas/MetricConfiguration"
          },
          "sliEntity": {
            "$ref": "#/components/schemas/SliEntity"
          },
          "sliName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "sliEntity",
          "sliName"
        ]
      },
      "SliConfigurationWithLastUpdated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "initialEvaluationTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "metricConfiguration": {
            "$ref": "#/components/schemas/MetricConfiguration"
          },
          "sliEntity": {
            "$ref": "#/components/schemas/SliEntity"
          },
          "sliName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "sliEntity",
          "sliName"
        ]
      },
      "SliEntity": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "application": "#/components/schemas/ApplicationSliEntity",
            "availability": "#/components/schemas/AvailabilitySliEntity",
            "websiteEventBased": "#/components/schemas/WebsiteEventBasedSliEntity",
            "websiteTimeBased": "#/components/schemas/WebsiteTimeBasedSliEntity"
          },
          "propertyName": "sliType"
        },
        "properties": {
          "sliType": {
            "type": "string"
          }
        },
        "required": [
          "sliType"
        ]
      },
      "SliReport": {
        "type": "object",
        "properties": {
          "errorBudgetRemaining": {
            "type": "integer",
            "format": "int64"
          },
          "fromTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "sli": {
            "type": "number",
            "format": "double"
          },
          "slo": {
            "type": "number",
            "format": "double"
          },
          "toTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorBudget": {
            "type": "integer",
            "format": "int64"
          },
          "violationDistribution": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "SloEntity": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "application": "#/components/schemas/ApplicationSloEntity",
            "website": "#/components/schemas/WebsiteSloEntity"
          },
          "propertyName": "type"
        },
        "properties": {
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SloReport": {
        "type": "object",
        "properties": {
          "errorAccumulationChart": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "errorBudgetRemainChart": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "errorBudgetRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "errorBudgetSpent": {
            "type": "integer",
            "format": "int32"
          },
          "errorBurnRate": {
            "type": "integer",
            "format": "int32"
          },
          "errorBurnRateChart": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "errorChart": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "fromTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "sli": {
            "type": "number",
            "format": "double"
          },
          "slo": {
            "type": "number",
            "format": "double"
          },
          "toTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorBudget": {
            "type": "integer",
            "format": "int32"
          },
          "violationDistribution": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "SlownessApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "required": [
          "aggregation",
          "metricName"
        ]
      },
      "SlownessWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          }
        ],
        "required": [
          "aggregation",
          "metricName"
        ]
      },
      "SnapshotItem": {
        "type": "object",
        "description": "Detail information for requested snapshots.",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "plugin": {
            "type": "string"
          },
          "snapshotId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SnapshotPreview": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "plugin": {
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "id"
        ]
      },
      "SnapshotResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotItem"
            }
          }
        }
      },
      "SoftwareUser": {
        "type": "object",
        "properties": {
          "container": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "snapshotId": {
            "type": "string"
          }
        }
      },
      "SoftwareVersion": {
        "type": "object",
        "properties": {
          "discoveryType": {
            "type": "string",
            "enum": [
              "NATIVE_SENSOR",
              "REMOTE_SENSOR",
              "PACKAGE_MANAGER",
              "OTHER"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "plugin": {
            "type": "string"
          },
          "softwareType": {
            "type": "string",
            "enum": [
              "DEPENDENCY",
              "RUNTIME",
              "DATABASE",
              "MESSAGING",
              "PLATFORM",
              "PACKAGE",
              "OS",
              "CACHE",
              "API_GATEWAY",
              "OTHER"
            ]
          },
          "usedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoftwareUser"
            },
            "uniqueItems": true
          },
          "vendor": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "discoveryType",
          "name",
          "plugin",
          "softwareType",
          "usedBy",
          "vendor",
          "version"
        ]
      },
      "SourceMapFileBlob": {
        "type": "object",
        "properties": {
          "blobIndex": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "sizeOnDisk": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SourceMapFileMeta": {
        "type": "object",
        "properties": {
          "blobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceMapFileBlob"
            }
          },
          "format": {
            "type": "string"
          },
          "meta": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "sizeOnDisk": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "JS_MAP",
              "JS",
              "R8PG_MAP",
              "DWARF"
            ]
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "format",
          "type",
          "url"
        ]
      },
      "SourceMapUploadConfig": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceMapFileMeta"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "metadata"
        ]
      },
      "Span": {
        "type": "object",
        "properties": {
          "batchSelfTime": {
            "type": "integer",
            "format": "int64"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "calculatedSelfTime": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "callId": {
            "type": "string"
          },
          "childSpans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Span"
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "destination": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "foreignParentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isSynthetic": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ENTRY",
              "EXIT",
              "INTERMEDIATE"
            ]
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StackTraceItem"
            }
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "callId",
          "childSpans",
          "data",
          "id",
          "kind",
          "label",
          "name",
          "stackTrace"
        ]
      },
      "SpanExcerpt": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "databaseIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseIntegration"
            }
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "foreignParentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ENTRY",
              "EXIT",
              "INTERMEDIATE"
            ]
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StackTraceItem"
            }
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "data",
          "id",
          "kind",
          "name",
          "stackTrace"
        ]
      },
      "SpanRelation": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            },
            "uniqueItems": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "physicalContext": {
            "$ref": "#/components/schemas/PhysicalContext"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          }
        },
        "required": [
          "applications"
        ]
      },
      "SpecificJsErrorsWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "metricName",
          "operator"
        ]
      },
      "SplunkIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "token",
          "url"
        ]
      },
      "StackTraceItem": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        }
      },
      "StackTraceLine": {
        "type": "object",
        "properties": {
          "column": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "file": {
            "type": "string"
          },
          "line": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "name": {
            "type": "string"
          },
          "translationExplanation": {
            "type": "string"
          },
          "translationStatus": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          }
        },
        "required": [
          "file"
        ]
      },
      "StaticBaselineThresholdRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "baseline": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              },
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              },
              "seasonality": {
                "type": "string",
                "enum": [
                  "WEEKLY",
                  "DAILY"
                ]
              }
            }
          }
        ],
        "required": [
          "seasonality"
        ]
      },
      "StaticStringField": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomPayloadField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Custom value for static type custom payload"
              }
            }
          }
        ],
        "required": [
          "key",
          "value"
        ]
      },
      "StaticThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "lastUpdated": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "value": {
                "type": "number",
                "format": "double",
                "minimum": 0
              }
            }
          }
        ],
        "required": [
          "operator"
        ]
      },
      "StaticThresholdRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "minimum": 0
              }
            }
          }
        ]
      },
      "StatusCodeApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "statusCodeEnd": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              },
              "statusCodeStart": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              }
            }
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "StatusCodeMobileAppAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "metricName",
          "operator",
          "value"
        ]
      },
      "StatusCodeWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "properties": {
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "metricName",
          "operator",
          "value"
        ]
      },
      "SyntheticAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the synthetic alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "description": "Name of the synthetic alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "syntheticTestIds": {
            "type": "array",
            "description": "IDs of the synthetic tests that this Smart Alert configuration is applied to.",
            "items": {
              "type": "string",
              "description": "IDs of the synthetic tests that this Smart Alert configuration is applied to."
            },
            "uniqueItems": true
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "name",
          "rule",
          "syntheticTestIds",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "SyntheticAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the synthetic alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "id": {
            "type": "string",
            "description": "ID of this Synthetic Alert Config. ",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time of the initial revision.",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the synthetic alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is read-only. Read-only access restricts modification of the config."
          },
          "rule": {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "syntheticTestIds": {
            "type": "array",
            "description": "IDs of the synthetic tests that this Smart Alert configuration is applied to.",
            "items": {
              "type": "string",
              "description": "IDs of the synthetic tests that this Smart Alert configuration is applied to."
            },
            "uniqueItems": true
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "id",
          "name",
          "rule",
          "syntheticTestIds",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "SyntheticAlertRule": {
        "type": "object",
        "description": "Indicates the type of rule this alert configuration is about.",
        "discriminator": {
          "mapping": {
            "failure": "#/components/schemas/FailureSyntheticAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "alertType": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "SyntheticCallConfig": {
        "type": "object",
        "properties": {
          "customRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "defaultRulesEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "customRules"
        ]
      },
      "SyntheticCallRule": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean"
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        },
        "required": [
          "matchSpecification",
          "name"
        ]
      },
      "SyntheticCallWithDefaultsConfig": {
        "type": "object",
        "properties": {
          "customRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "defaultRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            }
          },
          "defaultRulesEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "customRules",
          "defaultRules"
        ]
      },
      "SyntheticCredential": {
        "type": "object",
        "properties": {
          "applicationLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "applications": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "credentialName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "credentialValue": {
            "type": "string"
          },
          "mobileAppLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "mobileApps": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "websiteLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "websites": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          }
        },
        "required": [
          "credentialName",
          "credentialValue"
        ]
      },
      "SyntheticGeoPoint": {
        "type": "object",
        "properties": {
          "cityName": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "cityName",
          "countryName",
          "latitude",
          "longitude"
        ]
      },
      "SyntheticLocation": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/SyntheticLocationConfiguration"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "displayLabel": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "geoPoint": {
            "$ref": "#/components/schemas/SyntheticGeoPoint"
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "locationType": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "observedAt": {
            "type": "integer",
            "format": "int64"
          },
          "playbackCapabilities": {
            "$ref": "#/components/schemas/SyntheticPlaybackCapabilities"
          },
          "popVersion": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          },
          "status": {
            "type": "string"
          },
          "totalTests": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "geoPoint",
          "label",
          "locationType",
          "playbackCapabilities"
        ]
      },
      "SyntheticLocationConfiguration": {
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "tenantType": {
            "type": "string",
            "enum": [
              "Multi",
              "Single"
            ]
          }
        }
      },
      "SyntheticMetricConfiguration": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "description": "Set aggregation that can be applied to a series of values. Eg: `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "If the granularity is set you will get data points with the specified granularity in seconds. Default: `1000` milliseconds"
          },
          "metric": {
            "type": "string",
            "description": "Set a particular metric, eg: `latency`."
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "SyntheticMetricTagGroup": {
        "type": "object",
        "properties": {
          "groupbyTag": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ]
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "SyntheticPlaybackCapabilities": {
        "type": "object",
        "properties": {
          "browserType": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "chrome",
                "firefox"
              ]
            }
          },
          "syntheticType": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "browserType",
          "syntheticType"
        ]
      },
      "SyntheticTest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "applicationId": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "applicationLabel": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "applicationLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "applications": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "configuration": {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "locationDisplayLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mobileAppLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "mobileApps": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "playbackMode": {
            "type": "string",
            "enum": [
              "Simultaneous",
              "Staggered"
            ]
          },
          "tenantId": {
            "type": "string"
          },
          "testFrequency": {
            "type": "integer",
            "format": "int32",
            "maximum": 1440,
            "minimum": 1
          },
          "websiteLabels": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          },
          "websites": {
            "type": "array",
            "description": "(Private Preview)",
            "items": {
              "type": "string",
              "description": "(Private Preview)"
            }
          }
        },
        "required": [
          "active",
          "configuration",
          "label",
          "locations",
          "testFrequency"
        ]
      },
      "SyntheticTimeThreshold": {
        "type": "object",
        "description": "The type of threshold to define the criteria when the event and alert triggers and resolves.",
        "discriminator": {
          "mapping": {
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceSyntheticTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          },
          "violationsCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 12,
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "SyntheticTypeConfiguration": {
        "type": "object",
        "description": "Synthetic test configuration that is unique to a synthetic type. Valid types are BrowserScript,\nHTTPAction, HTTPScript, SSLCertificate, WebpageAction, and WebpageScript.",
        "discriminator": {
          "mapping": {
            "BrowserScript": "#/components/schemas/BrowserScriptConfiguration",
            "DNSAction": "#/components/schemas/DNSActionConfiguration",
            "HTTPAction": "#/components/schemas/HttpActionConfiguration",
            "HTTPScript": "#/components/schemas/HttpScriptConfiguration",
            "NotConfigured": "#/components/schemas/EmptyConfiguration",
            "SSLCertificate": "#/components/schemas/SSLCertificateConfiguration",
            "WebpageAction": "#/components/schemas/WebpageActionConfiguration",
            "WebpageScript": "#/components/schemas/WebpageScriptConfiguration"
          },
          "propertyName": "syntheticType"
        },
        "properties": {
          "markSyntheticCall": {
            "type": "boolean"
          },
          "retries": {
            "type": "integer",
            "format": "int32",
            "maximum": 2,
            "minimum": 0
          },
          "retryInterval": {
            "type": "integer",
            "format": "int32",
            "maximum": 10,
            "minimum": 1
          },
          "syntheticType": {
            "type": "string",
            "enum": [
              "BrowserScript",
              "DNSAction",
              "HTTPAction",
              "HTTPScript",
              "SSLCertificate",
              "WebpageAction",
              "WebpageScript",
              "NotConfigured"
            ]
          },
          "timeout": {
            "type": "string"
          }
        },
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "SyntheticsEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "locationIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              },
              "syntheticTestId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SystemRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "systemRuleId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "systemRuleId"
        ]
      },
      "SystemRuleLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Tag": {
        "type": "object",
        "description": "List of queryable tags available in a tagTree. Eg: `call.erroneous`.\nConsider these tags as attributes of a tagTree. Eg: `Call` tagTree has have `Erroneous`, `Call name`, `Latency` etc as attributes.\n",
        "properties": {
          "aliases": {
            "type": "array",
            "description": "List of other names that can refer to this tag\n",
            "items": {
              "type": "string",
              "description": "List of other names that can refer to this tag\n"
            },
            "uniqueItems": true
          },
          "canApplyToDestination": {
            "type": "boolean",
            "description": "Whether the tag is available for destination nor not.\nIf source and destination is false, it means the tag is independent of source and destination. Eg: of such tag is `call.http.path`.\n"
          },
          "canApplyToSource": {
            "type": "boolean",
            "description": "Whether the tag is available for source or not.\nIf source and destination is false, it means the tag is independent of source and destination. Eg: of such tag is `call.http.path`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the tag if it is provided."
          },
          "idTag": {
            "type": "boolean",
            "description": "Whether the Tag is a unique ID or not.\nEg: `idTag` for `endpoint.id` is true but for `call.rpc.method` it is false.\n"
          },
          "label": {
            "type": "string",
            "description": "The name of the tag which is seen in the UI. Eg: `Call name`",
            "maxLength": 256,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "description": "The name of the tag. Eg: `call.name`"
          },
          "type": {
            "type": "string",
            "description": "The data type of the tag. Eg: `call.name` accepts `STRING` value.",
            "enum": [
              "BOOLEAN",
              "STRING",
              "NUMBER",
              "STRING_SET",
              "STRING_LIST",
              "KEY_VALUE_PAIR",
              "KEY_NUMBER_PAIR"
            ]
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "TagCatalog": {
        "type": "object",
        "properties": {
          "tagTree": {
            "type": "array",
            "description": "The name of the tag dataset (tagTree) which can contain one or more tags as its attributes or children. Eg: `Call`.\nConsider this as the root of the tree where it has tags as attributes or children.\n",
            "items": {
              "$ref": "#/components/schemas/TagTreeLevel"
            }
          },
          "tags": {
            "type": "array",
            "description": "List of queryable tags available in a tagTree. Eg: `call.erroneous`.\nConsider these tags as attributes of a tagTree. Eg: `Call` tagTree has have `Erroneous`, `Call name`, `Latency` etc as attributes.\n",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "required": [
          "tagTree",
          "tags"
        ]
      },
      "TagFilter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          {
            "type": "object",
            "properties": {
              "entity": {
                "type": "string",
                "description": "SOURCE or DESTINATION tag in case of a call tag. For Infrastructure, always set to NOT_APPLICABLE.",
                "enum": [
                  "NOT_APPLICABLE",
                  "DESTINATION",
                  "SOURCE"
                ]
              },
              "key": {
                "type": "string",
                "description": "Tag key in case of a key/value tag.",
                "maxLength": 512,
                "minLength": 0
              },
              "name": {
                "type": "string",
                "description": "Name of the tag.",
                "maxLength": 128,
                "minLength": 0
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ]
              },
              "value": {
                "type": "object",
                "description": "Tag value to filter on. Can be a string, number, or boolean value."
              }
            }
          }
        ],
        "required": [
          "entity",
          "name",
          "operator"
        ]
      },
      "TagFilterExpression": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          {
            "type": "object",
            "properties": {
              "elements": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TagFilterExpressionElement"
                }
              },
              "logicalOperator": {
                "type": "string",
                "description": "Set AND / OR",
                "enum": [
                  "AND",
                  "OR"
                ]
              }
            }
          }
        ],
        "required": [
          "elements",
          "logicalOperator"
        ]
      },
      "TagFilterExpressionElement": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "EXPRESSION": "#/components/schemas/TagFilterExpression",
            "TAG_FILTER": "#/components/schemas/TagFilter"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "TagMatcherDTO": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          {
            "type": "object",
            "properties": {
              "entity": {
                "type": "string",
                "enum": [
                  "NOT_APPLICABLE",
                  "DESTINATION",
                  "SOURCE"
                ]
              },
              "key": {
                "type": "string"
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "NOT_EQUAL",
                  "CONTAINS",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_EMPTY",
                  "IS_BLANK",
                  "NOT_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH",
                  "GREATER_OR_EQUAL_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "LESS_THAN",
                  "GREATER_THAN"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "entity",
          "key",
          "operator"
        ]
      },
      "TagTreeLevel": {
        "type": "object",
        "description": "The name of the tag dataset (tagTree) which can contain one or more tags as its attributes or children. Eg: `Call`.\nConsider this as the root of the tree where it has tags as attributes or children.\n",
        "properties": {
          "children": {
            "type": "array",
            "description": "Children tags of tagTree",
            "items": {
              "$ref": "#/components/schemas/TagTreeNode"
            }
          },
          "description": {
            "type": "string",
            "description": "The description provided, if any.",
            "maxLength": 512,
            "minLength": 0
          },
          "icon": {
            "type": "string",
            "description": "Each tag has an Icon which can be seen on the drop down list in Unbounded Analytics.\nIf there is an icon, there will be a string associated with it.\nEg: For for all `TAG` under `Call` tagTreeNode, the `icon` value is `lib_application_call`.\n",
            "maxLength": 128,
            "minLength": 0
          },
          "label": {
            "type": "string",
            "description": "The name of the tagTreeNode. Eg: `Commonly Used`, `Application`.",
            "maxLength": 128,
            "minLength": 0
          },
          "queryable": {
            "type": "boolean"
          },
          "scoreBoost": {
            "type": "integer",
            "format": "int32",
            "description": "By default it is `null` if it is not set explictily by IBM Instana.\nThe purpose of this parameter is to rank the tagTree. For eg: some set of tags are frequently used.\nTags under `Commonly used` is frequently used, so it will come up on top of the drop down list of `Query Builder` in `Unbounded Analytics`.\nHigher the scoreBoost, higher the ranking.\n"
          },
          "type": {
            "type": "string",
            "description": "Type would be either `LEVEL` or `TAG` depending on whether the tag has any child tags or not respectively."
          }
        },
        "required": [
          "children",
          "label"
        ]
      },
      "TagTreeNode": {
        "type": "object",
        "description": "Children tags of tagTree",
        "discriminator": {
          "mapping": {
            "LEVEL": "#/components/schemas/TagTreeLevel",
            "TAG": "#/components/schemas/TagTreeTag"
          },
          "propertyName": "type"
        },
        "properties": {
          "icon": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type would be either `LEVEL` or `TAG` depending on whether the tag has any child tags or not respectively."
          }
        }
      },
      "TagTreeTag": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagTreeNode"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "maxLength": 512,
                "minLength": 0
              },
              "hidden": {
                "type": "boolean",
                "description": "If true, the tag will not be available for query in Unbounded Analytics."
              },
              "icon": {
                "type": "string",
                "maxLength": 128,
                "minLength": 0
              },
              "label": {
                "type": "string",
                "description": "The name of the tagTreeNode. Eg: `Call Error Message`, `Endpoint Name`.",
                "maxLength": 128,
                "minLength": 0
              },
              "queryable": {
                "type": "boolean",
                "description": "queryable property can have 3 states which will be reflected in the drop down list in `Query Builder` of `Unbounded Analytics` of Instana UI:\n   - true: the tag has been seen by IBM Instana and must be shown.\n   - false: the tag could have been processed, but has not been seen by IBM Instana and could be hidden.\n   - null: the tag has not been processed and should be shown.\nThe purpose is to make it easier for customers to find the right tags in drop down list\n"
              },
              "scoreBoost": {
                "type": "integer",
                "format": "int32",
                "description": "By default it is `null` if it is not set explictily by IBM Instana.\nThe purpose of this parameter is to rank the Tag. For eg: tags are frequently used within the tagTree\nFor eg, assume there are 8 tags under `Commonly Used`. IBM Instana can set the ranking for each of these tags within `Commonly Used`.\nHigher the scoreBoost, higher the ranking.\n"
              },
              "tagName": {
                "type": "string",
                "maxLength": 128,
                "minLength": 0
              }
            }
          }
        ],
        "required": [
          "label",
          "tagName"
        ]
      },
      "TestCommonProperties": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "applicationId": {
            "type": "string"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applicationLabel": {
            "type": "string"
          },
          "applicationLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "getWebsiteLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "locationDisplayLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationStatusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationStatus"
            }
          },
          "mobileApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mobileApplicationLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "websiteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "websiteLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          }
        },
        "required": [
          "active",
          "frequency",
          "id",
          "label",
          "type"
        ]
      },
      "TestResult": {
        "type": "object",
        "properties": {
          "testResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResultItem"
            }
          },
          "testResultItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResultItem"
            },
            "writeOnly": true
          }
        }
      },
      "TestResultCommonProperties": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "customTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "locationDisplayLabel": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "testCommonProperties": {
            "$ref": "#/components/schemas/TestCommonProperties"
          },
          "testId": {
            "type": "string"
          },
          "testName": {
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "testId"
        ]
      },
      "TestResultDetailData": {
        "type": "object",
        "properties": {
          "har": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "imageFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "logFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "logs": {
            "type": "string"
          },
          "subtransactionAvgMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "subtransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResultSubtransaction"
            }
          },
          "testId": {
            "type": "string"
          },
          "testResultId": {
            "type": "string"
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "TestResultItem": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "locationId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "mobileApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceId": {
            "type": "string"
          },
          "testId": {
            "type": "string"
          },
          "testName": {
            "type": "string"
          },
          "websiteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "testId"
        ]
      },
      "TestResultListItem": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "testResultCommonProperties": {
            "$ref": "#/components/schemas/TestResultCommonProperties"
          }
        },
        "required": [
          "metrics",
          "testResultCommonProperties"
        ]
      },
      "TestResultListResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResultListItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "TestResultMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "testId": {
            "type": "string"
          },
          "testResultId": {
            "type": "string"
          }
        },
        "required": [
          "testId"
        ]
      },
      "TestResultSubtransaction": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "required": [
          "metrics",
          "properties"
        ]
      },
      "Threshold": {
        "type": "object",
        "description": "Indicates the type of threshold this alert rule is evaluated on.",
        "discriminator": {
          "mapping": {
            "adaptiveBaseline": "#/components/schemas/AdaptiveBaseline",
            "historicBaseline": "#/components/schemas/HistoricBaseline",
            "staticThreshold": "#/components/schemas/StaticThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              ">",
              ">=",
              "<",
              "<="
            ]
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "operator",
          "type"
        ]
      },
      "ThresholdRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "properties": {
              "aggregation": {
                "type": "string",
                "enum": [
                  "sum",
                  "avg",
                  "min",
                  "max",
                  "absolute_diff",
                  "relative_diff"
                ]
              },
              "conditionOperator": {
                "type": "string",
                "enum": [
                  ">",
                  ">=",
                  "<",
                  "<=",
                  "=",
                  "!="
                ]
              },
              "conditionValue": {
                "type": "number",
                "format": "double"
              },
              "metricName": {
                "type": "string",
                "maxLength": 512,
                "minLength": 0
              },
              "metricPattern": {
                "$ref": "#/components/schemas/MetricPattern"
              },
              "rollup": {
                "type": "integer",
                "format": "int64"
              },
              "window": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "required": [
          "conditionOperator"
        ]
      },
      "ThroughputApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "ThroughputMobileAppAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "ThroughputWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          }
        ],
        "required": [
          "metricName"
        ]
      },
      "TimeFrame": {
        "type": "object",
        "properties": {
          "to": {
            "type": "integer",
            "format": "int64",
            "description": "end of timeframe expressed as the Unix epoch time in milliseconds. Eg: `ISO 8601` standard time `2024-06-27T05:05:55.615Z` can be represented as `1719464755615` in Unix epoch time in milliseconds."
          },
          "windowSize": {
            "type": "integer",
            "format": "int64",
            "description": "windowSize in milliseconds",
            "maximum": 2678400000,
            "minimum": 0
          }
        }
      },
      "TimeWindow": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "fixed": "#/components/schemas/FixedTimeWindow",
            "rolling": "#/components/schemas/RollingTimeWindow"
          },
          "propertyName": "type"
        },
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "durationUnit": {
            "type": "string",
            "enum": [
              "millisecond",
              "second",
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "duration",
          "durationUnit",
          "type"
        ]
      },
      "Topology": {
        "type": "object",
        "properties": {
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphEdge"
            }
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphNode"
            }
          }
        }
      },
      "Trace": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "erroneous": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "TraceActivityTreeNodeDetails": {
        "type": "object",
        "properties": {
          "batchSelfTime": {
            "type": "integer",
            "format": "int64"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "destination": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "id": {
            "type": "string"
          },
          "isSynthetic": {
            "type": "boolean",
            "writeOnly": true
          },
          "label": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpanExcerpt"
            },
            "uniqueItems": true
          },
          "minSelfTime": {
            "type": "integer",
            "format": "int64"
          },
          "networkTime": {
            "type": "integer",
            "format": "int64"
          },
          "source": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpanExcerpt"
            },
            "maxItems": 2,
            "minItems": 1,
            "uniqueItems": true
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "synthetic": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "label",
          "logs",
          "spans"
        ]
      },
      "TraceDownloadResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTraceDownloadResultItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "TraceGroupsItem": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "TraceGroupsResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraceGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "TraceImpactApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "requests": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              }
            }
          }
        ]
      },
      "TraceItem": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "trace": {
            "$ref": "#/components/schemas/Trace"
          }
        },
        "required": [
          "cursor",
          "trace"
        ]
      },
      "TraceResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraceItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "Trigger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "customEvent",
              "builtinEvent",
              "applicationSmartAlert",
              "globalApplicationSmartAlert",
              "websiteSmartAlert",
              "infraSmartAlert",
              "mobileAppSmartAlert",
              "syntheticsSmartAlert",
              "logSmartAlert",
              "sloSmartAlert"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "TupleSeverityThreshold": {
        "type": "object",
        "properties": {
          "t1": {
            "type": "string",
            "enum": [
              "WARNING",
              "CRITICAL"
            ]
          },
          "t2": {
            "$ref": "#/components/schemas/Threshold"
          }
        }
      },
      "TypeConfiguration": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/Condition"
          },
          "name": {
            "type": "string",
            "enum": [
              "automatic",
              "manual"
            ]
          },
          "runnable": {
            "$ref": "#/components/schemas/PolicyRunnable"
          }
        },
        "required": [
          "name",
          "runnable"
        ]
      },
      "UnsupportedHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "properties": {
              "unsupportedType": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "type"
        ]
      },
      "UpdatedBusinessPerspectiveConfig": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 300,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        }
      },
      "UsageResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsageResultItems"
            }
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UsageResultItems": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sims": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserBasicResult": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "fullName",
          "id"
        ]
      },
      "UserImpactMobileAppTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "impactMeasurementMethod": {
                "type": "string",
                "enum": [
                  "AGGREGATED",
                  "PER_WINDOW"
                ]
              },
              "userPercentage": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": true,
                "maximum": 1,
                "minimum": 0
              },
              "users": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              }
            }
          }
        ],
        "required": [
          "impactMeasurementMethod"
        ]
      },
      "UserImpactWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "impactMeasurementMethod": {
                "type": "string",
                "enum": [
                  "AGGREGATED",
                  "PER_WINDOW"
                ]
              },
              "userPercentage": {
                "type": "number",
                "format": "double",
                "exclusiveMaximum": false,
                "exclusiveMinimum": true,
                "maximum": 1,
                "minimum": 0
              },
              "users": {
                "type": "integer",
                "format": "int32",
                "minimum": 1
              }
            }
          }
        ],
        "required": [
          "impactMeasurementMethod"
        ]
      },
      "UserResult": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "groupCount": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "lastLoggedIn": {
            "type": "integer",
            "format": "int64"
          },
          "tfaEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "fullName",
          "id"
        ]
      },
      "UsersResult": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationResult"
            },
            "uniqueItems": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResult"
            },
            "uniqueItems": true
          }
        }
      },
      "ValidatedAlertingChannelInputInfo": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "entityId": {
            "type": "string"
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "incident",
                "critical",
                "warning",
                "change",
                "online",
                "offline",
                "agent_monitoring_issue",
                "cve_issue",
                "none"
              ]
            },
            "maxItems": 6,
            "minItems": 0,
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "selectedEvents": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "Alert",
              "WebsiteSmartAlert",
              "MobileSmartAlert",
              "ApplicationSmartAlert",
              "GlobalApplicationSmartAlert",
              "SyntheticSmartAlert",
              "InfraSmartAlert",
              "ServiceLevelSmartAlert"
            ]
          }
        },
        "required": [
          "id",
          "label",
          "type"
        ]
      },
      "ValidatedAlertingConfiguration": {
        "type": "object",
        "properties": {
          "alertChannelNames": {
            "type": "array",
            "description": "Set of Alert Channel names added in the Alert Configuration.",
            "items": {
              "type": "string",
              "description": "Set of Alert Channel names added in the Alert Configuration."
            },
            "uniqueItems": true
          },
          "alertName": {
            "type": "string",
            "description": "Name of the Alert Configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "applicationNames": {
            "type": "array",
            "description": "Set of Application Perspective names added in the Alert Configuration.",
            "items": {
              "type": "string",
              "description": "Set of Application Perspective names added in the Alert Configuration."
            },
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "description": "ID of the Alert Configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "description": "List of Alert Channel IDs added in this Alert Configuration.",
            "items": {
              "type": "string",
              "description": "List of Alert Channel IDs added in this Alert Configuration."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "invalid": {
            "type": "boolean",
            "description": "Flag to show whether the Alert Configuration is valid."
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time the configuration was last updated.",
            "minimum": 1
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "description": "Timer dictating how long the Alert Configuration will stay muted. A value of `0` means the Alert Configuration is currently enabled. Otherwise, the Alert Configuration is currently disabled (muted)."
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "ValidatedMaintenanceConfigV2WithStateAndOccurrence": {
        "type": "object",
        "properties": {
          "applicationNames": {
            "type": "array",
            "description": "Name set of the Application Perspectives within the scope of the Maintenance Window",
            "items": {
              "type": "string",
              "description": "Name set of the Application Perspectives within the scope of the Maintenance Window"
            },
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "description": "ID of the Maintenance Window configuration.",
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean",
            "description": "Boolean flag that tells if the Dynamic Focus Query(DFQ) is invalid."
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Maintenance Window configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "occurrence": {
            "$ref": "#/components/schemas/Occurrence"
          },
          "paused": {
            "type": "boolean",
            "description": "Boolean flag to determine if the Maintenance Window configuration is paused or still live."
          },
          "query": {
            "type": "string",
            "description": "Dynamic Focus Query that determines the scope of the Maintenance Window configuration.",
            "maxLength": 2048,
            "minLength": 0
          },
          "scheduling": {
            "$ref": "#/components/schemas/MaintenanceConfigScheduling"
          },
          "state": {
            "type": "string",
            "description": "State of the Maintenance Window, it can be: UNSCHEDULED, SCHEDULED, ACTIVE, PAUSED, EXPIRED.",
            "enum": [
              "UNSCHEDULED",
              "SCHEDULED",
              "ACTIVE",
              "PAUSED",
              "EXPIRED"
            ]
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilterExpressionEnabled": {
            "type": "boolean",
            "description": "Boolean flag to determine if the tagFilterExpression is enabled."
          }
        },
        "required": [
          "id",
          "name",
          "occurrence",
          "query",
          "scheduling"
        ]
      },
      "ValidatedMaintenanceConfigWithStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 0
          },
          "status": {
            "type": "string",
            "enum": [
              "UNSCHEDULED",
              "SCHEDULED",
              "ACTIVE",
              "FINISHED",
              "PAUSED"
            ]
          },
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query",
          "status"
        ]
      },
      "VictorOpsIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "routingKey": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "apiKey",
          "id",
          "kind",
          "name",
          "routingKey"
        ]
      },
      "ViolationsInPeriodApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "integer",
                "format": "int32",
                "maximum": 12,
                "minimum": 1
              }
            }
          }
        ]
      },
      "ViolationsInPeriodMobileAppTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "integer",
                "format": "int32",
                "maximum": 12,
                "minimum": 1
              }
            }
          }
        ]
      },
      "ViolationsInPeriodWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "integer",
                "format": "int32",
                "maximum": 12,
                "minimum": 1
              }
            }
          }
        ]
      },
      "ViolationsInSequenceApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          }
        ]
      },
      "ViolationsInSequenceInfraTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/InfraTimeThreshold"
          }
        ]
      },
      "ViolationsInSequenceLogTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LogTimeThreshold"
          }
        ]
      },
      "ViolationsInSequenceMobileAppTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppTimeThreshold"
          }
        ]
      },
      "ViolationsInSequenceSyntheticTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        ]
      },
      "ViolationsInSequenceWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          }
        ]
      },
      "WatsonAIOpsWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "headers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "WebexTeamsWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "webhookUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "WebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "headers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "webhookUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrls"
        ]
      },
      "WebpageActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ]
              },
              "recordVideo": {
                "type": "boolean"
              },
              "url": {
                "type": "string",
                "maxLength": 2047,
                "minLength": 0
              }
            }
          }
        ],
        "required": [
          "markSyntheticCall",
          "syntheticType",
          "url"
        ]
      },
      "WebpageScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ]
              },
              "recordVideo": {
                "type": "boolean"
              },
              "script": {
                "type": "string",
                "maxLength": 1048576,
                "minLength": 0
              }
            }
          }
        ],
        "required": [
          "markSyntheticCall",
          "script",
          "syntheticType"
        ]
      },
      "Website": {
        "type": "object",
        "properties": {
          "appName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "WebsiteAlertConfig": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the website alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the website alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          },
          "websiteId": {
            "type": "string",
            "description": "ID of the website that this Smart Alert configuration is applied to.",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold",
          "websiteId"
        ]
      },
      "WebsiteAlertConfigWithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the website alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of this Website Alert Config. ",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time of the initial revision.",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the website alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is read-only. Read-only access restricts modification of the config."
          },
          "rule": {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          },
          "websiteId": {
            "type": "string",
            "description": "ID of the website that this Smart Alert configuration is applied to.",
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "id",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold",
          "websiteId"
        ]
      },
      "WebsiteAlertRule": {
        "type": "object",
        "description": "Indicates the type of rule this alert configuration is about.",
        "discriminator": {
          "mapping": {
            "customEvent": "#/components/schemas/CustomEventWebsiteAlertRule",
            "slowness": "#/components/schemas/SlownessWebsiteAlertRule",
            "specificJsError": "#/components/schemas/SpecificJsErrorsWebsiteAlertRule",
            "statusCode": "#/components/schemas/StatusCodeWebsiteAlertRule",
            "throughput": "#/components/schemas/ThroughputWebsiteAlertRule"
          },
          "propertyName": "alertType"
        },
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "alertType": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "WebsiteApdexEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          {
            "type": "object",
            "properties": {
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ]
              }
            }
          }
        ],
        "required": [
          "beaconType",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "WebsiteBeaconGroupsItem": {
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "earliestTimestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "WebsiteBeaconGroupsResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteBeaconGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "WebsiteBeaconResult": {
        "type": "object",
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteBeaconsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "WebsiteBeaconTagGroup": {
        "type": "object",
        "properties": {
          "groupbyTag": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ]
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "WebsiteBeaconsItem": {
        "type": "object",
        "properties": {
          "beacon": {
            "$ref": "#/components/schemas/WebsiteMonitoringBeacon"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          }
        },
        "required": [
          "beacon",
          "cursor"
        ]
      },
      "WebsiteEventBasedSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "properties": {
              "badEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ]
              },
              "goodEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "websiteId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "badEventFilterExpression",
          "beaconType",
          "goodEventFilterExpression"
        ]
      },
      "WebsiteEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "properties": {
              "probableRootCause": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "writeOnly": true
              },
              "websiteId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "WebsiteMetricResult": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        }
      },
      "WebsiteMonitoringBeacon": {
        "type": "object",
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "accurateTimingsAvailable": {
            "type": "boolean"
          },
          "agentVersion": {
            "type": "string"
          },
          "appCacheTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "backendTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "backendTraceId": {
            "type": "string"
          },
          "batchSize": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "beaconId": {
            "type": "string"
          },
          "browserName": {
            "type": "string"
          },
          "browserVersion": {
            "type": "string"
          },
          "cacheInteraction": {
            "type": "string"
          },
          "childrenTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "city": {
            "type": "string"
          },
          "clockSkew": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "componentStack": {
            "type": "string"
          },
          "connectionType": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          },
          "continentCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "cspBlockedUri": {
            "type": "string"
          },
          "cspColumnNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cspDisposition": {
            "type": "string"
          },
          "cspEffectiveDirective": {
            "type": "string"
          },
          "cspLineNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cspOriginalPolicy": {
            "type": "string"
          },
          "cspSample": {
            "type": "string"
          },
          "cspSourceFile": {
            "type": "string"
          },
          "cumulativeLayoutShift": {
            "type": "number",
            "format": "double"
          },
          "customEventName": {
            "type": "string"
          },
          "customMetric": {
            "type": "number",
            "format": "double"
          },
          "decodedBodySize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "deprecations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 16,
            "minItems": 0,
            "uniqueItems": true
          },
          "deviceType": {
            "type": "string"
          },
          "dnsTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "domTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "encodedBodySize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "errorId": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorType": {
            "type": "string"
          },
          "firstContentfulPaintTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "firstInputDelayTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "firstPaintTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "frontendTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "graphqlOperationName": {
            "type": "string"
          },
          "graphqlOperationType": {
            "type": "string"
          },
          "httpCallAsynchronous": {
            "type": "boolean"
          },
          "httpCallCorrelationAttempted": {
            "type": "boolean"
          },
          "httpCallHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "httpCallMethod": {
            "type": "string"
          },
          "httpCallOrigin": {
            "type": "string"
          },
          "httpCallPath": {
            "type": "string"
          },
          "httpCallStatus": {
            "type": "integer",
            "format": "int32",
            "maximum": 599,
            "minimum": -1
          },
          "httpCallUrl": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "interactionNextPaint": {
            "type": "integer",
            "format": "int64"
          },
          "internalMeta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "largestContentfulPaintTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "locationOrigin": {
            "type": "string"
          },
          "locationPath": {
            "type": "string"
          },
          "locationUrl": {
            "type": "string"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "onLoadTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "osName": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "pageLoadId": {
            "type": "string"
          },
          "parentBeaconId": {
            "type": "string"
          },
          "parsedStackTrace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsStackTraceLine"
            },
            "maxItems": 64,
            "minItems": 0
          },
          "phase": {
            "type": "string"
          },
          "processingTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "redirectTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "requestTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "resourceType": {
            "type": "string"
          },
          "responseTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "sessionId": {
            "type": "string"
          },
          "snippetVersion": {
            "type": "string"
          },
          "sslTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "stackTrace": {
            "type": "string"
          },
          "stackTraceParsingStatus": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "stackTraceReadability": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "subdivision": {
            "type": "string"
          },
          "subdivisionCode": {
            "type": "string"
          },
          "tcpTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "transferSize": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "type": {
            "type": "string"
          },
          "unloadTime": {
            "type": "integer",
            "format": "int64",
            "minimum": -1
          },
          "useFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 15,
            "minItems": 0
          },
          "userEmail": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userIp": {
            "type": "string"
          },
          "userLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0
          },
          "userName": {
            "type": "string"
          },
          "websiteId": {
            "type": "string"
          },
          "websiteLabel": {
            "type": "string"
          },
          "windowHeight": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          },
          "windowHidden": {
            "type": "boolean"
          },
          "windowWidth": {
            "type": "integer",
            "format": "int32",
            "minimum": -1
          }
        },
        "required": [
          "beaconId",
          "locationOrigin",
          "locationUrl",
          "pageLoadId",
          "type",
          "websiteId",
          "websiteLabel"
        ]
      },
      "WebsiteMonitoringMetricDescription": {
        "type": "object",
        "properties": {
          "aggregations": {
            "type": "array",
            "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
            "items": {
              "type": "string",
              "description": "The types of aggregations that can be applied to a series of values.\nFor example, `P25` is 25th percentile. Note that not all aggregations are available for metrics.\nFor example, `Trace count` has only `SUM` as an aggregation whereas `Call Count` has two aggregations, `SUM` and `PER_SECOND`.\n",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND",
                "INCREASE"
              ]
            },
            "uniqueItems": true
          },
          "beaconTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "description": "The preselected aggregation for a metric. For example, for `Call latency` the default aggregation is `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the metric. For example, for `Call count` metric, the description would be something like `Number of received calls`"
          },
          "formatter": {
            "type": "string",
            "description": "* `NUMBER`: Generic number\n* `BYTES`: Number of bytes\n* `KILO_BYTES`: Number of kilobytes\n* `MEGA_BYTES`: Number of megabytes\n* `PERCENTAGE`: Percentage in scale [0,1]\n* `PERCENTAGE_100`: Percentage in scale [0,100]\n* `PERCENTAGE_NO_CAPPING`: Percentage in scale [0,1] but value could exceed 1 for example when metric is aggregated\n* `PERCENTAGE_100_NO_CAPPING`: Percentage in scale [0,100] but value could exceed 100 for example when metric is aggregated\n* `LATENCY`: Time in milliseconds, with value of 0 should not be considered a a strict 0, but considered as < 1ms\n* `NANOS`: Time in nanoseconds\n* `MILLIS`: Time in milliseconds\n* `MICROS`: Time in microseconds\n* `SECONDS`: Time in seconds\n* `RATE`: Number of occurrences per second\n* `BYTE_RATE`: Number of bytes per second\n* `UNDEFINED`: Metric value unit is not known\n"
          },
          "label": {
            "type": "string",
            "description": "The name of the metric. For example, `Call count`, `Erroneous calls`, `Service count` etc."
          },
          "metricId": {
            "type": "string",
            "description": "The unique id of the metric. For example, `calls`, `erroneousCalls`, `latency` etc."
          },
          "pathToValueInBeacon": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 1
          },
          "tagName": {
            "type": "string"
          }
        },
        "required": [
          "aggregations",
          "beaconTypes",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "WebsiteMonitoringMetricsConfiguration": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "description": "Set aggregation that can be applied to a series of values. Eg: `MEAN`.",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND",
              "INCREASE"
            ]
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "If the granularity is set you will get data points with the specified granularity in seconds. Default: `1000` milliseconds"
          },
          "metric": {
            "type": "string",
            "description": "Set a particular metric, eg: `latency`."
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "WebsiteSloEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SloEntity"
          },
          {
            "type": "object",
            "properties": {
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ]
              },
              "websiteId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "beaconType",
          "websiteId"
        ]
      },
      "WebsiteTimeBasedSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "properties": {
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ]
              },
              "filterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "websiteId": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "beaconType"
        ]
      },
      "WebsiteTimeThreshold": {
        "type": "object",
        "description": "The type of threshold to define the criteria when the event and alert triggers and resolves.",
        "discriminator": {
          "mapping": {
            "userImpactOfViolationsInSequence": "#/components/schemas/UserImpactWebsiteTimeThreshold",
            "violationsInPeriod": "#/components/schemas/ViolationsInPeriodWebsiteTimeThreshold",
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceWebsiteTimeThreshold"
          },
          "propertyName": "type"
        },
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "Widget": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "id": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "maximum": 12,
            "minimum": 1
          },
          "x": {
            "type": "integer",
            "format": "int32",
            "maximum": 11,
            "minimum": 0
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        },
        "required": [
          "config",
          "id",
          "type"
        ]
      },
      "WithMetadata": {
        "type": "object",
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "description": "List of IDs of alert channels defined in Instana. Can be left empty.",
            "items": {
              "type": "string",
              "description": "List of IDs of alert channels defined in Instana. Can be left empty."
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "completeTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the creation time of this revision.",
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "description": "Custom payload fields to send additional information in the alert notifications. Can be left empty.",
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the mobile app alert configuration. Used as a template for the description of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is enabled."
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "description": "The evaluation granularity used for detection of violations of the defined threshold. Defines the size of the tumbling window used.",
            "enum": [
              60000,
              300000,
              600000,
              900000,
              1200000,
              1800000
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of this Mobile App Alert Config. ",
            "maxLength": 64,
            "minLength": 0
          },
          "initialCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Unix timestamp representing the time of the initial revision.",
            "minimum": 1
          },
          "mobileAppId": {
            "type": "string",
            "description": "ID of the mobile app that this Smart Alert configuration is applied to.",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "description": "Name of the mobile app alert configuration. Used as a template for the title of alert/event notifications triggered by this Smart Alert configuration.",
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "description": "Flag to indicate whether or not the configuration is read-only. Read-only access restricts modification of the config."
          },
          "rule": {
            "$ref": "#/components/schemas/MobileAppAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "The severity of the alert when triggered, which is either 5 (Warning), or 10 (Critical).",
            "maximum": 10,
            "minimum": 5
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/MobileAppTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "description": "Optional flag to indicate whether an Incident is also triggered or not."
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "id",
          "mobileAppId",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "WithResolvedName": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Author"
          },
          {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ZChatOpsIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "properties": {
              "bearerAuthToken": {
                "type": "string"
              },
              "channels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 1,
                "minItems": 0
              },
              "zchatOpsIncidentsUrl": {
                "type": "string"
              }
            }
          }
        ],
        "required": [
          "bearerAuthToken",
          "id",
          "kind",
          "name",
          "zchatOpsIncidentsUrl"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "authorization",
        "scheme": "apiToken",
        "type": "apiKey",
        "description": "## Example\n\n```bash\ncurl --request GET \\\n  --url https://test-instana.instana.io/api/application-monitoring/catalog/metrics \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx'\n```\n"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Websites & Mobile Apps",
      "tags": [
        "Website Metrics",
        "Website Catalog",
        "Website Analyze",
        "Website Configuration",
        "Mobile App Metrics",
        "Mobile App Catalog",
        "Mobile App Analyze",
        "Mobile App Configuration"
      ]
    },
    {
      "name": "Applications",
      "tags": [
        "Application Metrics",
        "Application Resources",
        "Application Catalog",
        "Application Analyze",
        "Application Settings",
        "Application Topology",
        "Application Alert Configuration",
        "Global Application Alert Configuration"
      ]
    },
    {
      "name": "Infrastructure",
      "tags": [
        "Infrastructure Analyze",
        "Infrastructure Metrics",
        "Infrastructure Resources",
        "Infrastructure Catalog",
        "Infrastructure Topology"
      ]
    },
    {
      "name": "Synthetic Monitoring",
      "tags": [
        "Synthetic Catalog",
        "Synthetic Settings",
        "Synthetic Test Playback Results",
        "Synthetic Alert Configuration"
      ]
    },
    {
      "name": "Events",
      "tags": [
        "Events",
        "Event Settings"
      ]
    },
    {
      "name": "Automation",
      "tags": [
        "Action Catalog",
        "Action History",
        "Policies"
      ]
    },
    {
      "name": "Service Levels",
      "tags": [
        "SLI Settings",
        "SLI Report",
        "Apdex Settings",
        "Apdex Report"
      ]
    },
    {
      "name": "Settings",
      "tags": [
        "Custom Dashboards",
        "User",
        "Groups",
        "Audit Log",
        "API Token",
        "Maintenance Configuration",
        "Synthetic Calls",
        "Session Settings",
        "Automation Settings",
        "Authentication"
      ]
    },
    {
      "name": "Open Beta Features",
      "tags": [
        "Infrastructure Analyze",
        "Service Levels Objective(SLO) Configurations",
        "Service Levels Objective(SLO) Report",
        "Service Levels Alert Configuration"
      ]
    },
    {
      "name": "Closed Beta Features",
      "tags": [
        "Infrastructure Alert Configuration"
      ]
    },
    {
      "name": "Instana",
      "tags": [
        "Releases",
        "Host Agent",
        "Health",
        "Usage"
      ]
    }
  ]
}
