{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "email": "support@instana.com",
      "name": "Â© Instana",
      "url": "http://instana.com"
    },
    "termsOfService": "https://www.instana.com/terms-of-use/",
    "title": "Introduction to Instana public APIs",
    "version": "1.250.634",
    "x-logo": {
      "altText": "instana logo",
      "backgroundColor": "#FAFBFC",
      "url": "header-logo.svg"
    },
    "description": "Searching for answers and best pratices? Check our [IBM Instana Community](https://community.ibm.com/community/user/aiops/communities/community-home?CommunityKey=58f324a3-3104-41be-9510-5b7c413cc48f).\n\n## Agent REST API\n### Event SDK REST Web Service\nUsing the Event SDK REST Web Service, it is possible to integrate custom health checks and other event sources into Instana. Each one running the Instana Agent can be used to feed in manual events. The agent has an endpoint which listens on `http://localhost:42699/com.instana.plugin.generic.event` and accepts the following JSON via a POST request:\n\n```json\n{\n    \"title\": <string>,\n    \"text\": <string>,\n    \"severity\": <integer> , -1, 5 or 10\n    \"timestamp\": <integer>, timestamp in milliseconds from epoch\n    \"duration\": <integer>, duration in milliseconds\n}\n```\n\n*Title* and *text* are used for display purposes.\n\n*Severity* is an optional integer of -1, 5 and 10. A value of -1 or EMPTY will generate a Change. A value of 5 will generate a *warning Issue*, and a value of 10 will generate a *critical Issue*.\n\nWhen absent, the event is treated as a change without severity. *Timestamp* is the timestamp of the event, but it is optional, in which case the current time is used. *Duration* can be used to mark a timespan for the event. It also is optional, in which case the event will be marked as \"instant\" rather than \"from-to.\"\n\nThe endpoint also accepts a batch of events, which then need to be given as an array:\n\n```json\n[\n    {\n    // event as above\n    },\n    {\n    // event as above\n    }\n]\n```\n\n#### Ruby Example\n\n```ruby\nduration = (Time.now.to_f * 1000).floor - deploy_start_time_in_ms\npayload = {}\npayload[:title] = 'Deployed MyApp'\npayload[:text] = 'pglombardo deployed MyApp@revision'\npayload[:duration] = duration\n\nuri = URI('http://localhost:42699/com.instana.plugin.generic.event')\nreq = Net::HTTP::Post.new(uri, 'Content-Type' => 'application/json')\nreq.body = payload.to_json\nNet::HTTP.start(uri.hostname, uri.port) do |http|\n    http.request(req)\nend\n```\n\n#### Curl Example\n\n```bash\ncurl -XPOST http://localhost:42699/com.instana.plugin.generic.event -H \"Content-Type: application/json\" -d '{\"title\":\"Custom API Events \", \"text\": \"Failure Redeploying Service Duration\", \"duration\": 5000, \"severity\": -1}'\n```\n\n#### PowerShell Example\n\nFor Powershell you can either use the standard Cmdlets `Invoke-WebRequest` or `Invoke-RestMethod`. The parameters to be provided are basically the same.\n\n```bash\nInvoke-RestMethod\n    -Uri http://localhost:42699/com.instana.plugin.generic.event\n    -Method POST\n    -Body '{\"title\":\"PowerShell Event \", \"text\": \"You used PowerShell to create this event!\", \"duration\": 5000, \"severity\": -1}'\n```\n\n```bash\nInvoke-WebRequest\n    -Uri http://localhost:42699/com.instana.plugin.generic.event\n    -Method Post\n    -Body '{\"title\":\"PowerShell Event \", \"text\": \"You used PowerShell to create this event!\", \"duration\": 5000, \"severity\": -1}'\n```\n### Trace SDK REST Web Service\nUsing the Trace SDK REST Web Service, it is possible to integrate Instana into any application regardless of language. Each active Instana Agent can be used to feed manually captured traces into the Web Service, which can be joined with automatically captured traces or be completely separate. The Agent offers an endpoint that listens on `http://localhost:42699/com.instana.plugin.generic.trace` and accepts the following JSON via a POST request:\n\n```json\n{\n  \"spanId\": <string>,\n  \"parentId\": <string>,\n  \"traceId\": <string>,\n  \"timestamp\": <64 bit long>,\n  \"duration\": <64 bit long>,\n  \"name\": <string>,\n  \"type\": <string>,\n  \"error\": <boolean>,\n  \"data\": {\n    <string> : <string>\n  }\n}\n```\n\nspanId is the unique identifier for any particular span. The trace is defined by a root span, that is, a span that does not have a parentId. The traceId needs to be identical for all spans that belong to the same trace, and is allowed to be overlapping with a spanId. traceId, spanId and parentId are 64-bit unique values encoded as hex string like b0789916ff8f319f. Spans form a hierarchy by referencing the spanId of the parent as parentId. An example of a span hierarchy in a trace is shown below:\n\n```text\n  root (spanId=1, traceId=1, type=Entry)\n    child A (spanId=2, traceId=1, parentId=1, type=Exit)\n      child A (spanId=3, traceId=1, parentId=2, type=Entry)\n        child B (spanId=4, traceId=1, parentId=3, type=Exit)\n  child B (spanId=5, traceId=1, parentId=4, type=Entry)\n```\n\nThe timestamp and duration fields are in milliseconds. The timestamp must be the epoch timestamp coordinated to Coordinated Universal Time.\n\nThe name field can be any string that is used to visualize and group traces, and can contain any text. However, simplicity is recommended.\n\nThe type field is optional, when absent is treated as ENTRY. Options are ENTRY, EXIT, INTERMEDIATE, or EUM. Setting the type is important for the UI. It is assumed that after an ENTRY, child spans are INTERMEDIATE or EXIT. After an EXIT an ENTRY should follow. This is visualized as a remote call.\n\nThe data field is optional and can contain arbitrary key-value pairs. The behavior of supplying duplicate keys is unspecified.\n\nThe error field is optional and can be set to true to indicate an erroneous span.\n\nThe endpoint also accepts a batch of spans, which then need to be given as an array:\n\n```json\n[\n  {\n    // span as above\n  },\n  {\n    // span as above\n  }\n]\n```\n\nFor traces received via the Trace SDK Web Service the same rules regarding [Conversion and Service/Endpoint Naming](https://www.ibm.com/docs/en/obi/current?topic=references-java-trace-sdk#conversion-and-naming) are applied as for the Java Trace SDK. In particular these key-value pairs in data are used for naming: service, endpoint and call.name.\n\nNote: The optional [Instana Agent Service](https://www.ibm.com/docs/en/obi/current?topic=requirements-installing-host-agent-kubernetes#instana-agent-service) provided on Kubernetes via the Instana Agent Helm Chart is very useful in combination with the Trace Web SDK support, as it ensures that the data is pushed to the Instana Agent running on the same Kubernetes node, ensuring the Instana Agent can correctly fill in the infrastructure correlation data.\n\n#### Curl Example\n\nThe following example shows how to send to the host agent data about a matching ENTRY and EXIT call, which simulates a process that receives an HTTP GET request targeted to the https://orders.happyshop.com/my/service/asdasd URL and routes it to an upstream service at the https://crm.internal/orders/asdasd URL.\n\n```bash\n#!/bin/bash\n\ncurl -0 -v -X POST 'http://localhost:42699/com.instana.plugin.generic.trace' -H 'Content-Type: application/json; charset=utf-8' -d @- <<EOF\n[\n  {\n    \"spanId\": \"8165b19a37094800\",\n    \"traceId\": \"1368e0592a91fe00\",\n    \"timestamp\": 1591346182000,\n    \"duration\": 134,\n    \"name\": \"GET /my/service/asdasd\",\n    \"type\": \"ENTRY\",\n    \"error\": false,\n    \"data\": {\n      \"http.url\": \"https://orders.happyshop.com/my/service/asdasd\",\n      \"http.method\": \"GET\",\n      \"http.status_code\": 200,\n      \"http.path\": \"/my/service/asdasd\",\n      \"http.host\": \"orders.happyshop.com\"\n    }\n  },\n  {\n    \"spanId\": \"7ddf6b31b320cc00\",\n    \"parentId\": \"8165b19a37094800\",\n    \"traceId\": \"1368e0592a91fe00\",\n    \"timestamp\": 1591346182010,\n    \"duration\": 97,\n    \"name\": \"GET /orders/asdasd\",\n    \"type\": \"EXIT\",\n    \"error\": false,\n    \"data\": {\n      \"http.url\": \"https://crm.internal/orders/asdasd\",\n      \"http.method\": \"GET\",\n      \"http.status_code\": 200,\n      \"http.path\": \"/orders/asdasd\",\n      \"http.host\": \"crm.internal\"\n    }\n  }\n]\nEOF\n```\n\n#### Limitations\n\nAdhere to the following rate limits for the trace web service:\n\n- Maximum API calls/sec: 20  \n- Maximum payload per POST request: A span must not exceed 4 KiB. The request size must not exceed 4 MiB.  \n- Maximum batch size (spans/array): 1000  \n\n## Backend REST API\nThe Instana API allows retrieval and configuration of key data points. Among others, this API enables automatic reaction and further analysis of identified incidents as well as reporting capabilities.\n\nThe API documentation refers to two crucial parameters that you need to know about before reading further:\n\n- `base`: This is the base URL of a tenant unit, e.g. `https://test-example.instana.io`. This is the same URL that is used to access the Instana user interface.\n- `apiToken`: Requests against the Instana API require valid API tokens. An initial API token can be generated via the Instana user interface. Any additional API tokens can be generated via the API itself.\n\n### Example\nHere is an Example to use the REST API with Curl. First lets get all the available metrics with possible aggregations with a GET call.\n\n```bash\ncurl --request GET \\\n  --url https://test-instana.instana.io/api/application-monitoring/catalog/metrics \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx'\n```\n\nNext we can get every call grouped by the endpoint name that has an error count greater then zero. As a metric we could get the mean error rate for example.\n\n```bash\ncurl --request POST \\\n  --url https://test-instana.instana.io/api/application-monitoring/analyze/call-groups \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"group\":{\n      \"groupbyTag\":\"endpoint.name\"\n  },\n  \"tagFilters\":[\n  \t{\n  \t\t\"name\":\"call.error.count\",\n  \t\t\"value\":\"0\",\n  \t\t\"operator\":\"GREATER_THAN\"\n  \t}\n  ],\n  \"metrics\":[\n  \t{\n  \t\t\"metric\":\"errors\",\n  \t\t\"aggregation\":\"MEAN\"\n  \t}\n  ]\n  }'\n```\n\n\n### Rate Limiting\nA rate limit is applied to API usage. Up to 5,000 calls per hour can be made. How many remaining calls can be made and when this call limit resets, can inspected via three headers that are part of the responses of the API server.\n\n**X-RateLimit-Limit:** Shows the maximum number of calls that may be executed per hour.\n\n**X-RateLimit-Remaining:** How many calls may still be executed within the current hour.\n\n**X-RateLimit-Reset:** Time when the remaining calls will be reset to the limit. For compatibility reasons with other rate limited APIs, this date is not the date in milliseconds, but instead in seconds since 1970-01-01T00:00:00+00:00.\n\n## Generating REST API clients\n\nThe API is specified using the [OpenAPI v3](https://github.com/OAI/OpenAPI-Specification) (previously known as Swagger) format.\nYou can download the current specification at our [GitHub API documentation](https://instana.github.io/openapi/openapi.yaml).\n\nOpenAPI tries to solve the issue of ever-evolving APIs and clients lagging behind. Please make sure that you always use the latest version of the generator, as a number of improvements are regularly made.\nTo generate a client library for your language, you can use the [OpenAPI client generators](https://github.com/OpenAPITools/openapi-generator).\n\n### Go\nFor example, to generate a client library for Go to interact with our backend, you can use the following script; mind replacing the values of the `UNIT_NAME` and `TENANT_NAME` environment variables using those for your tenant unit:\n\n```bash\n#!/bin/bash\n\n### This script assumes you have the `java` and `wget` commands on the path\n\nexport UNIT_NAME='myunit' # for example: prod\nexport TENANT_NAME='mytenant' # for example: awesomecompany\n\n//Download the generator to your current working directory:\nwget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.3.1/openapi-generator-cli-4.3.1.jar -O openapi-generator-cli.jar --server-variables \"tenant=${TENANT_NAME},unit=${UNIT_NAME}\"\n\n//generate a client library that you can vendor into your repository\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g go \\\n    -o pkg/instana/openapi \\\n    --skip-validate-spec\n\n//(optional) format the Go code according to the Go code standard\ngofmt -s -w pkg/instana/openapi\n```\n\nThe generated clients contain comprehensive READMEs, and you can start right away using the client from the example above:\n\n```go\nimport instana \"./pkg/instana/openapi\"\n\n// readTags will read all available application monitoring tags along with their type and category\nfunc readTags() {\n\tconfiguration := instana.NewConfiguration()\n\tconfiguration.Host = \"tenant-unit.instana.io\"\n\tconfiguration.BasePath = \"https://tenant-unit.instana.io\"\n\n\tclient := instana.NewAPIClient(configuration)\n\tauth := context.WithValue(context.Background(), instana.ContextAPIKey, instana.APIKey{\n\t\tKey:    apiKey,\n\t\tPrefix: \"apiToken\",\n\t})\n\n\ttags, _, err := client.ApplicationCatalogApi.GetApplicationTagCatalog(auth)\n\tif err != nil {\n\t\tfmt.Fatalf(\"Error calling the API, aborting.\")\n\t}\n\n\tfor _, tag := range tags {\n\t\tfmt.Printf(\"%s (%s): %s\\n\", tag.Category, tag.Type, tag.Name)\n\t}\n}\n```\n\n### Java\nDownload the latest openapi generator cli:\n```\nwget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.3.1/openapi-generator-cli-4.3.1.jar -O openapi-generator-cli.jar\n```\n\nA list for calls for different java http client implementations, which creates a valid generated source code for our spec.\n```\n//Nativ Java HTTP Client\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8 --library native\n\n//Spring WebClient\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8,hideGenerationTimestamp=true --library webclient\n\n//Spring RestTemplate\njava -jar openapi-generator-cli.jar generate -i https://instana.github.io/openapi/openapi.yaml -g java -o pkg/instana/openapi --skip-validate-spec  -p dateLibrary=java8,hideGenerationTimestamp=true --library resttemplate\n\n```\n"
  },
  "servers": [
    {
      "description": "Instana Backend",
      "url": "https://{unit}-{tenant}.instana.io",
      "variables": {
        "tenant": {
          "default": "tenant",
          "description": "Customer tenant unit"
        },
        "unit": {
          "default": "unit",
          "description": "Customer tenant name"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Infrastructure Analyze",
      "description": "This endpoint group exposes the functions that are used by the Instana **Analyze Infrastructure** dashboards.\nTwo of the endpoints provide a [list of entity types](#operation/getAvailablePlugins) and [metrics for an entity type](#operation/getAvailableMetrics).\nIt is also possible to [search and filter entities](#operation/getEntities) and [aggregate metrics on similar entities](#operation/getEntityGroups).\n\n## Important notes\n\n### Prerequisites\n\nFor self-hosted installations, BeeInstana is required for this endpoint group.\nSee this [documentation for enabling BeeInstana](https://www.ibm.com/docs/en/instana-observability/current?topic=premises-installing-instana-backend-docker#beeinstana-metric-pipeline-beta).\n\n### Timeframe\n\n**timeFrame** As in the Instana dashboards, you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with specified granularity, a default granularity will be used for adjustment.\n\n### Metrics\n\n**metric** refers to the metric name. Query the [list of available metrics](#operation/getAvailableMetrics) for existing metrics on an entity type.\nThis is to be used when requesting metrics or when ordering by a metric. For **order.by**, `label` may also be used.\n\n### Filtering\n\nAs in the Instana dashboards, you can **filter by a tag**. Query the [infrastructure tag catalog](#operation/getInfrastructureCatalogMetrics) to retrieve a list of available tags."
    },
    {
      "name": "Infrastructure Metrics",
      "description": "This endpoint retrieves the metrics for infrastructure components.\r\n\r\n### Mandatory Parameters\r\n**plugin:** Plugins are entities' for which we collect metrics, for example : \"Host\", \"Cassandra node\", \"Cassandra Connection\".\r\n\r\nThe available plugins are depending on the system you are monitoring. Therefore you will need to [retrieve plugins](#operation/getInfrastructureCatalogPlugins) where we have data for you.\r\n\r\n**query or snapshotIds:** choose between dynamic focus query or [snapshotId](#operation/getSnapshots) (a unique identifier the metrics are assigned to)\r\n\r\nTo make the it easy to get started this endpoint has two modes that can be used for metrics retrieval:\r\n1. Search metrics with a query\r\n  You are using the [Dynamic Focus](https://docs.instana.io/core_concepts/dynamic_focus/) query to filter the result.\r\n  To get usable search parameters you can either query the search [catalog endpoint](#operation/getInfrastructureCatalogSearchFields) or use the UI\r\n\r\n1. Search for metrics for snapshotIds\r\n  For advanced use cases, pagination for example, its recommended to use fixed snapshotIds.\r\n\r\n**metrics:** Id of the exact metric you want to retrieve, eg. \"cpu.user\", \"clientrequests.read.mean\"\r\n\r\nOnce you have selected the plugin you can define up to five metrics you want to retrieve with the call.\r\nPlease use our [metrics catalog call](#operation/getInfrastructureCatalogMetrics) to get the available metrics for the selected plugin.\r\n\r\n### Optional Parameters\r\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\r\n```\r\n  windowSize           to\r\n     (ms)       (unix-timestamp)\r\n<----------------------|\r\n```\r\n\r\n**rollup:** Depending on the selected timeFrame its possible to selected the rollup.\r\n\r\nThe available rollup is depending on two factors:\r\n1. [Retention times](https://docs.instana.io/core_concepts/data_collection/#data-retention)\r\n\r\n\tFor example if you select a to timestamp that is 3 Weeks in the past the most accurate rollup you can query for would be 1min\r\n1. Size of the selected windowSize\r\n\r\n\tThe limitation is that we only return 600 Data points per call, thus if you select a windowSize of 1hour the most accurate rollup you can query for would be 5s\r\n\r\nValid rollups are:\r\n\r\n| rollup  | value |\r\n| ------------- | ------------- |\r\n| 1 second  | 1 |\r\n| 5 seconds  | 5  |\r\n| 1 minute  | 60 |\r\n| 5 minutes  | 300  |\r\n| 1 hour  | 3600  |\r\n\r\n\r\n### Defaults\r\n**timeframe:**\r\n```\r\n\"timeFrame\": {\r\n\t\"windowSize\": 60000,\r\n\t\"to\": {current timestamp}\r\n}\r\n```\r\n\r\n**rollup**: 1\r\n\r\n### Limits\r\n1000 Calls per Hour\r\n\r\nTo keep the response size reasonable the limit is set to 30 retrieved items. To implement pagination see [1]\r\n\r\nA maximum of 600 data points are returned per metric.\r\n\r\nYou can only retrieve metrics [above](https://docs.instana.io/core_concepts/dynamic_graph/) the selected Dynamic Focus filter. Work around can be found under [2]\r\n\r\nThe following example will return an empty result, because the selected plugin \"host\" is below the dynamic focus filter \"java\" :\r\n```\r\nquery=entity.selfType:java\r\nplugin=host\r\nmetric=cpu.steal\r\n```\r\n### Tips\r\n[1] **Pagination**\r\nSometimes the query you are interested in returns more than 30 items, you have to use the [find snapshots](#operation/getSnapshots) endpoint to get a full list of Ids for your query and then use the [metrics endpoint](#operation/getInfrastructureMetrics) with the returned snapshotIds\r\n\r\n\r\n[2] **Application filter**\r\nYou can work around the aforementioned limitation by querying one of the crosscutting entities like applications, services and endpoints. For the example above you could create an Application with jvm.version isPresent filter. And search Query then for the created application name\r\n```\r\nquery=entity.application.name:\"Java Applications\"\r\n```\r\n"
    },
    {
      "name": "Infrastructure Resources"
    },
    {
      "name": "Infrastructure Catalog",
      "description": "The endpoints of this group retrieve all available resources to query infrastructure metrics.\n"
    },
    {
      "name": "Infrastructure Topology"
    },
    {
      "name": "Application Metrics",
      "description": "The endpoints of this group retrieve the metrics for defined applications, discovered services and endpoints.\r\n### Mandatory Parameters\r\n\r\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\r\n1. *metric* select a particular metric to get a list of available metrics query the [catalog endpoint](#operation/getApplicationCatalogMetrics)\r\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getApplicationCatalogMetrics) gives you the metrics with the available aggregations.\r\n\r\n### Optional Parameters\r\n\r\n**metrics** Default you will get an aggregated metric with for the selected timeframe \r\n\r\n* *granularity* \r\n   * If it is not set you will get a an aggregated value for the selected timeframe\r\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\r\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\r\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\r\n   \r\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\r\n1. *page* select the page number you want to retrieve\r\n2. *pageSize* set the number of applications you want to return with one query\r\n\r\n**order** You can order the returned items alphanumerical by label, either ascending or descending\r\n1. *by* if the granularity is set to 1 you can use the metric name eg. \"latency.p95\" to order by that value\r\n1. *direction* either ascending or descending\r\n\r\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\r\n```\r\n  windowSize           to\r\n     (ms)       (unix-timestamp)\r\n<----------------------|\r\n```\r\n\r\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\r\n\r\nTo narrow down the result set you have four options to search for an application.\r\n\r\n**nameFilter | applicationId | serviceId | endpointId**\r\n\r\n* *nameFilter:* filter by name with \"contains\" semantic.\r\n\r\n* *applicationId:* search directly for an application by applicationId \r\n\r\n* *serviceId:* search for applications that include a particular service by serviceId\r\n\r\n* *endpointId:* search for applications that include a particular endpoint by endpointId\r\n\r\n### Defaults\r\n\r\n**metrics**\r\n* *granularity:* 1\r\n\r\n**order**\r\n* by application label ascending.\r\n\r\n**timeFrame**\r\n```\r\n\"timeFrame\": {\r\n\t\"windowSize\": 60000,\r\n\t\"to\": {current timestamp}\r\n}\r\n```\r\n**nameFilter | applicationId | serviceId | endpointId**\r\n* no filters are applied in the default call\r\n"
    },
    {
      "name": "Application Catalog",
      "description": "The endpoints of this group retrieve all available resources to query application metrics.\n"
    },
    {
      "name": "Application Resources"
    },
    {
      "name": "Application Analyze",
      "description": "The following four endpoints expose our analyze functionality.\nPart of this are two group endpoints to retrieve metrics for traces and calls rolled up and filtered individually. \nFurthermore you can [search and filter all traces](#operation/getTraces) and retrieve [all details](#operation/getTrace) attached to the trace.\n\n## Parameters\n### Mandatory Parameters (only for group Endpoints):\n**group** It is mandatory to select a tag by which the calls and traces are grouped for the distinct endpoint call\n* *groupByTag* select a tag by which the calls and traces are grouped \n  * a full list of available tags can be retrieved from the [application tag catalog](#operation/getApplicationTagCatalog)\n  * for the trace endpoint only two tags are reasonable and working: `trace.endpoint.name` and `trace.service.name` which indicate the entry endpoint or service for the trace\n* *groupByTagSecondLevelKey* tags of type KEY_VALUE_PAIR need a second parameter e.g for `kubernetes.deployment.label` you would need provide the label you want to groupBy here.\n\n### Optional Parameters\n**pagination**\n* *offset* set the starting point for the data retrieval\n* *retrievalSize* you set the number of returned values\n* *ingestionTime* if you want to paginate through your result set you are interested in having the data for a fixed time point, the results set has a `cursor` class that has a ingestionTime property that indicates what you have to enter here.\n**order**\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\n\n**tagFilters** As in the UI you able to filter your query by a tag. To get a list of all available tags you can query the [application tag catalog](#operation/getApplicationTagCatalog)\n* *name* The name of the tag as returned by the catalog\n* *value* The filter value of the tag, possible types are:\n  * \"STRING\" alphanumerical values, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n  * \"NUMBER\" numerical values, valid operators: \"EQUALS\", \"LESS_THAN\" \"GREATER_THAN\"\n  * \"KEY_VALUE_PAIR\" \n* *operator* one of the valid operators for the type of the selected tag\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric, available metrics in this context are\n   * Latency Mean\n   * Error Rate\n   * Traces Sum\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getApplicationCatalogMetrics) gives you the metrics with the available aggregations.\n3. *granularity* \n   * If it is not set you will get a an aggregated value for the selected timeframe\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n\n### Defaults:\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n"
    },
    {
      "name": "Application Settings"
    },
    {
      "name": "Application Topology"
    },
    {
      "name": "Website Metrics"
    },
    {
      "name": "Website Catalog",
      "description": "The endpoints of this group retrieve all available resources to query website metrics.\n"
    },
    {
      "name": "Website Configuration"
    },
    {
      "name": "Website Analyze",
      "description": "The following four endpoints expose our analyze functionality.\n\n## Mandatory Parameters :\n\n**type** \n\n**group (only for group Endpoints)** It is mandatory to select a tag by which the beacons are grouped for the distinct endpoint call\n* *groupByTag* select a tag by which the beacons are grouped \n  * a full list of available tags can be retrieved from the [website tag catalog](#operation/getWebsiteCatalogTags)\n* *groupByTagSecondLevelKey* tags of type KEY_VALUE_PAIR need a second parameter e.g for `beacon.meta` you would need provide the label you want to groupBy here.\n\n\n## Optional Parameters:\n\n**pagination**\n* *offset* set the starting point for the data retrieval\n* *retrievalSize* you set the number of returned values\n* *ingestionTime* if you want to paginate through your result set you are interested in having the data for a fixed time point, the results set has a `cursor` class that has a ingestionTime property that indicates what you have to enter here.\n\n**order**\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\n\n**tagFilterExpression** As in the UI you are able to filter your query using tags and operators such as `AND` and `OR`. To get a list of all available tags you can query the [tag catalog](#operation/getWebsiteCatalogTags)\n* *name* The name of the tag as returned by the catalog, e.g `beacon.meta`, `beacon.http.path`\n* *value* The filter value of the tag, possible types are:\n  * \"STRING\" alphanumerical values, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n  * \"NUMBER\" numerical values, valid operators: \"EQUALS\", \"LESS_THAN\" \"GREATER_THAN\"\n  * \"KEY_VALUE_PAIR\" of you are using meta tags `beacon.meta` you can filter for those by setting `yourMetaTagName=foo` in the value field, valid operators: \"EQUALS\", \"CONTAINS\", \"NOT_EQUAL\", \"NOT_CONTAIN\", \"NOT_EMPTY\",  \"IS_EMPTY\"\n* *operator* one of the valid operators for the type of the selected tag\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric, available metrics in this context are\n   * Latency Mean\n   * Error Rate\n2. *aggregation* depending on the selected metric different aggregations are available e.g. SUM, MEAN, P95. The aforementioned [catalog endpoint](#operation/getWebsiteCatalogMetrics) gives you the metrics with the available aggregations.\n3. *granularity* \n   * If it is not set you will get a an aggregated value for the selected timeframe\n   * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n \n\n## Defaults:\n\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n"
    },
    {
      "name": "Mobile App Metrics"
    },
    {
      "name": "Mobile App Catalog"
    },
    {
      "name": "Mobile App Configuration"
    },
    {
      "name": "Mobile App Analyze"
    },
    {
      "name": "Events"
    },
    {
      "name": "Event Settings"
    },
    {
      "name": "Application Alert Configuration",
      "description": "The API endpoints of this group can be used to manage Application alert configurations.\n\n## Parameters:\n\n- **id:** ID of the application alert config which needs to be updated.\n\n- **name:** Name for the application alert configuration.\n\n- **description:** Description for the application alert configuration.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **triggering:** Optional flag to indicate whether also an Incident is triggered or not.\n\n- **applications:** Selection of application, services and endpoints in scope.\n\n  The selection defines a tree of included or excluded sub entities. The defined `inclusive` flag defines whether this node and his child nodes are included (`inclusive: true`) or excluded (`inclusive: false`) by default. Empty selections or unnecessary selections are not allowed. \n\n  #### Example 1: Select an entire Application Perspective\n\n  To select the entire application with ID `<appId>` including all its services and endpoints, simply provide the following selection object:\n\n  ```json\n  \"applications\": {\n      \"<appId>\": {\n          \"applicationId\": \"<appId>\"\n      }\n  }\n  ```\n\n  Leaf nodes of the selection tree default to `true` if no `inclusive` value is defined.\n\n  #### Example 2: Specific selection of services and endpoints\n\n  To select not the entire application with ID `<appId>`, but only the entire serivces Service1 with ID `<service1>` and Service2 with ID `<service2>`, with the exception of endpoint `<endpoint2>` of Service2. And in addition, only Endpoint `<endpoint3>` of Service3 with id `<service3>`, then use the following selection:\n\n  ```json\n  \"applications\": {\n      \"<appId>\": {\n          \"applicationId\": \"<appId>\",\n          \"inclusive\": false,\n          \"services\": {\n              \"<service1>\": {\n                  \"serviceId\": \"<service1>\"\n              },\n              \"<service2>\": {\n                  \"serviceId\": \"<service2>\",\n                  \"inclusive\": true,\n                  \"endpoints\": {\n                      \"<endpoint2>\": {\n                          \"endpointId\": \"<endpoint2>\",\n                          \"inclusive\": false\n                      }\n                  }\n              },\n              \"<service3>\": {\n                  \"serviceId\": \"<service3>\",\n                  \"inclusive\": false,\n                  \"endpoints\": {\n                      \"<endpoint3>\": {\n                          \"endpointId\": \"<endpoint3>\",\n                          \"inclusive\": true\n                      }\n                  }\n              }\n          }\n      }\n  }\n  ``` \n\n- **boundaryScope:** Boundary scope of the Application Perspective\n\n- **tagFilterExpression:** Boolean expression of tag filters to define the scope of relevant calls.\n\n- **includeInternal:** Optional flag to indicate whether also internal calls are included in the scope or not. The default is `false`.\n\n- **includeSynthetic:** Optional flag to indicate whether also synthetic calls are included in the scope or not. The default is `false`.\n\n- **evaluationType:** The alert evaluation type of the alert configuration. For example, this allows to configure whether calls of the configured scope is aggregated to a single metric that is then considered for alerting (`\"PER_AP\"`), or whether each service of an Appliction Perspective is is evaluated individually (`\"PER_AP_SERVICE\"`).\n\n- **granularity:** The evaluation granularity used for detection of violations of the defined threshold. In other words, it defines the size of the tumbling window used.\n\n- **rule:** Indicates the type of rule this alert configuration is about.\n\n- **threshold:** Indicates the type of threshold this alert rule is evaluated on .\n\n- **timeThreshold:** Indicates the type of violation of the defined threshold.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n\n## Deprecated Parameters\n\n- **applicationId:** Unique ID of the Application Perspective. It is replaced by **applications**."
    },
    {
      "name": "Global Application Alert Configuration",
      "description": "The API endpoints of this group can be used to manage Global Application alert configurations.\n\n## Parameters:\n\nAll parameters and deprecated parameters are similar to Application Alert Configuration except **applications**\n\n- **applications:** Selection of applications, services and endpoints in scope. It allows more than one application to define a global rule across different Application Perspectives.\n\n  #### Example: Select multiple Application Perspectives\n\n  To select multiple applications with IDs `<appId1>`, `<appId2>` including all its services and endpoints, simply provide the following selection object:\n\n  ```json\n  \"applications\": {\n      \"<appId1>\": {\n          \"applicationId\": \"<appId1>\"\n      },\n      \"<appId2>\": {\n           \"applicationId\": \"<appId2>\"\n      }\n  }\n  ```\n"
    },
    {
      "name": "Infrastructure Alert Configuration"
    },
    {
      "name": "Synthetic Alert Configuration",
      "description": "The API endpoints of this group can be used to manage alert configurations for Synthetic Monitoring.\n\n## Parameters:\n\n- **id:** ID of the alert configuration.\n\n- **name:** Name for the synthetic alert configuration, which is used as the title of the event when triggered.\n\n- **description:** Description for the synthetic alert configuration, which is used as the detials of the triggerd event.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **syntheticTestIds:** List of synthetic test IDs this alert configuration is applied to. Check out APIs in [Synthetic Monitoring](#tag/Synthetic-Settings) to e.g. get a [list of all synthetic tests](#operation/getSyntheticTests) available.\n\n- **rule:** Indicates the type of rule this alert configuration is about. The only `alertType` available so far is `\"failure\"`, where the metric name `\"status\"` is expected. This boolean metric requires no threshold to be specified, because value of `status=0` indicates a test failure.\n\n- **timeThreshold:** Defines the triggering condition in time, such as how many consecutive test failures are required to open an event. Setting a higher value for `violationsCount` helps to reduce the number of alerts.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n\n"
    },
    {
      "name": "Host Agent",
      "description": "Endpoints of this group can be used to list and configure host agents. "
    },
    {
      "name": "User"
    },
    {
      "name": "Groups",
      "description": "Groups are used to permit individual users to perform specific actions and get visibility to an access scope. Each user can be assigned to multiple groups, every one coming with its associated permissions. In addition a group sets the access scope and you can configure the visible areas for the group members.\n\nWhen you are a member of multiple groups, your permissions have an additive effect.\n\nGranting access to certain entities within Instana (e.g. Applications, Kubernetes Clusters etc.) is done through a corresponding entry in the `permissionSet` payload.\n"
    },
    {
      "name": "Audit Log"
    },
    {
      "name": "API Token"
    },
    {
      "name": "Session Settings"
    },
    {
      "name": "Maintenance Configuration"
    },
    {
      "name": "Synthetic Calls"
    },
    {
      "name": "Releases"
    },
    {
      "name": "SLI Settings",
      "description": "## Deprecated Parameters\n**tagFilters** The list of tag filters. It is replaced by **tagFilterExpression**"
    },
    {
      "name": "SLI Report"
    },
    {
      "name": "Health"
    },
    {
      "name": "Custom Dashboards",
      "description": "You can use these API endpoints to manage custom dashboards. We recommend\nthat you leverage the `Edit as JSON` feature found within our user interface\nto construct the desired request payloads. Specifically to help you build\ncorrect widget configurations and access rules.\n\nTo identify the correct values for the `relatedId` field of the access rules,\nwe recommend using the `/api/custom-dashboard/shareable-users` and\n`/api/custom-dashboard/shareable-api-tokens` endpoints. These endpoints return\nour internal IDs for users and API tokens."
    },
    {
      "name": "Usage"
    },
    {
      "name": "Synthetic Catalog"
    },
    {
      "name": "Synthetic Settings",
      "description": "The API endpoints of this group can be used to manage Synthetic Locations and Synthetic Tests. \n\n## Synthetic Location Properties:\n- **id** Unique identifier of the location resource.\n- **label** Friendly name of the location.\n- **description** The description of the location.\n- **locationType** Indicates if the location is public or private.\n- **playbackCapability** The playback capabilities provided by this location resource.\n  The playbackCapability object has the following properties: \n  - **syntheticType** Different types of synthetic tests that can be executed at this location. \n    Possible values are HTTPAction, HTTPScript, BrowserScript, WebpageAction, WebpageScript, and DNSAction. \n    The values are corresponding to the syntheticType parameter available in the createSyntheticTest endpoint.\n  - **browserType** Different types of supported Web browsers when creating synthetic tests for  WebpageAction and WebpageScript. \n    Currently, only firefox is supported\n- **geoPoint** An object includes the longitude, latitude, country name, and city name properties of a location. \n- **popVersion** PoP's version\n- **customProperties** An object with name/value pairs to provide additional information of the Synthetic location.\n- **createdAt** The location created time, following RFC3339 standard.\n- **modifiedAt** The location modified time, following RFC3339 standard.\n- **observedAt** The timestamp when PoP requests a Synthetic test, following RFC3339 standard.\n\n## Synthetic Test Properties:\n- **id** Unique identifier of the Synthetic test resource.\n- **label** Friendly name of the Synthetic test resource.\n- **description** The description of the Synthetic test.\n- **active** Indicates if the Synthetic test is started or not. The default is true.\n- **applicationId** Unique identifier of the Application Perspective.\n- **configuration** An object which has two properties: syntheticType and the corresponding configuration object:\n    - **syntheticType** The type of the Synthetic test. Supported values are HTTPAction, HTTScript, BrowserScript, WebpageAction,\n      WebpageScript, and DNSAction. The locations assigned to execute this Synthetic\n      test must support this syntheticType, i.e. the location's playbackCapabilities property.\n    - **markSyntheticCall** Flag used to control if HTTP calls will be marked as synthetic calls/endpoints in Instana backend, so they can be ignored when calculating service and application KPIs, users can also check \"Hide Synthetic Calls\" checkbox to hide/show them in UI.\n    - **retries** An integer type from 0 to 2, 0 by default.\n      It indicates how many attempts (max 2) will be allowed\n      to get a successful connection (not necessarily a successful result).\n      Failures like socket hangups, gateway timeouts, and DNS lookup fails cause retires, but 404's 400's, do not.\n    - **retryInterval** The time interval between retries in seconds. The default is 1s, max is 10s.\n    - **timeout** The timeout to be used by the PoP playback engines running the test. Values in integer followed by time unit (ms, s, m). If timeout is not provided the playback engine will use its own timeout value.\n    - **XXXConfiguration** The configuration corresponding to the syntheticType. Configuration types are HTTPActionConfiguration, HTTPScriptConfiguration,\n      BrowserScriptConfiguration, WebpageActionConfiguration, WebpageScriptConfiguration, and DNSActionConfiguration. Right now, only HTTPActionConfiguration\n      and HTTPScriptConfiguration are supported.\n        - **HTTPActionConfiguration** has the following properties:\n            - **url** The URL is being tested. It is required.\n            - **syntheticType** Its value is HTTPAction. It is required.\n            - **operation** An operation being used must be one of GET, HEAD, OPTIONS, PATCH, POST, PUT, and DELETE. By default, it is GET.\n            - **headers** An object with header/value pairs\n                - **header** The header to be sent in operation. It should not contain the terminating ':' character.\n                - **value** The value of the header.\n            - **body** The body content to send with the operation.\n            - **validationString** An expression to be evaluated.\n            - **followRedirect** A boolean type, true by default; to allow redirect.\n            - **allowInsecure** A boolean type,  true by default; if set to true then allow insecure certificates\n              (expired, self-signed, etc).\n            - **expectStatus** An integer type, by default, the Synthetic passes for any 2XX status code.\n              This forces just one status code to cause a pass, including what would normally be a fail, for example, a 404.\n            - **expectJson** An optional object to be used to check against the test response object.\n            - **expectMatch** An optional regular expression string to be used to check the test response.\n            - **expectExists** An optional list of property labels used to check if they are present in the test response object.\n            - **expectNotEmpty** An optional list of property labels used to check if they are present in the test response object with a non-empty value.\n        - **HTTPScriptConfiguration** has the following properties:\n          - **script** The Javascript content, it is plain text, not base64 encoded. **script** and **scripts** are mutually exclusive.\n          - **scripts** Multi script package. **script** and **scripts** are mutually exclusive.\n              - **scriptFile** The name of the file to run\n              - **bundle** All required js files bundled up into a single zip file with base64 encoded\n          - **syntheticType** Its value is HTTPScript. It is required.\n          - The API Script Guide, including examples, can be found at: https://www.ibm.com/docs/en/instana-observability/current?topic=preview-api-script\n- **createdAt** The test created time, following RFC3339 standard.\n- **createdBy** The user identifier who created the test resource.\n- **customProperties** An object with name/value pairs to provide additional information of the Synthetic test.\n- **locations** It is an array of the PoP location IDs where the Synthetic tests are located.\n- **modifiedAt** The test last updated time, following RFC3339 standard.\n- **modifiedBy** The user identifier who updated the test resource.\n- **playbackMode** Defines how the Synthetic test should be executed across multiple\n  PoPs. Possible values are Simultaneous or Staggered. Simultaneous\n  Synthetic tests run at all locations simultaneously. Staggered\n  Synthetic tests run from a different location at each interval.\n  This property is optional, and its default value is Simultaneous.\n- **testFrequency** How often the playback for a Synthetic test is scheduled. The unit of the testFrequency parameter is minute.\n  The default is every 15 minutes. The range is from 1 minute to 120 minutes.\n"
    },
    {
      "name": "Synthetic Test Playback Results",
      "description": "The endpoints of this group retrieve the results for defined Synthetic tests.\n\n**Note on names in TagFilter/TagFilterExpression**: From R243, the name used in a TagFilter or a TagFilterExpression has the format: synthetic.\\<name\\>.\nIt can be one of the following: synthetic.id (id is the test result id), synthetic.testId,\nsynthetic.testName, synthetic.locationId, synthetic.applicationId, synthetic.serviceId, synthetic.syntheticType,\nsynthetic.locationName, and synthetic.locationLabel. If it is a metric name, then the format is: synthetic.metrics\\<MetricName\\>.\nFor example, synthetic.metricsResponseTime, synthetic.metricsStatus.\n\nThe names used prior to R243 should be considered as deprecated. They will be accepted temporarily and will be removed in an upcoming release.\n\n## Get Synthetic test playback results \nThe endpoint returns the aggregated Synthetic test result data\n\n### Mandatory Parameters  \n\n**testId** An array of the unique identifiers of Synthetic tests\n\n**metrics** A list of metric objects that define which metric should be returned, with the defined aggregation. Each metrics objects consists of minimum two items:\n1. *metric* select a particular metric. This is the list of available metrics for all types of Synthetic Tests: \n   synthetic.metricsResponseTime (ms), synthetic.metricsResponseSize (bytes), synthetic.metricsStatusCode (an integer represents an HTTP response code, e.g., 200, 401, 500), synthetic.metricsRequestSize (bytes), \n   synthetic.metricsUploadSpeed (bytes per second), synthetic.metricsDownloadSpeed (bytes per second), \n   synthetic.metricsRedirectTime (ms), synthetic.metricsRedirectCount, synthetic.metricsConnectCount, synthetic.metricsStatus (an integer, 1-success or 0-failure), and synthetic.tags (list of custom properties and values). \n   \n   The following metrics are only available for the HTTPAction type Synthetic Tests: synthetic.metricsBlocking (bytes), synthetic.metricsDns (bytes), synthetic.metricsConnect (bytes), synthetic.metricsSsl (bytes), \n   synthetic.metricsSending (bytes), synthetic.metricsWaiting (bytes), and synthetic.metricsReceiving (bytes).\n\n   The metric synthetic.tags adds the latest list of custom properties to the response.\n\n2. *aggregation* Depending on the selected metric, different aggregations are available e.g., SUM, MEAN, P90 (90th percentile), DISTINCT_COUNT, and MAX.  MAX is only allowed for synthetic.tags.\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\nThe timeFrame might be adjusted to fit the metric granularity so that there is no partial bucket. For example, if the query timeFrame is 08:02 - 09:02 and the metric granularity is 5 minutes, the timeFrame will be adjusted to 08:05 - 09:00. The adjusted timeFrame will be returned in the response payload. If the query does not have any metric with granularity, a default granularity will be used for adjustment.\n\n### Optional Parameters\n\n**metrics** By default you will get an aggregated metric for the selected timeframe\n\n* *granularity*\n    * If it is not set you will get an aggregated value for the selected timeframe\n    * If the granularity is set you will get data points with the specified granularity **in seconds**\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in **milliseconds**)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n    * The granularity values are the same for all metrics\n\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, e.g. \"synthetic.metricsResponseTime\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results.\nIt will be replaced by **tagFilterExpression**.\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\nTo narrow down the result set you have two options to search for a test.\n\n**locationId | applicationId**\n\n* *synthetic.locationId:* filter by locationId\n\n* *synthetic.applicationId:* filter by applicationId\n\n### Defaults\n\n**metrics**\n* *granularity:* 0\n\n**timeFrame**\n```\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n**locationId | applicationId**\n* no filters are applied in the default call\n\n### Sample payload to get a Synthetic test result\n```\n{\n    \"testId\": [\"tUmWgvzdo1Q1vpVRpzR5\", \"Pg0Q1UqHRd7OMysohVLd\"],\n    \"//comment1\": \"Get test results from last 30 minutes (windowSize), data are aggregated every 10 minutes (granularity)\",\n    \"//comment2\": \"The granularity values for responseTime and responseSize must be the same\"\n    \"metrics\": [\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 600,    \n        \"metric\": \"synthetic.metricsResponseTime\"\n     },\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 600,    \n        \"metric\": \"synthetic.metricsResponseSize\"\n     }],\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 1800000  \n     }\n}\n```\n\n## Get a list of Synthetic test playback results (no aggregation)\n### Mandatory Parameters\n**syntheticMetrics** It is an array of metrics. The available metrics for all types of Synthetic Tests: synthetic.id (a string representing the test result ID), \nsynthetic.metricsResponseTime (ms), synthetic.metricsResponseSize (bytes), synthetic.metricsStatusCode (an integer represents an HTTP response code, e.g., 200, 401, 500), synthetic.metricsRequestSize (bytes),\nsynthetic.metricsUploadSpeed (bytes per second), synthetic.metricsDownloadSpeed (bytes per second),\nsynthetic.metricsRedirectTime (ms), synthetic.metricsRedirectCount, synthetic.metricsConnectCount, synthetic.metricsStatus (an integer, 1-success or 0-failure), and synthetic.tags (list of custom properties and values).\n\nThe following metrics are only available for the HTTPAction type Synthetic Tests: synthetic.metricsBlocking (bytes), synthetic.metricsDns (bytes), synthetic.metricsConnect (bytes), synthetic.metricsSsl (bytes),\nsynthetic.metricsSending (bytes), synthetic.metricsWaiting (bytes), and synthetic.metricsReceiving (bytes).\n\nThe metric synthetic.tags adds the latest list of custom properties to the response.\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n```\n\n### Optional Parameters\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, e.g. \"synthetic.metricsResponseTime\" to order by that value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results. \nIt will be replaced by **tagFilterExpression**.\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with \nlogical operators AND or OR.\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n### Sample payload to get a list of Synthetic test results with tagFilters\n```json\n{\n  \"syntheticMetrics\":[\"synthetic.metricsResponseTime\",\"synthetic.metricsResponseSize\"],\n  \"order\":{\n    \"by\":\"synthetic.metricsResponseTime\",\n    \"direction\":\"DESC\"\n  },\n  \"tagFilters\":[{\n    \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n    \"name\":\"synthetic.testId\",\n    \"operator\":\"EQUALS\"\n  }],\n  \"timeFrame\": {\n    \"to\": 0,\n    \"windowSize\": 1800000\n  }\n}\n```\n\n### Sample payload to get a list of Synthetic test results with tagFilterExpression\n```json\n{\n  \"syntheticMetrics\":[\"synthetic.metricsResponseTime\",\"synthetic.metricsResponseSize\"],\n  \"order\":{\n    \"by\":\"synthetic.metricsResponseTime\",\n    \"direction\":\"DESC\"\n  },\n  \"tagFilterExpression\": { \n    \"type\":\"EXPRESSION\",\n    \"logicalOperator\":\"AND\",\n    \"elements\":[{\n      \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n      \"name\":\"synthetic.testId\",\n      \"operator\":\"EQUALS\"\n    }, {\n      \"name\": \"synthetic.locationId\", \n      \"operator\": \"EQUALS\", \n      \"stringValue\": \"abcdefgXSJmQsehOWg1S\"\n    }]\n  },\n  \"timeFrame\": {\n    \"to\": 0,\n    \"windowSize\": 1800000\n  }\n}\n```\n\n## Get a list of Synthetic tests with Success Rate and Average Response Time data\nThe endpoint returns a list of Synthetic tests with Success Rate and Average Response Time result data\n\n### Mandatory Parameters\n\n**metrics**\n1. *metric* select a particular metric. Right now, only synthetic.metricsResponseTime (ms) is supported.\n2. *aggregation* MEAN\n3. *granularity* 60\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n\n### Optional Parameters\n\n**pagination** if you use pagination you most probably want to fix the timeFrame for the retrieved metrics\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic test results you want to return with one query\n\n**order** You can order the returned items alphanumerical by label, either ascending or descending\n1. *by* Use the metric name, \"synthetic.metricsResponseTime\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n**tagFilters** It serves as a filter to narrow down return results. The name of a tagFilter is one of the following: \nsynthetic.syntheticType, synthetic.locationId, and synthetic.applicationId.\nIt will be replaced by **tagFilterExpression**.\n```\n\"tagFilters\":[{\n  \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n  \"name\":\"synthetic.applicationId\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n```\n\"tagFilterExpression\": { \n  \"type\":\"EXPRESSION\",\n  \"logicalOperator\":\"AND\",\n  \"elements\":[{\n    \"name\": \"synthetic.metricsStatus\", \n    \"operator\": \"EQUALS\", \n    \"numberValue\": 1\n  }, {\n    \"name\": \"synthetic.locationId\", \n    \"operator\": \"EQUALS\", \n    \"stringValue\":\"WnjlKKbgzLDnyGra6PAs\"\n  }]\n}\n```\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\nEither tagFilters or tagFilterExpression can specify a custom property by its key and value.\n```\n\"tagFilters\":[{\n  \"name\":\"synthetic.tags\",\n  \"key\":\"location\",\n  \"value\":\"Denver\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\nTo narrow down the result set you have three options to search for a test.\n\n**syntheticType | locationId | applicationId**\n\n* *synthetic.syntheticType:* filter by syntheticType, either HTTPAction or HTTPScript\n\n* *synthetic.locationId:* filter by locationId\n\n* *synthetic.applicationId:* filter by applicationId\n\n### Defaults\n\n**syntheticType | locationId | applicationId**\n* no filters are applied in the default call\n\n### Sample payload to get a list of Synthetic tests with SuccessRate and Average Response Time results\n```\n{\n    \"metrics\": [\n     {\n        \"aggregation\": \"MEAN\",\n        \"granularity\": 60,    \n        \"metric\": \"synthetic.metricsResponseTime\"\n     }],\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 3600000  \n     }\n}\n```\n\n## Get a list of Synthetic locations with Last Test Run on (each location) data\nThe endpoint returns a list of Synthetic locations with Last Test Run on (each location) result data\n\n### Mandatory Parameters\n\n**timeFrame** As in our UI you can specify the timeframe for metrics retrieval.\n```\n  windowSize           to\n     (ms)       (unix-timestamp)\n<----------------------|\n\n\"timeFrame\": {\n\t\"windowSize\": 60000,\n\t\"to\": {current timestamp}\n}\n```\n\n### Optional Parameters\n\n**pagination** if you use pagination you should use the same timeFrame for all of the pages you want to query\n1. *page* select the page number you want to retrieve\n2. *pageSize* set the number of Synthetic locations you want to return with one query\n\n**order** You can order the returned items alphanumerically by label, either ascending or descending\n1. *by* Use the metric name, e.g., \"location_name\", to order by its value\n2. *direction* either ascending (ASC) or descending (DESC)\n\n   The sorting can be done on the following metrics: location_name, location_label, status, type, total_tests,\n   last_test_run, and namespace\n\n**tagFilters** It serves as a filter to narrow down return results. The name of a tagFilter is one of the following: \nsynthetic.locationName, synthetic.locationLabel, and synthetic.locationId.\nIt will be replaced by **tagFilterExpression**.\n```\n\"tagFilters\":[{\n  \"stringValue\":\"hYziqsaXSJmQsehOWg1S\",\n  \"name\":\"synthetic.locationId\",\n  \"operator\":\"EQUALS\"\n}]\n```\n\n**tagFilterExpression** It serves as a filter to narrow down return results. Its type can be either EXPRESSION or TAG_FILTER with\nlogical operators AND or OR.\n```\n\"tagFilterExpression\": { \n  \"type\":\"EXPRESSION\",\n  \"logicalOperator\":\"OR\",\n  \"elements\":[{\n    \"name\": \"synthetic.locationId\", \n    \"operator\": \"EQUALS\", \n    \"stringValue\":\"WnjlKKbgzLDnyGra6PAs\"\n  }]\n}\n```\n\nA payload only needs either tagFilters or tagFilterExpression as a filter, not both.\n\n### Sample payload to get a list of Synthetic locations with Last Test Run on (each location) data\n```\n{\n    \"order\": {\n     \t\"by\": \"status\", \n     \t\"direction\": \"Desc\"\n     },\n     \"timeFrame\": {\n       \"to\": 0,\n       \"windowSize\": 3600000  \n     }\n}\n```\n\n## Get Synthetic test playback result detail data\n\n### Query Parameters\n**type** The type of the detailed data. Its value is one of these types: SUBTRANSACTIONS, LOGS, and HAR.\n\n**name** The name of the file to be retrieved, if more than one file available for the same type. Used when the type equals to LOGS or IMAGES\n\n## Download a Synthetic test playback result detail data file\n\n### Query Parameter\n**type** The type of a single compressed file. Its value is one of these types: SUBTRANSACTIONS, LOGS, IMAGES, VIDEOS, and HAR."
    },
    {
      "name": "Automation Settings"
    }
  ],
  "paths": {
    "/api/apdex/report/{apdexId}": {
      "get": {
        "operationId": "getApdexReport",
        "parameters": [
          {
            "in": "path",
            "name": "apdexId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApdexReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Generate Apdex report",
        "tags": [
          "Apdex Report"
        ]
      }
    },
    "/api/application-monitoring/analyze/backend-correlation": {
      "get": {
        "operationId": "getCorrelatedTraces",
        "parameters": [
          {
            "in": "query",
            "name": "correlationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null,
              "maxLength": 128,
              "minLength": 0
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/BackendTraceReference"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Resolve backend trace IDs using correlation IDs from website and mobile app monitoring beacons.",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/analyze/call-groups": {
      "post": {
        "operationId": "getCallGroup",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallGroups"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallGroupsResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped call metrics",
        "tags": [
          "Application Analyze"
        ],
        "description": "This endpoint retrieves the metrics for calls.\r\n\r\n## Deprecated Parameters\r\n**tagFilters:** The list of tag filters. It is replaced by **tagFilterExpression**, **includeInternal** and **includeSynthetic**."
      }
    },
    "/api/application-monitoring/analyze/trace-groups": {
      "post": {
        "operationId": "getTraceGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTraceGroups"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TraceGroupsResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped trace metrics",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/analyze/traces": {
      "post": {
        "operationId": "getTraces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTraces"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TraceResult"
                }
              }
            },
            "x-example": "TraceResult"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all traces",
        "tags": [
          "Application Analyze"
        ],
        "x-code-samples": [
          {
            "lang": "JAVA",
            "source": "CloseableHttpClient client = HttpClients.createDefault();\nString url = \"https://unit-tenant.instana.com/api/application-monitoring/analyze/traces\";\nHttpPost httpPost = new HttpPost(url);\nString json = \"{\"\n            + \"\\\"pagination\\\":{\\\"retrievalSize\\\":20,\\\"offset\\\":0},\"\n            + \"\\\"timeFrame\\\":{\\\"windowSize\\\":3600000}\"\n            + \"}\"\nStringEntity entity = new StringEntity(json);\nhttpPost.setEntity(entity);\nhttpPost.setHeader(\"Accept\", \"application/json\");\nhttpPost.setHeader(\"Content-type\", \"application/json\");\nhttpPost.setHeader(\"Authorization\", \"apiToken xxxxxxxx\");\n\nCloseableHttpResponse response = client.execute(httpPost);\n\nassertThat(response.getStatusLine().getStatusCode(), equalTo(200));\nString traceResult = EntityUtils.toString(response.getEntity());\nclient.close();\n"
          },
          {
            "lang": "SHELL",
            "source": "curl --request POST \\\n  --url https://unit-tenant.instana.io/api/application-monitoring/analyze/call-groups \\\n  --header 'authorization: apiToken {apiToken}}' \\\n  --header 'content-type: application/json' \\\n  --data '{ \n\n\"timeFrame\": { \n\"windowSize\": 36000000 \n}, \n\"order\":{\n\t\"by\": \"errors\", \n\"direction\": \"DESC\" \n},\n\"group\": { \n\"groupbyTag\": \"application.name\"\n},  \n\"metrics\": [ \n{ \n\"metric\": \"errors\", \n\"aggregation\": \"MEAN\" \n} \n] \n} '"
          }
        ],
        "description": "This endpoint retrieves the metrics for traces.\r\n\r\n**Manditory Paramters:**\r\n\r\n**Optional Paramters:**\r\n\r\n**Defaults:**\r\n\r\n**Limits:**\r\n\r\n**Tips:**\r\n"
      }
    },
    "/api/application-monitoring/analyze/traces/{id}": {
      "get": {
        "operationId": "getTrace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullTrace"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get trace detail",
        "tags": [
          "Application Analyze"
        ]
      }
    },
    "/api/application-monitoring/applications": {
      "get": {
        "operationId": "getApplications",
        "parameters": [
          {
            "description": "Name of application",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get applications",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/applications/services": {
      "get": {
        "operationId": "getApplicationServices",
        "parameters": [
          {
            "description": "Name of application/service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ],
              "example": null
            }
          },
          {
            "description": "Include snapshot ids in the results",
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get applications/services",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/applications/services/endpoints": {
      "get": {
        "operationId": "getApplicationEndpoints",
        "parameters": [
          {
            "description": "Name of service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "description": "Type of Endpoint",
            "in": "query",
            "name": "types",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          },
          {
            "description": "List of technologies",
            "in": "query",
            "name": "technologies",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Filter for application scope, i.e: INBOUND or ALL",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get endpoints",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/catalog": {
      "get": {
        "operationId": "getApplicationTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "dataSource",
            "schema": {
              "type": "string",
              "enum": [
                "CALLS",
                "TRACES"
              ],
              "example": null
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get application tag catalog",
        "tags": [
          "Application Catalog"
        ]
      }
    },
    "/api/application-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getApplicationCatalogMetrics",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/MetricDescription"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Metric catalog",
        "tags": [
          "Application Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions for application monitoring.\n"
      }
    },
    "/api/application-monitoring/catalog/tags": {
      "get": {
        "deprecated": true,
        "operationId": "getApplicationTags",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "dataSource",
            "schema": {
              "type": "string",
              "enum": [
                "CALLS",
                "TRACES"
              ],
              "example": null
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get application tags",
        "tags": [
          "Application Catalog"
        ],
        "description": "This endpoint retrieves all available tags for your monitored system.\n\nThese tags can be used to group metric results.\n```\n\"group\": {\n  \"groupbyTag\": \"service.name\"\n}\n```\n\nThese tags can be used to filter metric results.\n```\n\"tagFilters\": [{\n\t\"name\": \"application.name\",\n\t\"operator\": \"EQUALS\",\n\t\"value\": \"example\"\n}]\n```\n"
      }
    },
    "/api/application-monitoring/metrics/applications": {
      "post": {
        "operationId": "getApplicationMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetApplications"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Application Metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/metrics/endpoints": {
      "post": {
        "operationId": "getEndpointsMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEndpoints"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Endpoint metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/metrics/services": {
      "post": {
        "operationId": "getServicesMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetServices"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Service metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/application-monitoring/services": {
      "get": {
        "operationId": "getServices",
        "parameters": [
          {
            "description": "Name of service",
            "in": "query",
            "name": "nameFilter",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Page number from results",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "description": "Include snapshot ids in the results",
            "in": "query",
            "name": "includeSnapshotIds",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get services",
        "tags": [
          "Application Resources"
        ]
      }
    },
    "/api/application-monitoring/settings/application": {
      "get": {
        "operationId": "getApplicationConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApplicationConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All Application configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "addApplicationConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApplicationConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add application configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Create a new Application Perspective.\n\n## Deprecated Parameters\n**matchSpecification:** A binary tree sturcture of match expression connected with binary operator AND or OR. It is replaced by **tagFilterExpression** which is also used in Application Analyze API endpoints."
      }
    },
    "/api/application-monitoring/settings/application/{id}": {
      "delete": {
        "operationId": "deleteApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete application configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Application configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "putApplicationConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update application configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Update an existing Application Perspective.\n\n## Deprecated Parameters\n**matchSpecification:** A binary tree sturcture of match expression connected with binary operator AND or OR. It is replaced by **tagFilterExpression** which is also used in Application Analyze API endpoints."
      }
    },
    "/api/application-monitoring/settings/http-endpoint": {
      "get": {
        "operationId": "getEndpointConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/HttpEndpointConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All Endpoint configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "createEndpointConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpEndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Create endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/http-endpoint/{id}": {
      "delete": {
        "operationId": "deleteEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "updateEndpointConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpEndpointConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpEndpointConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update endpoint configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/manual-service": {
      "get": {
        "operationId": "getAllManualServiceConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ManualServiceConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All manual service configurations",
        "tags": [
          "Application Settings"
        ],
        "description": "Get all manual service configurations.\n\n**This is an experimental endpoint to workaround service mapping issues.**"
      },
      "post": {
        "operationId": "addManualServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewManualServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualServiceConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Add a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      },
      "put": {
        "operationId": "replaceAllManualServiceConfigs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/NewManualServiceConfig"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ManualServiceConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Replace all manual service configurations",
        "tags": [
          "Application Settings"
        ],
        "description": "Replace all manual service configurations.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      }
    },
    "/api/application-monitoring/settings/manual-service/{id}": {
      "delete": {
        "operationId": "deleteManualServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Delete a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**"
      },
      "put": {
        "operationId": "updateManualServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualServiceConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update manual service configuration",
        "tags": [
          "Application Settings"
        ],
        "description": "Update a manual service configuration.\n\n**This is an experimental endpoint to workaround service mapping issues.**\n\n### Mandatory Parameters:\n\n**tagFilterExpression** A tag filter expression to match calls on which the manual service configuration will be applied. Only call tags are allowed in the expression.\n\n### Optional Parameters:\n**unmonitoredServiceName** Specify a service name if you want to map calls to an unmonitored service.\n\n**existingServiceId** Specify a service id if you want to map calls to an existing service.\n\n**description** A description of the configuration.\n\n**enabled** Enable or disable the configuration.\n\nNote: Either unmonitoredServiceName or existingServiceId should be specified in a configuration.\n\n### Defaults\n**enabled** `true`"
      }
    },
    "/api/application-monitoring/settings/service": {
      "get": {
        "operationId": "getServiceConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ServiceConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "All service configurations",
        "tags": [
          "Application Settings"
        ]
      },
      "post": {
        "operationId": "addServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Add service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "replaceAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ServiceConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Replace all service configurations",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/service/order": {
      "put": {
        "operationId": "orderServiceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Order of service configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/settings/service/{id}": {
      "delete": {
        "operationId": "deleteServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "get": {
        "operationId": "getServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Service configuration",
        "tags": [
          "Application Settings"
        ]
      },
      "put": {
        "operationId": "putServiceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update service configuration",
        "tags": [
          "Application Settings"
        ]
      }
    },
    "/api/application-monitoring/topology/services": {
      "get": {
        "operationId": "getServicesMap",
        "parameters": [
          {
            "description": "Size of time window in milliseconds",
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Timestamp since Unix Epoch in milliseconds of the end of the time window",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "description": "Filter by application ID",
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "description": "Filter by application scope, i.e., INBOUND or ALL. The default value is INBOUND. Applies only if application ID filter is specified.",
            "in": "query",
            "name": "applicationBoundaryScope",
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "INBOUND"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceMap"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Gets the service topology",
        "tags": [
          "Application Topology"
        ]
      }
    },
    "/api/application-monitoring/v2/metrics": {
      "post": {
        "operationId": "getApplicationDataMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetApplicationMetrics"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Application Data Metrics",
        "tags": [
          "Application Metrics"
        ]
      }
    },
    "/api/custom-dashboard": {
      "get": {
        "operationId": "getCustomDashboards",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/CustomDashboardPreview"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get accessible custom dashboards",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "post": {
        "operationId": "addCustomDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomDashboard"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid payload or when attempting to share dashboards without the canCreatePublicCustomDashboards permission."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Add custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/shareable-api-tokens": {
      "get": {
        "operationId": "getShareableApiTokens",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApiToken"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "CreatePublicCustomDashboards"
            ]
          }
        ],
        "summary": "Get all API tokens.",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/shareable-users": {
      "get": {
        "operationId": "getShareableUsers",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UserBasicResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "CreatePublicCustomDashboards"
            ]
          }
        ],
        "summary": "Get all users (without invitations).",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/custom-dashboard/{customDashboardId}": {
      "delete": {
        "operationId": "deleteCustomDashboard",
        "parameters": [
          {
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Custom dashboard successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Remove custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "get": {
        "operationId": "getCustomDashboard",
        "parameters": [
          {
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      },
      "put": {
        "operationId": "updateCustomDashboard",
        "parameters": [
          {
            "in": "path",
            "name": "customDashboardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomDashboard"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid payload or when attempting to share dashboards without the canCreatePublicCustomDashboards permission."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDashboard"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Update custom dashboard",
        "tags": [
          "Custom Dashboards"
        ]
      }
    },
    "/api/events": {
      "get": {
        "operationId": "getEvents",
        "parameters": [
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "excludeTriggeredBefore",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "filterEventUpdates",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "includeAgentMonitoringIssues",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "includeKubernetesInfoEvents",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "eventTypeFilters",
            "required": true,
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "enum": [
                  "INCIDENT",
                  "ISSUE",
                  "CHANGE"
                ],
                "example": null
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all events",
        "tags": [
          "Events"
        ],
        "description": "This endpoint retrieves all available events for the requested timeframe.\n\n### Query Parameters:\n\n- **to:** The end of the requested timeframe as a Unix timestamp. The current service time is used as a default if not provided. Please note that it is recommended to fetch historical events with a delay using a `to` timestamp in the past due to eventual consistency. It can take up to **2 minutes** in some cases until an event update is reflected in the results.\n- **windowSize:** The size of the requested timeframe in milliseconds relative to `to`. If neither `windowSize` nor `from` is provided, then a default windowSize of *10 minutes* is used.\n- **from:** As an alternative to defining the `windowSize`, the `from` query parameter can be used, which spans the timeframe in range `[from, to)`.\n- **excludeTriggeredBefore:** Whether to exclude events that have been triggered before the requested timeframe in order to enable searching for events that have started within the given timeframe, excluding events that are previously active already. This is useful for 3rd party integrations that fetch events from Instana with a scheduled batch job in a fixed interval using tumbling windows, when you only care about new events.\nThis option is more restrictive than `filterEventUpdates` and does not inform about event state updates that got `CLOSED` in the timeframe of the query if not also the start time of the event is within that query timeframe.\n- **filterEventUpdates:** Filters results to event updates only. This means that an event is only included when its event state changed in the given query timeframe. This is useful for 3rd party integrations that fetch events from Instana with a scheduled batch job in a fixed interval using a tumbling windows, when you care about event state updates.\n- **includeAgentMonitoringIssues:** Optional flag to indicate whether to include Agent Monitoring Issues. The default is `false`.\n- **includeKubernetesInfoEvents:** Optional flag to indicate whether to include Kubernetes Info Events. The default is `false`.\n\n### Examples\n\nFetch all events that have been opened within the last 30 minutes.\n\n```bash\ncurl --request GET 'https://<Host>/api/events?windowSize=1800000&excludeTriggeredBefore=true' \\\n--header 'Authorization: apiToken <Token>'\n```\n\nFetch all events that have been opened or closed within the last minute, using a fetch delay of 120 seconds.\n\n```bash\nTO_MILLIS=$((($(date +%s) - 120) * 1000)) curl --request GET \"https://<Host>/api/events?windowSize=60000&to=$TO_MILLIS&filterEventUpdates=true\" \\\n--header 'Authorization: apiToken <Token>'\n```\n"
      },
      "post": {
        "operationId": "getEventsByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/EventResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get events given a set of IDs",
        "tags": [
          "Events"
        ],
        "description": "This endpoint retrieves events given a set of IDs. Only actually existing event IDs are respected in the result set.\n\n### Mandatory Parameters:\n\n- **eventIds:** The set of IDs of the events to fetch."
      }
    },
    "/api/events/settings/alertingChannels": {
      "get": {
        "operationId": "getAlertingChannels",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/AbstractIntegration"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "All alerting channels",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/infos": {
      "get": {
        "operationId": "getAlertingChannelsOverview",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/IntegrationOverview"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Overview over all alerting channels",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/test": {
      "put": {
        "operationId": "sendTestAlerting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractIntegration"
              }
            }
          },
          "required": true,
          "x-example": "alertingChannelTestCall"
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Test alerting channel",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alertingChannels/{id}": {
      "delete": {
        "operationId": "deleteAlertingChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Delete alerting channel",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "operationId": "getAlertingChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractIntegration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Alerting channel",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "putAlertingChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractIntegration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureIntegrations"
            ]
          }
        ],
        "summary": "Update alerting channel",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts": {
      "get": {
        "operationId": "getAlerts",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ValidatedAlertingConfiguration"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Get all Alert Configurations",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts/infos": {
      "get": {
        "operationId": "getAlertingConfigurationInfos",
        "parameters": [
          {
            "in": "query",
            "name": "integrationId",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ValidatedAlertingChannelInputInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All alerting configuration info",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/alerts/{id}": {
      "delete": {
        "operationId": "deleteAlert",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete Alert Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "operationId": "getAlert",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertingConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Find an Alert Configuration by ID",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "putAlert",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertingConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertingConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Update Alert Configuration",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/application-alert-configs": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveApplicationAlertConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Application Alert Configs",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createApplicationAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ],
        "description": "This API endpoint creates the Application Alert Configuration.\n"
      }
    },
    "/api/events/settings/application-alert-configs/{id}": {
      "delete": {
        "operationId": "deleteApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Application Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Application Smart Alert successfully updated"
          },
          "204": {
            "description": "Application Smart Alert did not change"
          },
          "400": {
            "description": "Invalid Application ID provided"
          },
          "500": {
            "description": "Internal error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Update Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ],
        "description": "This API endpoint updates the Application Alert Configuration.\n"
      }
    },
    "/api/events/settings/application-alert-configs/{id}/disable": {
      "put": {
        "operationId": "disableApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/enable": {
      "put": {
        "operationId": "enableApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Restore Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/update-baseline": {
      "post": {
        "description": "Recalculate and update the baseline given the id of the config. The LastUpdated field of the config is changed to the current time.",
        "operationId": "updateApplicationHistoricBaseline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "summary": "Recalculate a Static Seasonal Threshold",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/application-alert-configs/{id}/versions": {
      "get": {
        "description": "Find all versions of a Application Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findApplicationAlertConfigVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Application Alert Config",
        "tags": [
          "Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/custom-payload-configurations": {
      "delete": {
        "operationId": "deleteCustomPayloadConfiguration",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Delete Custom Payload Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "operationId": "getCustomPayloadConfigurations",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string",
              "default": "ALL",
              "enum": [
                "ALL",
                "APPLICATION",
                "WEBSITE",
                "SYNTHETIC"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPayloadWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Get Custom Payload Configuration",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "upsertCustomPayloadConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPayloadConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/CustomPayloadWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Create / Update Custom Payload Configuration",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/custom-payload-configurations/catalog": {
      "get": {
        "operationId": "getCustomPayloadTagCatalog",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertPayload"
            ]
          }
        ],
        "summary": "Get tag catalog for custom payload in alerting",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in": {
      "get": {
        "operationId": "getBuiltInEventSpecifications",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}": {
      "delete": {
        "operationId": "deleteBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete built-in event specification",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "operationId": "getBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecification"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Built-in event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}/disable": {
      "post": {
        "operationId": "disableBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/built-in/{eventSpecificationId}/enable": {
      "post": {
        "operationId": "enableBuiltInEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuiltInEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable built-in event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom": {
      "get": {
        "operationId": "getCustomEventSpecifications",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All custom event specifications",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "operationId": "postCustomEventSpecification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEventSpecification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create new custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint creates a new Custom Event Specification.\n\n## Mandatory Parameters:\n\n- **name:** Name for the custom event\n\n- **entityType:** Name of the available plugins for the selected source\n\n- **rules.ruleType:** Type of the rule being set for the custom event\n\n### Rule-type specific parameters\n\nDepending on the chosen `ruleType`, there are further required parameters:\n\n#### Threshold Rule using a dynamic built-in metric by pattern :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricPattern.prefix:** Prefix pattern for the metric\n\n- **rules.metricPattern.operator:** Operator for matching the metric\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\"name\":\"Event for OpenAPI documentation\",\n\"query\":<Query>, \n\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":null, \"metricPattern\":{\"prefix\":\"fs\", \"postfix\":\"free\", \"operator\":\"endsWith\", \"placeholder\":\"/xvda1\"},\n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\nThe above example creates a custom event that matches disk devices that end with \"/xvda1\" for the metric \"fs.{device}.free\" for any host in scope.\n\n#### Threshold Rule using fixed metric :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricName:** Metric name for the event\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation fixed Metric\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation fixed metric\",\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":\"fs./dev/xvda1.free\", \n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\n\n#### System Rule:\n\n- **rules.systemRuleId:** Id of the System Rule being set \n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation System Rule\", \"enabled\":true,\"entityType\":\"any\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation System Rule\", \"rules\":[{\"ruleType\":\"system\", \"systemRuleId\":\"entity.offline\",\"severity\":10}], \"triggering\":false\n}'\n```\n\n#### Entity Verification Rule:\n\n- **rules.matchingEntityType:** Type of the Entity\n- **rules.matchingOperator:** Operator for matching the Entity name\n- **rules.matchingEntityLabel:** Name Pattern for the Entity\n\n```\ncurl --request POST 'https://<Host>/api/events/settings/event-specifications/custom' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI Entity Verification Rule\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI Entity Verification Rule\",\n\"rules\":[{\"matchingEntityLabel\":\"test\", \"matchingEntityType\":\"jvmRuntimePlatform\",\"matchingOperator\":\"startsWith\",\"offlineDuration\":1800000, \n\"ruleType\":\"entity_verification\",\"severity\": 5}], \"triggering\":false\n}'\n```\n\n### Deprecations:\n\nThe entity types `application`, `service` and `endpoint` are deprecated for custom events and need to be migrated to a Smart Alert soon. We advise to configure a respective Smart Alert instead of a custom Event. For more information please [refer to our documentation](https://www.ibm.com/docs/en/obi/current?topic=applications-smart-alerts).\n"
      }
    },
    "/api/events/settings/event-specifications/custom/systemRules": {
      "get": {
        "operationId": "getSystemRules",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SystemRuleLabel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All system rules for custom event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}": {
      "delete": {
        "operationId": "deleteCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint deletes a Custom Event Specification.\n\nBy default, the ID of a deleted configuration cannot be reused anymore to enable links in previous Issues or Incidents to stay valid.\nHowever, check out the docs for [updating a configuration](#operation/putCustomEventSpecification) how this default behavior can be changed using the `allowRestore` query parameter.\n\n\n## Mandatory Parameters:\n\n- **eventSpecificationId (Path Parameter):** A unique identifier for the custom event specification to delete.\n\n\n# Example:\n\n```\ncurl --request DELETE 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json'\n```\n"
      },
      "get": {
        "operationId": "getCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Custom event specification",
        "tags": [
          "Event Settings"
        ]
      },
      "put": {
        "operationId": "putCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "allowRestore",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEventSpecification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create or update custom event specification",
        "tags": [
          "Event Settings"
        ],
        "description": "This endpoint creates or updates a Custom Event Specification.\n\n## Mandatory Parameters:\n\n- **eventSpecificationId (Path Parameter):** A unique identifier for each custom event\n\n- **name:** Name for the custom event\n\n- **entityType:** Name of the available plugins for the selected source\n\n- **rules.ruleType:** Type of the rule being set for the custom event\n\n### Rule-type specific parameters\n\nDepending on the chosen `ruleType`, there are further required parameters:\n\n#### Threshold Rule using a dynamic built-in metric by pattern :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricPattern.prefix:** Prefix pattern for the metric\n\n- **rules.metricPattern.operator:** Operator for matching the metric\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\"name\":\"Event for OpenAPI documentation\",\n\"query\":<Query>, \n\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":null, \"metricPattern\":{\"prefix\":\"fs\", \"postfix\":\"free\", \"operator\":\"endsWith\", \"placeholder\":\"/xvda1\"},\n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\nThe above example creates a custom event that matches disk devices that end with \"/xvda1\" for the metric \"fs.{device}.free\" for any host in scope.\n\n#### Threshold Rule using fixed metric :\n\n- **rules.conditionOperator:** Conditional operator for the aggregation for the provided time window\n\n- **rules.metricName:** Metric name for the event\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation fixed Metric\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation fixed metric\",\"rules\":[{\"aggregation\":\"sum\",\"conditionOperator\":\">\", \"conditionValue\":0.1, \"metricName\":\"fs./dev/xvda1.free\", \n\"rollup\":null, \"ruleType\":\"threshold\", \"severity\":10, \"window\":30000}], \"triggering\":false\n}'\n```\n\n#### System Rule:\n\n- **rules.systemRuleId:** Id of the System Rule being set \n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI documentation System Rule\", \"enabled\":true,\"entityType\":\"any\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI documentation System Rule\", \"rules\":[{\"ruleType\":\"system\", \"systemRuleId\":\"entity.offline\",\"severity\":10}], \"triggering\":false\n}'\n```\n\n#### Entity Verification Rule:\n\n- **rules.matchingEntityType:** Type of the Entity\n- **rules.matchingOperator:** Operator for matching the Entity name\n- **rules.matchingEntityLabel:** Name Pattern for the Entity\n\n```\ncurl --request PUT 'https://<Host>/api/events/settings/event-specifications/custom/<EventSpecificationId>' \\\n--header 'Authorization: apiToken <Token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"description\":\"Event for OpenAPI Entity Verification Rule\", \"enabled\":true,\"entityType\":\"host\",\"expirationTime\":\"60000\",\n\"name\":\"Event for OpenAPI Entity Verification Rule\",\n\"rules\":[{\"matchingEntityLabel\":\"test\", \"matchingEntityType\":\"jvmRuntimePlatform\",\"matchingOperator\":\"startsWith\",\"offlineDuration\":1800000, \n\"ruleType\":\"entity_verification\",\"severity\": 5}], \"triggering\":false\n}'\n```\n\n## Optional Parameters:\n\n- **allowRestore (Query Parameter):** Allows to restore a custom event specification that was previously deleted or migrated when set to `true`. This allows to have idempotent operations that can be useful in _configuration as code_ scenarios. By default, the ID of a deleted configuration cannot be reused anymore to enable links in previous Issues or Incidents to stay valid.\n\n### Deprecations:\n\nThe entity types `application`, `service` and `endpoint` are deprecated for custom events and need to be migrated to a Smart Alert soon. We advise to configure a respective Smart Alert instead of a custom Event. For more information please [refer to our documentation](https://www.ibm.com/docs/en/obi/current?topic=applications-smart-alerts).\n"
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}/disable": {
      "post": {
        "operationId": "disableCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable custom event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/custom/{eventSpecificationId}/enable": {
      "post": {
        "operationId": "enableCustomEventSpecification",
        "parameters": [
          {
            "in": "path",
            "name": "eventSpecificationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventSpecificationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable custom event specification",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/event-specifications/infos": {
      "get": {
        "operationId": "getEventSpecificationInfos",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/EventSpecificationInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Summary of all built-in and custom event specifications",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "description": "Summary of all built-in and custom event specifications by IDs",
        "operationId": "getEventSpecificationInfosByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/EventSpecificationInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All built-in and custom event specifications",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveGlobalApplicationAlertConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Global Application Alert Configs",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createGlobalApplicationAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalApplicationsAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Create Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}": {
      "delete": {
        "operationId": "deleteGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Delete Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Global Application Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalApplicationsAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalApplicationAlertConfigWithMetadata"
                }
              }
            },
            "description": "Global Smart Alert successfully updated"
          },
          "204": {
            "description": "Global Smart Alert did not change"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Update Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/disable": {
      "put": {
        "operationId": "disableGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Disable Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/enable": {
      "put": {
        "operationId": "enableGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Enable Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreGlobalApplicationAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Restore Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/applications/{id}/versions": {
      "get": {
        "description": "Find all versions of a Global Application Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findGlobalApplicationAlertConfigVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Global Application Alert Config",
        "tags": [
          "Global Application Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveSyntheticAlertConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "syntheticTestId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Synthetic Alert Configs",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "post": {
        "operationId": "createSyntheticAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Create Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ],
        "description": "Use this API endpoint to create a Synthetic Smart Alert.\n\n#### Example\n\n```bash\ncurl -k --request POST \\\n  --url https://<Host>/api/events/settings/global-alert-configs/synthetics \\\n  --header 'authorization: apiToken <Token>' -H 'Content-Type: application/json' \\\n  --data '{\n      \"name\":\"Synthetics Smart Alert via API\",\n      \"description\":\"Synthetic test failed at least 3 times in sequence.\",\n      \"syntheticTestIds\":[\"CKAGfbW0xMakCNUHlVlr\"],\n      \"severity\":10,\n      \"rule\":{\"alertType\":\"failure\",\"metricName\":\"status\"},\n      \"alertChannelIds\":[\"qyCAhNzNnYPCzzmm\"],\n      \"timeThreshold\":{\"type\":\"violationsInSequence\",\"violationsCount\":3}\n    }'\n```\n"
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}": {
      "delete": {
        "operationId": "deleteSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Delete Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "get": {
        "description": "Find a Synthetic Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      },
      "post": {
        "operationId": "updateSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticAlertConfigWithMetadata"
                }
              }
            },
            "description": "Synthetic Smart Alert successfully updated"
          },
          "204": {
            "description": "Synthetic Smart Alert did not change"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Update Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ],
        "description": "Use this API endpoint to update a Synthetic Smart Alert by ID. Effectively, it creates a new revision instead of replacing the previous configuration.\n\n#### Example\n\n```bash\ncurl -k --request POST \\\n  --url https://<Host>/api/events/settings/global-alert-configs/synthetics/<ID> \\\n  --header 'authorization: apiToken <Token>' -H 'Content-Type: application/json' \\\n  --data '{\n      \"id\":\"<ID>\",\n      \"name\":\"Updated Synthetics Smart Alert via API\",\n      \"description\":\"Synthetic test failed.\",\n      \"syntheticTestIds\":[\"CKAGfbW0xMakCNUHlVlr\"],\n      \"severity\":5,\n      \"rule\":{\"alertType\":\"failure\",\"metricName\":\"status\"},\n      \"alertChannelIds\":[\"qyCAhNzNnYPCzzmm\"],\n      \"timeThreshold\":{\"type\":\"violationsInSequence\",\"violationsCount\":1}\n    }'\n```\n"
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/disable": {
      "put": {
        "operationId": "disableSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Disable Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/enable": {
      "put": {
        "operationId": "enableSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Enable Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreSyntheticAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureGlobalAlertConfigs"
            ]
          }
        ],
        "summary": "Restore Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/global-alert-configs/synthetics/{id}/versions": {
      "get": {
        "description": "Find all versions of a Synthetic Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findSyntheticAlertConfigVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get versions of Synthetic Alert Config",
        "tags": [
          "Synthetic Alert Configuration"
        ]
      }
    },
    "/api/events/settings/website-alert-configs": {
      "get": {
        "description": "Configs are sorted descending by their created date.",
        "operationId": "findActiveWebsiteAlertConfigs",
        "parameters": [
          {
            "in": "query",
            "name": "websiteId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "alertIds",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "maxItems": 1000,
              "minItems": 0,
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All Website Alert Configs",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "operationId": "createWebsiteAlertConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create Website Alert Config",
        "tags": [
          "Event Settings"
        ],
        "description": "This API endpoint creates the Website Alert Configuration.\n\n## Mandatory Parameters:\n\n- **name:** Name for the website alert configuration.\n\n- **description:** Description for the website alert configuration.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **triggering:** Optional flag to indicate whether also an Incident is triggered or not.\n\n- **websiteId:** Unique ID of the website.\n\n- **tagFilterExpression:** Boolean expression of tag filters to define the scope of relevant website beacons.\n\n- **granularity:** The evaluation granularity used for detection of violations of the defined threshold. In other words, it defines the size of the tumbling window used.\n\n- **rule:** Indicates the type of rule this alert configuration is about.\n\n- **threshold:** Indicates the type of threshold this alert rule is evaluated on.\n\n- **timeThreshold:** Indicates the type of violation of the defined threshold.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n"
      }
    },
    "/api/events/settings/website-alert-configs/{id}": {
      "delete": {
        "operationId": "deleteWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "get": {
        "description": "Find a Website Alert Config by ID. This will deliver deleted configs too.",
        "operationId": "findWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "validOn",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Get Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      },
      "post": {
        "operationId": "updateWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteAlertConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAlertConfigWithMetadata"
                }
              }
            },
            "description": "Website Smart Alert successfully updated"
          },
          "204": {
            "description": "Website Smart Alert did not change"
          },
          "400": {
            "description": "Invalid Website ID provided"
          },
          "500": {
            "description": "Internal error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Update Website Alert Config",
        "tags": [
          "Event Settings"
        ],
        "description": "This API endpoint updates the Website Alert Configuration.\n\n## Mandatory Parameters:\n\n- **id:** ID of the website alert config which needs to be updated.\n\n- **name:** Name for the website alert configuration.\n\n- **description:** Description for the website alert configuration.\n\n- **severity:** The severity of the alert when triggered, which is either `5` (Warning), or `10` (Critical).\n\n- **triggering:** Optional flag to indicate whether also an Incident is triggered or not.\n\n- **websiteId:** Unique ID of the website.\n\n- **tagFilterExpression:** Boolean expression of tag filters to define the scope of relevant website beacons.\n\n- **granularity:** The evaluation granularity used for detection of violations of the defined threshold. In other words, it defines the size of the tumbling window used.\n\n- **rule:** Indicates the type of rule this alert configuration is about.\n\n- **threshold:** Indicates the type of threshold this alert rule is evaluated on.\n\n- **timeThreshold:** Indicates the type of violation of the defined threshold.\n\n- **alertChannelIds:** List of IDs of alert channels defined in Instana.\n"
      }
    },
    "/api/events/settings/website-alert-configs/{id}/disable": {
      "put": {
        "operationId": "disableWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Disable Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/enable": {
      "put": {
        "operationId": "enableWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Enable Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/restore/{created}": {
      "put": {
        "operationId": "restoreWebsiteAlertConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": null,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Restore Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/update-baseline": {
      "post": {
        "description": "Recalculate and update the baseline given the id of the config. The LastUpdated field of the config is changed to the current time.",
        "operationId": "updateWebsiteHistoricBaseline",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Recalculate a Static Seasonal Threshold",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/settings/website-alert-configs/{id}/versions": {
      "get": {
        "description": "Find all versions of a Website Alert Config by ID. This will deliver deleted configs too. Configs are sorted descending by their created date.",
        "operationId": "findWebsiteAlertConfigVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ConfigVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Get versions of Website Alert Config",
        "tags": [
          "Event Settings"
        ]
      }
    },
    "/api/events/{eventId}": {
      "get": {
        "operationId": "getEvent",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a particular event",
        "tags": [
          "Events"
        ],
        "description": "This endpoint retrieves an event given its ID.\n\n### Path Parameters:\n\n- **eventId:** The ID of the event to fetch."
      }
    },
    "/api/host-agent": {
      "get": {
        "operationId": "searchHostAgents",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Query host agent snapshots",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/configuration": {
      "post": {
        "operationId": "updateConfigurationByQuery",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigurationUpdate"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Update agent configuration by query",
        "tags": [
          "Host Agent"
        ],
        "description": "This endpoint can be used to initialize or change configuration management settings for all agents selected by the given Dynamic Focus Query.\n\n"
      }
    },
    "/api/host-agent/{hostId}/configuration": {
      "post": {
        "operationId": "updateConfigurationByHost",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigurationUpdate"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Update agent configuration by host",
        "tags": [
          "Host Agent"
        ],
        "description": "This endpoint can be used to initialize or change configuration management settings for a specific host agent.\n\n"
      }
    },
    "/api/host-agent/{hostId}/logs": {
      "get": {
        "operationId": "getAgentLogs",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "download",
            "schema": {
              "type": "boolean",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "file",
            "required": true,
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Agent download logs",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/{hostId}/update": {
      "post": {
        "operationId": "updateAgent",
        "parameters": [
          {
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          },
          {
            "ApiKeyAuth": [
              "canConfigureAgents"
            ]
          }
        ],
        "summary": "Agent update",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/host-agent/{id}": {
      "get": {
        "operationId": "getAgentSnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get host agent snapshot details",
        "tags": [
          "Host Agent"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entities": {
      "post": {
        "description": "This endpoint retrieves entities for a given entity type along with the requested metrics.",
        "operationId": "getEntities",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves a JVM entity labeled \"custom-metrics.jar\" with metrics for memory used and blocked threads (both using a one hour granularity and a one minute granularity).": {
                  "description": "This example retrieves a JVM entity labeled \"custom-metrics.jar\" with metrics for memory used and blocked threads (both using a one hour granularity and a one minute granularity).",
                  "value": {
                    "tagFilterExpression": {
                      "type": "TAG_FILTER",
                      "entity": "NOT_APPLICABLE",
                      "name": "label",
                      "operator": "EQUALS",
                      "value": "custom-metrics.jar"
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    },
                    "pagination": {
                      "retrievalSize": 200
                    },
                    "type": "jvmRuntimePlatform",
                    "metrics": [
                      {
                        "metric": "memory.used",
                        "granularity": 3600000,
                        "aggregation": "MAX"
                      },
                      {
                        "metric": "memory.used",
                        "granularity": 600000,
                        "aggregation": "MAX"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetInfrastructureQuery"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureEntitiesResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get infrastructure entities",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entity-groups": {
      "post": {
        "description": "This endpoint groups entities for a given entity type and aggregates metrics for these groups.",
        "operationId": "getEntityGroups",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves JVM entities grouped with the same host name ordered by label, aggregating memory used and blocked threads (both using a one hour granularity and a one minute granularity).": {
                  "description": "This example retrieves JVM entities grouped with the same host name ordered by label, aggregating memory used and blocked threads (both using a one hour granularity and a one minute granularity).",
                  "value": {
                    "timeFrame": {
                      "to": 1674075565075,
                      "windowSize": 3600000
                    },
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "pagination": {
                      "retrievalSize": 20
                    },
                    "groupBy": [
                      "host.name"
                    ],
                    "type": "jvmRuntimePlatform",
                    "metrics": [
                      {
                        "metric": "memory.used",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "memory.used",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 3600000,
                        "aggregation": "MEAN"
                      },
                      {
                        "metric": "threads.blocked",
                        "granularity": 600000,
                        "aggregation": "MEAN"
                      }
                    ],
                    "order": {
                      "by": "label",
                      "direction": "ASC"
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetInfrastructureGroupsQuery"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureGroupsResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped infrastructure entities with aggregated metrics",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/entity-types": {
      "post": {
        "description": "This endpoint retrieves available entity types.",
        "operationId": "getAvailablePlugins",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves all entity types.": {
                  "description": "This example retrieves all entity types.",
                  "value": {
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetAvailablePluginsQuery"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailablePlugins"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available entity types",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/analyze/metrics": {
      "post": {
        "description": "This endpoint retrieves available metrics for an entity type.",
        "operationId": "getAvailableMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "This example retrieves all available metrics for JVM entities.": {
                  "description": "This example retrieves all available metrics for JVM entities.",
                  "value": {
                    "tagFilterExpression": {
                      "type": "EXPRESSION",
                      "logicalOperator": "AND",
                      "elements": []
                    },
                    "timeFrame": {
                      "to": 1673969562715,
                      "windowSize": 3600000
                    },
                    "query": "",
                    "type": "jvmRuntimePlatform"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GetAvailableMetricsQuery"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableMetrics"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get available metrics",
        "tags": [
          "Infrastructure Analyze"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/metrics/{plugin}": {
      "get": {
        "operationId": "getInfrastructureCatalogMetrics",
        "parameters": [
          {
            "in": "path",
            "name": "plugin",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/MetricInstance"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get metric catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions of the requested plugin.\n\n### Path Parameters:\n\n**plugin** The plugin id from [available plugins](#operation/getInfrastructureCatalogPlugins)\n\n### Optional Parameters:\n\n**filter** You can restrict the returned metric definitions by passing a filter.\n\n* `custom` to retrieve custom metric definitions only.\n* `builtin` to retrieve built-in metric definitions only.\n"
      }
    },
    "/api/infrastructure-monitoring/catalog/plugins": {
      "get": {
        "operationId": "getInfrastructureCatalogPlugins",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/PluginResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get plugin catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available plugin ids for your monitored system.\n"
      }
    },
    "/api/infrastructure-monitoring/catalog/plugins-with-custom-metrics": {
      "get": {
        "operationId": "getInfrastructureCatalogPluginsWithCustomMetrics",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/PluginResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all plugins with custom metrics catalog",
        "tags": [
          "Infrastructure Catalog"
        ]
      }
    },
    "/api/infrastructure-monitoring/catalog/search": {
      "get": {
        "operationId": "getInfrastructureCatalogSearchFields",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SearchFieldResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "get search field catalog",
        "tags": [
          "Infrastructure Catalog"
        ],
        "description": "This endpoint retrieves all available search keywords for dynamic focus queries.\n\nThese search fields can be accessed via lucene queries. Each field belongs to a context, e.g. to entity, trace or event data.\nSome fields contain a set of possible fixed values, in this case a deviant value is invalid.\n\n```\n?query={keyword}:{value}\n```\n"
      }
    },
    "/api/infrastructure-monitoring/graph/related-hosts/{snapshotId}": {
      "get": {
        "operationId": "getRelatedHosts",
        "parameters": [
          {
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Related hosts",
        "tags": [
          "Infrastructure Topology"
        ]
      }
    },
    "/api/infrastructure-monitoring/metrics": {
      "post": {
        "operationId": "getInfrastructureMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCombinedMetrics"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfrastructureMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get infrastructure metrics",
        "tags": [
          "Infrastructure Metrics"
        ],
        "description": "- The **offline** parameter is used to allow deeper visibility into snapshots. Set to `false`, the query will return all snapshots that are still available on the given **to** timestamp. However, set to `true`, the query will return all snapshots that have been active within the time window, this must at least include the online result and snapshots terminated within this time.\r\n"
      }
    },
    "/api/infrastructure-monitoring/monitoring-state": {
      "get": {
        "operationId": "getMonitoringState",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringState"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Monitored host count",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/snapshots": {
      "get": {
        "operationId": "getSnapshots",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "plugin",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "offline",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Search snapshots",
        "tags": [
          "Infrastructure Resources"
        ],
        "description": "These APIs can be used to retrieve information about hosts, processes, JVMs and other entities that we are calling snapshots. A snapshot represents static information about an entity as it was at a specific point in time. To clarify:\r\n**Static information** is any information which is seldom changing, e.g. process IDs, host FQDNs or a list of host hard disks. The counterpart to static information are metrics which have a much higher change rate, e.g. host CPU usage or JVM garbage collection activity. Snapshots only contain static information.\r\n- Snapshots are **versioned** and represent an entity's state for a specific point in time. While snapshots only contain static information, even that information may change. For example you may add another hard disk to a server. For such a change, a new snapshot would be created.\r\n- The **size** parameter can be used in order to limit the maximum number of retrieved snapshots.\r\n- The **offline** parameter is used to allow deeper visibility into snapshots. Set to `false`, the query will return all snapshots that are still available on the given **to** timestamp. However, set to `true`, the query will return all snapshots that have been active within the time window, this must at least include the online result and snapshots terminated within this time.\r\n"
      }
    },
    "/api/infrastructure-monitoring/snapshots/{id}": {
      "get": {
        "operationId": "getSnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "windowSize",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get snapshot details",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/software/versions": {
      "get": {
        "description": "Retrieve information about the software you are running. This includes runtime and package manager information.\n\nThe `name`, `version`, `origin` and `type` parameters are optional filters that can be used to reduce the result data set.",
        "operationId": "softwareVersions",
        "parameters": [
          {
            "in": "query",
            "name": "time",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "origin",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SoftwareVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get installed software",
        "tags": [
          "Infrastructure Resources"
        ]
      }
    },
    "/api/infrastructure-monitoring/topology": {
      "get": {
        "operationId": "getTopology",
        "parameters": [
          {
            "in": "query",
            "name": "includeData",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topology"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Gets the infrastructure topology",
        "tags": [
          "Infrastructure Topology"
        ]
      }
    },
    "/api/instana/health": {
      "get": {
        "operationId": "getHealthState",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthState"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Basic health traffic light",
        "tags": [
          "Health"
        ],
        "description": "The returned JSON object will provide a health property which contains a simple traffic light (GREEN/YELLO/RED). For any non-Green-state a list \nof reasons will be provided in the messages array.\n\nPossible messages:\n* No data being processed\n* No data arriving from agents\n"
      }
    },
    "/api/instana/usage/api": {
      "get": {
        "operationId": "getAllUsage",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage by customer",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/api/{day}/{month}/{year}": {
      "get": {
        "operationId": "getUsagePerDay",
        "parameters": [
          {
            "in": "path",
            "name": "day",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage day / month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/api/{month}/{year}": {
      "get": {
        "operationId": "getUsagePerMonth",
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "API usage month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/hosts/{day}/{month}/{year}": {
      "get": {
        "operationId": "getHostsPerDay",
        "parameters": [
          {
            "in": "path",
            "name": "day",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "Host count day / month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/usage/hosts/{month}/{year}": {
      "get": {
        "operationId": "getHostsPerMonth",
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UsageResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanViewAccountAndBillingInformation"
            ]
          }
        ],
        "summary": "Host count month / year",
        "tags": [
          "Usage"
        ]
      }
    },
    "/api/instana/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanaVersionInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "API version information",
        "tags": [
          "Health"
        ]
      }
    },
    "/api/mobile-app-monitoring/analyze/beacon-groups": {
      "post": {
        "operationId": "getMobileAppBeaconGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppBeaconGroups"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileAppBeaconGroupsResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped beacon metrics",
        "tags": [
          "Mobile App Analyze"
        ]
      }
    },
    "/api/mobile-app-monitoring/analyze/beacons": {
      "post": {
        "operationId": "getMobileAppBeacons",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppBeacons"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileAppBeaconResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all beacons",
        "tags": [
          "Mobile App Analyze"
        ]
      }
    },
    "/api/mobile-app-monitoring/catalog": {
      "get": {
        "operationId": "getMobileAppTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "beaconType",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "400": {
            "description": "When the combination of beaconType and useCase is unsupported/unknown."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get mobile app tag catalog",
        "tags": [
          "Mobile App Catalog"
        ]
      }
    },
    "/api/mobile-app-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getMobileAppMetricCatalog",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/MobileAppMonitoringMetricDescription"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Metric catalog",
        "tags": [
          "Mobile App Catalog"
        ]
      }
    },
    "/api/mobile-app-monitoring/config": {
      "get": {
        "operationId": "getMobileAppConfig",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/MobileApp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get configured mobile apps",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "post": {
        "operationId": "postMobileAppConfig",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApp"
                }
              }
            },
            "description": "Mobile App successfully configured"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured mobile app."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Configure new mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}": {
      "delete": {
        "operationId": "deleteMobileAppConfig",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Mobile app successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Remove mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "renameMobileAppConfig",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApp"
                }
              }
            },
            "description": "Mobile app successfully renamed"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured mobile app."
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Rename mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/geo-location": {
      "get": {
        "operationId": "getMobileAppGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get geo location configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "updateMobileAppGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeoLocationConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Update geo location configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/geo-mapping-rules": {
      "get": {
        "operationId": "getMobileAppGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get custom geo mapping rules for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "setMobileAppGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "type": "string",
                "example": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Set custom geo mapping rules for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/config/{mobileAppId}/ip-masking": {
      "get": {
        "operationId": "getMobileAppIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Get IP masking configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      },
      "put": {
        "operationId": "updateMobileAppIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "mobileAppId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpMaskingConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureMobileAppMonitoring"
            ]
          }
        ],
        "summary": "Update IP masking configuration for mobile app",
        "tags": [
          "Mobile App Configuration"
        ]
      }
    },
    "/api/mobile-app-monitoring/metrics": {
      "post": {
        "deprecated": true,
        "operationId": "getMobileAppBeaconMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppMetrics"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileAppMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/mobile-app-monitoring/session": {
      "get": {
        "operationId": "getSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            },
            "style": "matrix"
          },
          {
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            },
            "style": "matrix"
          }
        ],
        "responses": {
          "400": {
            "description": "Missing session id or missing timestamp"
          },
          "404": {
            "description": "Mobile app not found"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/MobileAppMonitoringBeacon"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get session",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/mobile-app-monitoring/v2/metrics": {
      "post": {
        "operationId": "getMobileAppBeaconMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMobileAppMetricsV2"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Mobile App Metrics"
        ]
      }
    },
    "/api/releases": {
      "get": {
        "operationId": "getAllReleases",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ReleaseWithMetadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Get all releases",
        "tags": [
          "Releases"
        ],
        "description": "This endpoint exposes the Releases functionality.\n\nThese APIs can be used to create, update, delete and fetch already existing releases.\n\n## Mandatory Parameters:\n\n**releaseId:** A unique identifier assigned to each release.\n\n## Optional Parameters:\n\n**name:** Name of the exact release you want to retrieve, eg. \"Release-161\", \"Release-162\".\n\n**start:** Start time of the particular release (as UNIX timestamp in milliseconds).\n\n**from:** Filters the releases to retrieve only the releases which have \"start\" time greater than or equal to this value (as UNIX timestamp in milliseconds).\n\n**to:** Filters the releases to retrieve only the releases which have \"start\" time lesser than or equal to this value (as UNIX timestamp in milliseconds).\n\n**maxResults:** Maximum number of releases to be retrieved.\n\n## Defaults:\n\n**from, to, maxResults:** By default these parameters are not set.  "
      },
      "post": {
        "operationId": "postRelease",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Release"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Create release",
        "tags": [
          "Releases"
        ]
      }
    },
    "/api/releases/{releaseId}": {
      "delete": {
        "operationId": "deleteRelease",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Delete release",
        "tags": [
          "Releases"
        ]
      },
      "get": {
        "operationId": "getRelease",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Get release",
        "tags": [
          "Releases"
        ]
      },
      "put": {
        "operationId": "putRelease",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Release"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseWithMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "CanConfigureReleases"
            ]
          }
        ],
        "summary": "Update release",
        "tags": [
          "Releases"
        ]
      }
    },
    "/api/settings/accesslog": {
      "get": {
        "operationId": "getAccessLogs",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLogResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ViewAuditLog"
            ]
          }
        ],
        "summary": "Access log",
        "tags": [
          "Audit Log"
        ]
      }
    },
    "/api/settings/apdex": {
      "get": {
        "operationId": "getAllApdexConfigurations",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApdexConfiguration"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get All Apdex Configurations",
        "tags": [
          "Apdex Settings"
        ]
      },
      "post": {
        "operationId": "createApdexConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApdexConfigurationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApdexConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/apdex/{entityType}/{entityId}": {
      "get": {
        "operationId": "getApdexConfigurationsForEntityTypeAndId",
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPLICATION",
                "WEBSITE"
              ],
              "example": null
            }
          },
          {
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApdexConfiguration"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get all Apdex configurations for entity type and entity id",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/apdex/{id}": {
      "delete": {
        "operationId": "deleteApdexConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      },
      "get": {
        "operationId": "getApdexConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApdexConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get Apdex Configuration",
        "tags": [
          "Apdex Settings"
        ]
      }
    },
    "/api/settings/api-tokens": {
      "get": {
        "operationId": "getApiTokens",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApiToken"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureApiTokens"
            ]
          }
        ],
        "summary": "All API tokens",
        "tags": [
          "API Token"
        ]
      },
      "post": {
        "operationId": "postApiToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "If token already exist on other environment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureApiTokens"
            ]
          }
        ],
        "summary": "Create an API token",
        "tags": [
          "API Token"
        ]
      }
    },
    "/api/settings/api-tokens/{internalId}": {
      "delete": {
        "operationId": "deleteApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureApiTokens"
            ]
          }
        ],
        "summary": "Delete API token",
        "tags": [
          "API Token"
        ]
      },
      "get": {
        "operationId": "getApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureApiTokens"
            ]
          }
        ],
        "summary": "API token",
        "tags": [
          "API Token"
        ]
      },
      "put": {
        "operationId": "putApiToken",
        "parameters": [
          {
            "in": "path",
            "name": "internalId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "If token already exist on other environment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureApiTokens"
            ]
          }
        ],
        "summary": "Create or update an API token",
        "tags": [
          "API Token"
        ]
      }
    },
    "/api/settings/auditlog": {
      "get": {
        "operationId": "getAuditLogs",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogUiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ViewAuditLog"
            ]
          }
        ],
        "summary": "Audit log",
        "tags": [
          "Audit Log"
        ]
      }
    },
    "/api/settings/invitations": {
      "delete": {
        "operationId": "revokePendingInvitation",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "Revoke pending invitation",
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "getInvitations",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/InvitationResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "All pending invitations",
        "tags": [
          "User"
        ]
      },
      "post": {
        "operationId": "inviteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "Send user invitations",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/maintenance": {
      "get": {
        "operationId": "getMaintenanceConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ValidatedMaintenanceConfigWithStatus"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "All maintenance configurations",
        "tags": [
          "Maintenance Configuration"
        ]
      }
    },
    "/api/settings/maintenance/{id}": {
      "delete": {
        "operationId": "deleteMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Delete maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      },
      "get": {
        "operationId": "getMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      },
      "put": {
        "operationId": "putMaintenanceConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Maintenance config has been created or updated, and successfully scheduled immediately if needed"
          },
          "202": {
            "description": "Maintenance config has been created or updated, but could not to be scheduled immediately. It will therefore be scheduled during the next auto-refresh with a delay of up to 4 minutes."
          },
          "400": {
            "description": "Invalid JSON or mismatching IDs have been provided"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceConfigWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureCustomAlerts"
            ]
          }
        ],
        "summary": "Create or update maintenance configuration",
        "tags": [
          "Maintenance Configuration"
        ]
      }
    },
    "/api/settings/rbac/groups": {
      "get": {
        "operationId": "getGroups",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApiGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Get groups",
        "tags": [
          "Groups"
        ],
        "description": "Retrieve the list of all groups on the tenant together with the `Permission Set` for the tenant unit.\n\nThe `Permission Set` object contains a set of permissions applied to the group.\n\nIn case `permissions` include the entry `RESTRICTED_ACCESS`, this group will have a scope limited by its areas.\n\nThe areas are included inside the `permissionSet`.\n\nWhen `permissions` contains `RESTRICTED_ACCESS`, permissions with preffix `ACCESS_*`are applied.\n\nThe scopeRoleId is a fixed value for each area type:\n\n| Area                    | value         |\n| ----------------------- | ------------- |\n| applicationIds          | -100          |\n| kubernetesClusterUUIDs  | -200          |\n| kubernetesNamespaceUIDs | -300          |\n| websiteIds              | -400          |\n| mobileAppIds            | -500          |\n| infraDfqFilter          | -600          |\n\nFor example:\n\n```\n[\n    {\n        \"id\": \"7hwdhtt7TU2CJDgYXgwwww\",\n        \"name\": \"Scoped Group\",\n        \"members\": [\n            {\n                \"userId\": \"61892cfdfcffab03016b2950\",\n                \"email\": \"jhon@example.com\"\n            }\n        ],\n        \"permissionSet\": {\n        \"permissions\": [\n            \"CAN_VIEW_LOGS\",\n            \"ACCESS_APPLICATIONS\",\n            \"ACCESS_KUBERNETES\",\n            \"CAN_VIEW_TRACE_DETAILS\",\n            \"ACCESS_MOBILE_APPS\",\n            \"RESTRICTED_ACCESS\",\n            \"CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS\"\n        ],\n        \"applicationIds\": [\n            {\n            \"scopeId\": \"1qvWgVfLTNqi9gGTcCaNUw\",\n            \"scopeRoleId\": \"-100\"\n            }\n        ],\n        \"kubernetesClusterUUIDs\": [\n            {\n            \"scopeId\": \"induced\",\n            \"scopeRoleId\": \"-200\"\n            }\n        ],\n        \"kubernetesNamespaceUIDs\": [],\n        \"websiteIds\": [\n        ],\n        \"mobileAppIds\": [\n            {\n            \"scopeId\": \"GYSddOsgTZGtLx7wI8FZcQ\",\n            \"scopeRoleId\": \"-500\"\n            }\n        ],\n        \"infraDfqFilter\": {\n            \"scopeId\": \"production\",\n            \"scopeRoleId\": \"-600\"\n        }\n    }\n]\n```\nIn this case `Scoped Group` has no access to websites due to having `RESTRICTED_ACCESS` but not `ACCESS_WEBSITES`.\n\nAlso due to having `RESTRICTED_ACCESS`, the only visible application is the one with this id: `1qvWgVfLTNqi9gGTcCaNUw`.\n\nSame applies to `kubernetesClusterUUIDs`, `kubernetesNamespaceUIDs`, `mobileAppIds`and `infraDfqFilter`, with the only difference is that `infraDfqFilter`\nuses a filter \"production\" instead of an id. "
      },
      "post": {
        "operationId": "createGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Create group",
        "tags": [
          "Groups"
        ],
        "description": "Creates a group on the tenant. Each group entry also needs a `Permission Set` per unit.\n\nThe `Permission Set` object contains a set of permissions applied to the group.\n\nIn case `permissions` include the entry `RESTRICTED_ACCESS`, this group will have a scope limited by its areas.\n\nWhen `permissions` contains `RESTRICTED_ACCESS`, permissions with preffix `ACCESS_*`are applied.\n\nPossible access permissions values are:\n\n- ACCESS_APPLICATIONS\n- ACCESS_KUBERNETES\n- ACCESS_MOBILE_APPS\n- ACCESS_WEBSITES\n\nThe `id` value for the group is ignored, a new id is generated.\n\nThe `scopeRoleId` is ignored, the id corresponding to the area is used.\n\nThe `scopeId` is the id for the corresponding resource."
      }
    },
    "/api/settings/rbac/groups/user/{email}": {
      "get": {
        "operationId": "getGroupsByUser",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/ApiGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Get groups of a single user",
        "tags": [
          "Groups"
        ],
        "description": "Returns a list of all groups a user belongs to. This includes data from these groups, the `members`, the `name` and the `Permission set`."
      }
    },
    "/api/settings/rbac/groups/{groupId}/permissions": {
      "put": {
        "operationId": "addPermissionsOnGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Add permissions to group",
        "tags": [
          "Groups"
        ],
        "description": "Add a permission to a group. Permissions are strings associated with the group that some resources requires to fulfill requests.\n\nExamples of `Permissions`:\n\n- `CAN_CONFIGURE_SERVICE_MAPPING`\n- `CAN_CONFIGURE_APPLICATIONS`\n- `CAN_CONFIGURE_EUM_APPLICATIONS`\n- `CAN_CONFIGURE_MOBILE_APP_MONITORING`\n- `CAN_CONFIGURE_USERS`\n- `CAN_INSTALL_NEW_AGENTS`\n- `CAN_SEE_USAGE_INFORMATION`\n- `CAN_CONFIGURE_INTEGRATIONS`\n- `CAN_SEE_ON_PREM_LICENE_INFORMATION`\n- `CAN_CONFIGURE_CUSTOM_ALERTS`\n- `CAN_CONFIGURE_API_TOKENS`\n- `CAN_CONFIGURE_PERSONAL_API_TOKENS`\n- `CAN_CONFIGURE_AGENT_RUN_MODE`\n- `CAN_VIEW_AUDIT_LOG`\n- `CAN_CONFIGURE_AGENTS`\n- `CAN_CONFIGURE_AUTHENTICATION_METHODS`\n- `CAN_CONFIGURE_TEAMS`\n- `CAN_CONFIGURE_RELEASES`\n- `CAN_CONFIGURE_LOG_MANAGEMENT`\n- `CAN_CREATE_PUBLIC_CUSTOM_DASHBOARDS`\n- `CAN_VIEW_LOGS`\n- `CAN_VIEW_TRACE_DETAILS`\n- `CAN_CONFIGURE_SESSION_SETTINGS`\n- `CAN_CONFIGURE_SERVICE_LEVEL_INDICATORS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_PAYLOAD`\n- `CAN_CONFIGURE_GLOBAL_ALERT_CONFIGS`\n- `CAN_VIEW_ACCOUNT_AND_BILLING_INFORMATION`\n- `CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS`\n- `RESTRICTED_ACCESS`\n- `ACCESS_APPLICATIONS`\n- `ACCESS_KUBERNETES`\n- `ACCESS_WEBSITES`\n- `ACCESS_MOBILE_APPS`\n"
      }
    },
    "/api/settings/rbac/groups/{groupId}/users": {
      "put": {
        "operationId": "addUsersToGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Add users to group",
        "tags": [
          "Groups"
        ],
        "description": "Add one or more users to a group. The array contains the ids of the users to be added."
      }
    },
    "/api/settings/rbac/groups/{id}": {
      "delete": {
        "operationId": "deleteGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Delete group",
        "tags": [
          "Groups"
        ]
      },
      "get": {
        "operationId": "getGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Get group",
        "tags": [
          "Groups"
        ],
        "description": "Returns group data, including the `Permission set`. See [get groups](#operation/getGroups) for more details."
      },
      "put": {
        "operationId": "updateGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Update group",
        "tags": [
          "Groups"
        ],
        "description": "Add a permission to a group. Permissions are strings associated with the group that some resources requires to fulfill requests.\n\nExamples of `Permissions`:\n\n- `CAN_CONFIGURE_SERVICE_MAPPING`\n- `CAN_CONFIGURE_APPLICATIONS`\n- `CAN_CONFIGURE_EUM_APPLICATIONS`\n- `CAN_CONFIGURE_MOBILE_APP_MONITORING`\n- `CAN_CONFIGURE_USERS`\n- `CAN_INSTALL_NEW_AGENTS`\n- `CAN_SEE_USAGE_INFORMATION`\n- `CAN_CONFIGURE_INTEGRATIONS`\n- `CAN_SEE_ON_PREM_LICENE_INFORMATION`\n- `CAN_CONFIGURE_CUSTOM_ALERTS`\n- `CAN_CONFIGURE_API_TOKENS`\n- `CAN_CONFIGURE_PERSONAL_API_TOKENS`\n- `CAN_CONFIGURE_AGENT_RUN_MODE`\n- `CAN_VIEW_AUDIT_LOG`\n- `CAN_CONFIGURE_AGENTS`\n- `CAN_CONFIGURE_AUTHENTICATION_METHODS`\n- `CAN_CONFIGURE_TEAMS`\n- `CAN_CONFIGURE_RELEASES`\n- `CAN_CONFIGURE_LOG_MANAGEMENT`\n- `CAN_CREATE_PUBLIC_CUSTOM_DASHBOARDS`\n- `CAN_VIEW_LOGS`\n- `CAN_VIEW_TRACE_DETAILS`\n- `CAN_CONFIGURE_SESSION_SETTINGS`\n- `CAN_CONFIGURE_SERVICE_LEVEL_INDICATORS`\n- `CAN_CONFIGURE_GLOBAL_ALERT_PAYLOAD`\n- `CAN_CONFIGURE_GLOBAL_ALERT_CONFIGS`\n- `CAN_VIEW_ACCOUNT_AND_BILLING_INFORMATION`\n- `CAN_EDIT_ALL_ACCESSIBLE_CUSTOM_DASHBOARDS`\n- `RESTRICTED_ACCESS`\n- `ACCESS_APPLICATIONS`\n- `ACCESS_KUBERNETES`\n- `ACCESS_WEBSITES`\n- `ACCESS_MOBILE_APPS`\n"
      }
    },
    "/api/settings/rbac/groups/{id}/user/{userId}": {
      "delete": {
        "operationId": "removeUserFromGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureGroups"
            ]
          }
        ],
        "summary": "Remove user from group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/settings/rbac/mappings": {
      "get": {
        "operationId": "getGroupMappings",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/GroupMapping"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all group mappings",
        "tags": [
          "Groups"
        ],
        "description": "If mappings between groups on the identity provider (LDAP, OIDC, SAML) and Instana groups where configured, this will return a list of those mappings.\n\nThis can be configured through the [api](#operation/createGroupMapping) or on Instana graphical user interface at Settings > Authentication > IDENTITY PROVIDERS > Group Mapping."
      },
      "post": {
        "operationId": "createGroupMapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Create group mapping",
        "tags": [
          "Groups"
        ],
        "description": "Creates a mapping between a group from the IdP (LDAP, OIDC, SAML) and an Instana group.\n\nIf the IdP is configured and mappings are enabled, the `key` `value` pairs a user sent by the idp will be evaluated every time this user logs in.\n\nIf they match the mapping, the user will be assigned to the group corresponding to the `groupId`.\n\nInside the payload, the `id` for the mapping is ignored, and instead, Instana generates a new id."
      }
    },
    "/api/settings/rbac/mappings/{id}": {
      "delete": {
        "operationId": "deleteGroupMapping",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Delete group mapping",
        "tags": [
          "Groups"
        ]
      },
      "put": {
        "operationId": "updateGroupMapping",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Update group mapping",
        "tags": [
          "Groups"
        ],
        "description": "See [creating group mapping](#operation/createGroupMapping)"
      }
    },
    "/api/settings/session": {
      "delete": {
        "operationId": "deleteSessionSettings",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Delete session settings",
        "tags": [
          "Session Settings"
        ]
      },
      "get": {
        "operationId": "getSessionSettings",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Get session settings",
        "tags": [
          "Session Settings"
        ]
      },
      "put": {
        "operationId": "setSessionSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionSettings"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureSessionSettings"
            ]
          }
        ],
        "summary": "Configure session settings",
        "tags": [
          "Session Settings"
        ]
      }
    },
    "/api/settings/sli": {
      "get": {
        "deprecated": true,
        "operationId": "getAllSliConfigs",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLI Configs",
        "tags": [
          "SLI Settings"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "createSliConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Create SLI Config",
        "tags": [
          "SLI Settings"
        ],
        "description": "This endpoint creates the Service Level Indicator Configuration\n\n## Mandatory Parameters:\n\n- **id** A unique identifier for each SLI configuration\n\n- **sliName:** Name for the SLI configuration\n\n- **sliEntity:** Entity of the SLI configuration\n\n### SLI Entity specific parameters\n\nDepending on the chosen `sliType` in the `sliEntity`, there are further required parameters:\n\n#### Application SLI entity\n\nThis option can be used to create a Time-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n- **metricConfiguration.metricName:** The metric name on which to compute the SLI\n\n- **metricConfiguration.metricAggregation:** The aggregation of the metric\n\n- **metricConfiguration.threshold:** Threshold for the metric\n\n#### Availability SLI entity\n\nThis opetion can be used to create an Event-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n## Deprecated Parameters for Availability SLI entity:\n\n- **sliEntity.serviceId:** The ID if the Service in he context of an Application Perspective\n\n- **sliEntity.endpointId:** The ID of an Endpoint belonging to a Service\n\n- **sliEntity.goodEventFilters:** The list of TagFilters to match good events / calls\n\n- **sliEntity.badEventFilters:** The list of TagFilters to match bad events / calls\n\nAll of these filters can be included using the list of TagFilterExpressions via **sliEntity.goodEventFilterExpression** and **sliEntity.badEventFilterExpression**.\nThese parameters will be removed in the upcoming releases.\n"
      }
    },
    "/api/settings/sli/{id}": {
      "delete": {
        "deprecated": true,
        "operationId": "deleteSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Delete SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "get": {
        "deprecated": true,
        "operationId": "getSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "updateSliConfig",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Update SLI Config",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/settings/synthetic-calls": {
      "delete": {
        "operationId": "deleteSyntheticCall",
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Delete synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      },
      "get": {
        "operationId": "getSyntheticCalls",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticCallWithDefaultsConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      },
      "put": {
        "operationId": "updateSyntheticCall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticCallConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureServiceMapping"
            ]
          }
        ],
        "summary": "Update synthetic call configurations",
        "tags": [
          "Synthetic Calls"
        ]
      }
    },
    "/api/settings/users": {
      "get": {
        "operationId": "getUsers",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UserResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "All users (without invitations)",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/overview": {
      "get": {
        "operationId": "getUsersIncludingInvitations",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "All users (incl. invitations)",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/{email}": {
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "Change user name of single user",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/users/{userId}": {
      "delete": {
        "operationId": "removeUserFromTenant",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "Remove user from tenant",
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/UserResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureUsers"
            ]
          }
        ],
        "summary": "Get single user",
        "tags": [
          "User"
        ]
      }
    },
    "/api/settings/v2/sli": {
      "get": {
        "operationId": "getAllSliConfigsV2",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get All SLI Configs",
        "tags": [
          "SLI Settings"
        ]
      },
      "post": {
        "operationId": "createSliConfigV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SliConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Create SLI Config",
        "tags": [
          "SLI Settings"
        ],
        "description": "This endpoint creates the Service Level Indicator Configuration\n\n## Mandatory Parameters:\n\n- **id** A unique identifier for each SLI configuration\n\n- **sliName:** Name for the SLI configuration\n\n- **sliEntity:** Entity of the SLI configuration\n\n### SLI Entity specific parameters\n\nDepending on the chosen `sliType` in the `sliEntity`, there are further required parameters:\n\n#### Application SLI entity\n\nThis option can be used to create a Time-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n- **metricConfiguration.metricName:** The metric name on which to compute the SLI\n\n- **metricConfiguration.metricAggregation:** The aggregation of the metric\n\n- **metricConfiguration.threshold:** Threshold for the metric\n\n#### Availability SLI entity\n\nThis opetion can be used to create an Event-Based SLI\n\n- **sliEntity.applicationId:** The Id of the Application Perspective\n\n- **sliEntity.boundaryScope:** Boundary scope of the Application Perspective\n\n## Deprecated Parameters for Availability SLI entity:\n\n- **sliEntity.serviceId:** The ID if the Service in he context of an Application Perspective\n\n- **sliEntity.endpointId:** The ID of an Endpoint belonging to a Service\n\n- **sliEntity.goodEventFilters:** The list of TagFilters to match good events / calls\n\n- **sliEntity.badEventFilters:** The list of TagFilters to match bad events / calls\n\nAll of these filters can be included using the list of TagFilterExpressions via **sliEntity.goodEventFilterExpression** and **sliEntity.badEventFilterExpression**.\nThese parameters will be removed in the upcoming releases.\n"
      }
    },
    "/api/settings/v2/sli/{entityType}/{entityId}": {
      "get": {
        "operationId": "getSliConfigsForEntityTypeAndIdV2",
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPLICATION",
                "WEBSITE"
              ],
              "example": null
            }
          },
          {
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get all SLI configs for entity type and entity id",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/settings/v2/sli/{id}": {
      "delete": {
        "operationId": "deleteSliConfigV2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Delete SLI Config",
        "tags": [
          "SLI Settings"
        ]
      },
      "get": {
        "operationId": "getSliConfigV2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliConfigurationWithLastUpdated"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Get SLI Config",
        "tags": [
          "SLI Settings"
        ]
      }
    },
    "/api/sli/report/{sliId}": {
      "get": {
        "operationId": "getSli",
        "parameters": [
          {
            "in": "path",
            "name": "sliId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "slo",
            "schema": {
              "type": "number",
              "format": "double",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SliReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Generate SLI report",
        "tags": [
          "SLI Report"
        ]
      }
    },
    "/api/slo/report/{sloId}": {
      "get": {
        "operationId": "getSlo",
        "parameters": [
          {
            "in": "path",
            "name": "sloId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SliReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "canConfigureServiceLevelIndicators"
            ]
          }
        ],
        "summary": "Generate SLI report",
        "tags": [
          "SLO Report"
        ]
      }
    },
    "/api/synthetics/catalog": {
      "get": {
        "operationId": "getSyntheticTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get synthetic tag catalog",
        "tags": [
          "Synthetic Catalog"
        ]
      }
    },
    "/api/synthetics/results": {
      "post": {
        "operationId": "getSyntheticResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTestResult"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback results",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/list": {
      "post": {
        "operationId": "getSyntheticResultList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTestResultList"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic test playback results",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/locationsummarylist": {
      "post": {
        "operationId": "getLocationSummaryList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTestResultBase"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic locations with last run test on each location data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/testsummarylist": {
      "post": {
        "operationId": "getTestSummaryList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTestSummaryResult"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get a list of Synthetic tests with success rate and average response time data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}": {
      "get": {
        "operationId": "getSyntheticResultMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback detail result description(metadata)",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}/detail": {
      "get": {
        "operationId": "getSyntheticResultDetailData",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultDetailData"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get Synthetic test playback result detail data",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/results/{testid}/{testresultid}/file": {
      "get": {
        "operationId": "getSyntheticResultDetailDataFile",
        "parameters": [
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "testresultid",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/octet-stream": {}
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Download the synthetic test playback result detail data file",
        "tags": [
          "Synthetic Test Playback Results"
        ]
      }
    },
    "/api/synthetics/settings/locations": {
      "get": {
        "operationId": "getSyntheticLocations",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SyntheticLocation"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Synthetic locations",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/locations/{id}": {
      "delete": {
        "operationId": "deleteSyntheticLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Delete Synthetic location",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "get": {
        "operationId": "getSyntheticLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticLocation"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Synthetic location",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/synthetics/settings/tests": {
      "get": {
        "operationId": "getSyntheticTests",
        "parameters": [
          {
            "in": "query",
            "name": "applicationId",
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "locationId",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/SyntheticTest"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "All Synthetic tests",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "post": {
        "operationId": "createSyntheticTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Create a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API endpoint creates a Synthetic Test.\n\n## Sample script and payload: \n- A sample script to create a simple Ping API test\n\n```\ncurl -k -v -X POST \\\nhttps://<Host>/api/synthetics/settings/tests \\\n-H 'authorization: apiToken <Token>' \\\n-H 'content-type: application/json' \\\n-d '{\n    \"label\":\"Test_SimplePing\",\n    \"description\":\"this is to test a simple ping API\",\n    \"serviceId\":\"serviceId001\",\n    \"applicationId\":\"applicationId001\",\n    \"active\":true,\n    \"testFrequency\":1,\n    \"playbackMode\":\"Simultaneous\",\n    \"locations\":[\n        \"saas_instana_test\"\n    ],\n    \"configuration\":{\n        \"syntheticType\":\"HTTPAction\",\n        \"url\":\"https://httpbin.org/post\",\n        \"operation\":\"POST\",\n        \"headers\":{\n            \"Content-Type\":\"text/plain\"\n        },\n        \"body\":\"Hello World!\",\n        \"validationString\":\"Hello World!\"\n    },\n    \"customProperties\":{\n        \"Team\":\"DevTeam\",\n        \"Purpose\":\"Demo\"\n    }\n  }'\n```"
      }
    },
    "/api/synthetics/settings/tests/{id}": {
      "delete": {
        "operationId": "deleteSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Delete a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "get": {
        "operationId": "getSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "A Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      },
      "patch": {
        "operationId": "patchSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Patch a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ],
        "description": "This API endpoint updates selected attributes of a Synthetic Test.\n\n- All attributes listed as in the schema, including the required ones, are optional for this call.\n\n## Sample script and payload: \n- A sample script to patch a simple Ping API test to disable it.\n\n```\ncurl -k -v -X PATCH \\\nhttps://<Host>/api/synthetics/settings/tests/Ilfs9bW97KkTxuyGtxBF \\\n-H 'authorization: apiToken <Token>' \\\n-H 'content-type: application/json' \\\n-d '{\n    \"active\":false\n  }'\n```"
      },
      "put": {
        "operationId": "updateSyntheticTest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticTest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticTest"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Update a Synthetic test",
        "tags": [
          "Synthetic Settings"
        ]
      }
    },
    "/api/website-monitoring/analyze/beacon-groups": {
      "post": {
        "operationId": "getBeaconGroups",
        "parameters": [
          {
            "in": "query",
            "name": "fillTimeSeries",
            "schema": {
              "type": "boolean",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteBeaconGroups"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteBeaconGroupsResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get grouped beacon metrics",
        "tags": [
          "Website Analyze"
        ]
      }
    },
    "/api/website-monitoring/analyze/beacons": {
      "post": {
        "operationId": "getBeacons",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteBeacons"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteBeaconResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all beacons",
        "tags": [
          "Website Analyze"
        ]
      }
    },
    "/api/website-monitoring/catalog": {
      "get": {
        "operationId": "getWebsiteTagCatalog",
        "parameters": [
          {
            "in": "query",
            "name": "beaconType",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "useCase",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROUPING",
                "FILTERING",
                "SMART_ALERTS",
                "SMART_ALERTS_LOGS",
                "SMART_ALERTS_ADAPTIVE_BASELINE",
                "SMART_ALERTS_CUSTOM_PAYLOAD",
                "SLI_MANAGEMENT",
                "APPLICATION_CONFIG",
                "APPLICATION_CONFIG_BLUEPRINT"
              ],
              "example": null
            }
          }
        ],
        "responses": {
          "400": {
            "description": "When the combination of beaconType and useCase is unsupported/unknown."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCatalog"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get website tag catalog",
        "tags": [
          "Website Catalog"
        ]
      }
    },
    "/api/website-monitoring/catalog/metrics": {
      "get": {
        "operationId": "getWebsiteCatalogMetrics",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/WebsiteMonitoringMetricDescription"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Metric catalog",
        "tags": [
          "Website Catalog"
        ],
        "description": "This endpoint retrieves all available metric definitions for website monitoring.\n"
      }
    },
    "/api/website-monitoring/catalog/tags": {
      "get": {
        "operationId": "getWebsiteCatalogTags",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get all existing website tags",
        "tags": [
          "Website Catalog"
        ],
        "description": "This endpoint retrieves all available tags for your monitored system.\n\nThese tags can be used to group metric results.\n```\n\"group\": {\n  \"groupbyTag\": \"beacon.page.name\"\n}\n```\n\nThese tags can be used to filter metric results.\n```\n\"tagFilters\": [{\n\t\"name\": \"beacon.website.name\",\n\t\"operator\": \"EQUALS\",\n\t\"value\": \"example\"\n}]\n```\n"
      }
    },
    "/api/website-monitoring/config": {
      "get": {
        "operationId": "getWebsites",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/Website"
                  }
                }
              }
            }
          }
        },
        "summary": "Get configured websites",
        "tags": [
          "Website Configuration"
        ]
      },
      "post": {
        "operationId": "createWebsite",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            },
            "description": "Website successfully configured"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured website"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Configure new website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}": {
      "delete": {
        "operationId": "deleteWebsite",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Website successfully removed"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Remove website",
        "tags": [
          "Website Configuration"
        ]
      },
      "get": {
        "operationId": "getWebsite",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            }
          }
        },
        "summary": "Get configured website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "renameWebsite",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            },
            "description": "Website successfully renamed"
          },
          "400": {
            "description": "Missing name query parameter or name already used for a configured website"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Rename website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/geo-location": {
      "get": {
        "operationId": "getWebsiteGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get geo location configuration for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "updateWebsiteGeoLocationConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeoLocationConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoLocationConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Update geo location configuration for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/geo-mapping-rules": {
      "get": {
        "operationId": "getWebsiteGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get custom geo mapping rules for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "setWebsiteGeoMappingRules",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "type": "string",
                "example": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Set custom geo mapping rules for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/ip-masking": {
      "get": {
        "operationId": "getWebsiteIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Get IP masking configuration for website",
        "tags": [
          "Website Configuration"
        ]
      },
      "put": {
        "operationId": "updateWebsiteIpMaskingConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpMaskingConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpMaskingConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Update IP masking configuration for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/sourcemap-upload/{sourceMapConfigId}/clear": {
      "put": {
        "operationId": "clearSourceMapUploadConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "sourceMapConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Source map files in the source map upload configuration successfully cleared"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Clear source map files for source map upload configuration",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/config/{websiteId}/sourcemap-upload/{sourceMapConfigId}/form": {
      "put": {
        "operationId": "uploadSourceMapFile",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          },
          {
            "in": "path",
            "name": "sourceMapConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "example": null,
                "properties": {
                  "fileFormat": {
                    "type": "string",
                    "example": null
                  },
                  "sourceMap": {
                    "type": "string",
                    "format": "binary",
                    "example": null
                  },
                  "url": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceMapUploadConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "ConfigureEumApplications"
            ]
          }
        ],
        "summary": "Upload source map file for website",
        "tags": [
          "Website Configuration"
        ]
      }
    },
    "/api/website-monitoring/metrics": {
      "post": {
        "deprecated": true,
        "operationId": "getBeaconMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteMetrics"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteMetricResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Website Metrics"
        ]
      }
    },
    "/api/website-monitoring/page-load": {
      "get": {
        "operationId": "getPageLoad",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            },
            "style": "matrix"
          },
          {
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": null
            },
            "style": "matrix"
          }
        ],
        "responses": {
          "400": {
            "description": "Missing page id"
          },
          "404": {
            "description": "Website not found"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "$ref": "#/components/schemas/WebsiteMonitoringBeacon"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get page load",
        "tags": [
          "Website Metrics"
        ]
      }
    },
    "/api/website-monitoring/v2/metrics": {
      "post": {
        "operationId": "getBeaconMetricsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWebsiteMetricsV2"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAPIResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "Default"
            ]
          }
        ],
        "summary": "Get beacon metrics",
        "tags": [
          "Website Metrics"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractIntegration": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "EMAIL": "#/components/schemas/EmailIntegration",
            "GOOGLE_CHAT": "#/components/schemas/GoogleChatIntegration",
            "OFFICE_365": "#/components/schemas/Office365Integration",
            "OPS_GENIE": "#/components/schemas/OpsgenieIntegration",
            "PAGER_DUTY": "#/components/schemas/PagerdutyIntegration",
            "PROMETHEUS_WEBHOOK": "#/components/schemas/PrometheusWebhookIntegration",
            "SERVICE_NOW_WEBHOOK": "#/components/schemas/ServiceNowIntegration",
            "SLACK": "#/components/schemas/SlackIntegration",
            "SPLUNK": "#/components/schemas/SplunkIntegration",
            "VICTOR_OPS": "#/components/schemas/VictorOpsIntegration",
            "WATSON_AIOPS_WEBHOOK": "#/components/schemas/WatsonAIOpsWebhookIntegration",
            "WEBEX_TEAMS_WEBHOOK": "#/components/schemas/WebexTeamsWebhookIntegration",
            "WEB_HOOK": "#/components/schemas/WebhookIntegration"
          },
          "propertyName": "kind"
        },
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "kind": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id",
          "kind",
          "name"
        ]
      },
      "AbstractRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "entity_count": "#/components/schemas/EntityCountRule",
            "entity_verification": "#/components/schemas/EntityVerificationRule",
            "host_availability": "#/components/schemas/HostAvailabilityRule",
            "system": "#/components/schemas/SystemRule",
            "threshold": "#/components/schemas/ThresholdRule"
          },
          "propertyName": "ruleType"
        },
        "example": null,
        "properties": {
          "ruleType": {
            "type": "string",
            "example": null
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "AccessLogEntry": {
        "type": "object",
        "example": null,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "GRANT_TEMP_ACCESS",
              "FIRST_LOGIN",
              "LOGIN",
              "FAILED_LOGIN",
              "LOGOUT"
            ],
            "example": null
          },
          "email": {
            "type": "string",
            "example": null
          },
          "fullName": {
            "type": "string",
            "example": null
          },
          "tenantId": {
            "type": "string",
            "example": null
          },
          "tenantUnitId": {
            "type": "string",
            "example": null
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "action",
          "email",
          "fullName",
          "tenantId",
          "timestamp"
        ]
      },
      "AccessLogResponse": {
        "type": "object",
        "example": null,
        "properties": {
          "entries": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccessLogEntry"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "AccessRule": {
        "type": "object",
        "example": null,
        "properties": {
          "accessType": {
            "type": "string",
            "enum": [
              "READ",
              "READ_WRITE"
            ],
            "example": null
          },
          "relatedId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "relationType": {
            "type": "string",
            "enum": [
              "USER",
              "API_TOKEN",
              "ROLE",
              "TEAM",
              "GLOBAL"
            ],
            "example": null
          }
        },
        "required": [
          "accessType",
          "relationType"
        ]
      },
      "Action": {
        "type": "object",
        "example": null,
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "fields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "inputParameters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "outputParameters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          },
          "tags": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "type": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          }
        },
        "required": [
          "createdAt",
          "id",
          "modifiedAt",
          "name",
          "type"
        ]
      },
      "AdaptiveBaseline": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "example": null,
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              }
            }
          }
        ],
        "example": null,
        "required": [
          "operator"
        ]
      },
      "AdjustedTimeframe": {
        "type": "object",
        "example": null,
        "properties": {
          "to": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "windowSize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "to"
        ]
      },
      "AgentConfigurationUpdate": {
        "type": "object",
        "example": null,
        "properties": {
          "remoteBranch": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "remoteName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "remoteUri": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          }
        }
      },
      "AlertingConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "alertName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "AlertingConfigurationWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "alertName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "ApdexConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "apdexEntity": {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          "apdexName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "createdAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "apdexEntity",
          "apdexName",
          "id"
        ]
      },
      "ApdexConfigurationInput": {
        "type": "object",
        "example": null,
        "properties": {
          "apdexEntity": {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          "apdexName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "apdexEntity",
          "apdexName"
        ]
      },
      "ApdexEntity": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "application": "#/components/schemas/ApplicationApdexEntity",
            "website": "#/components/schemas/WebsiteApdexEntity"
          },
          "propertyName": "apdexType"
        },
        "example": null,
        "properties": {
          "apdexType": {
            "type": "string",
            "example": null
          },
          "entityId": {
            "type": "string",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "apdexType",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "ApdexReport": {
        "type": "object",
        "example": null,
        "properties": {
          "apdexId": {
            "type": "string",
            "example": null
          },
          "apdexScore": {
            "type": "array",
            "example": null,
            "items": {
              "type": "array",
              "example": null,
              "items": {
                "type": "number",
                "example": null
              }
            }
          },
          "from": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "to": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "ApiGroup": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "members": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApiMember"
            },
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "example": null
          },
          "permissionSet": {
            "$ref": "#/components/schemas/ApiPermissionSetWithRoles"
          }
        },
        "required": [
          "members",
          "name",
          "permissionSet"
        ]
      },
      "ApiMember": {
        "type": "object",
        "example": null,
        "properties": {
          "email": {
            "type": "string",
            "example": null
          },
          "userId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "userId"
        ]
      },
      "ApiPermissionSetWithRoles": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationIds": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "infraDfqFilter": {
            "$ref": "#/components/schemas/ScopeBinding"
          },
          "kubernetesClusterUUIDs": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "kubernetesNamespaceUIDs": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "mobileAppIds": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "permissions": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "websiteIds": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ScopeBinding"
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "applicationIds",
          "kubernetesClusterUUIDs",
          "kubernetesNamespaceUIDs",
          "mobileAppIds",
          "permissions",
          "websiteIds"
        ]
      },
      "ApiToken": {
        "type": "object",
        "example": null,
        "properties": {
          "accessGrantingToken": {
            "type": "string",
            "example": null
          },
          "canConfigureAgentRunMode": {
            "type": "boolean",
            "example": null
          },
          "canConfigureAgents": {
            "type": "boolean",
            "example": null
          },
          "canConfigureApiTokens": {
            "type": "boolean",
            "example": null
          },
          "canConfigureApplications": {
            "type": "boolean",
            "example": null
          },
          "canConfigureAuthenticationMethods": {
            "type": "boolean",
            "example": null
          },
          "canConfigureAutomationActions": {
            "type": "boolean",
            "example": null
          },
          "canConfigureCustomAlerts": {
            "type": "boolean",
            "example": null
          },
          "canConfigureEumApplications": {
            "type": "boolean",
            "example": null
          },
          "canConfigureGlobalAlertConfigs": {
            "type": "boolean",
            "example": null
          },
          "canConfigureGlobalAlertPayload": {
            "type": "boolean",
            "example": null
          },
          "canConfigureIntegrations": {
            "type": "boolean",
            "example": null
          },
          "canConfigureLogManagement": {
            "type": "boolean",
            "example": null
          },
          "canConfigureMobileAppMonitoring": {
            "type": "boolean",
            "example": null
          },
          "canConfigurePersonalApiTokens": {
            "type": "boolean",
            "example": null
          },
          "canConfigureReleases": {
            "type": "boolean",
            "example": null
          },
          "canConfigureServiceLevelIndicators": {
            "type": "boolean",
            "example": null
          },
          "canConfigureServiceMapping": {
            "type": "boolean",
            "example": null
          },
          "canConfigureSessionSettings": {
            "type": "boolean",
            "example": null
          },
          "canConfigureSyntheticLocations": {
            "type": "boolean",
            "example": null
          },
          "canConfigureSyntheticTests": {
            "type": "boolean",
            "example": null
          },
          "canConfigureTeams": {
            "type": "boolean",
            "example": null
          },
          "canConfigureUsers": {
            "type": "boolean",
            "example": null
          },
          "canCreatePublicCustomDashboards": {
            "type": "boolean",
            "example": null
          },
          "canEditAllAccessibleCustomDashboards": {
            "type": "boolean",
            "example": null
          },
          "canInstallNewAgents": {
            "type": "boolean",
            "example": null
          },
          "canRunAutomationActions": {
            "type": "boolean",
            "example": null
          },
          "canViewAccountAndBillingInformation": {
            "type": "boolean",
            "example": null
          },
          "canViewAuditLog": {
            "type": "boolean",
            "example": null
          },
          "canViewAutomationActionInstances": {
            "type": "boolean",
            "example": null
          },
          "canViewBizAlerts": {
            "type": "boolean",
            "example": null
          },
          "canViewBusinessActivities": {
            "type": "boolean",
            "example": null
          },
          "canViewBusinessProcessDetails": {
            "type": "boolean",
            "example": null
          },
          "canViewBusinessProcesses": {
            "type": "boolean",
            "example": null
          },
          "canViewLogs": {
            "type": "boolean",
            "example": null
          },
          "canViewSyntheticLocations": {
            "type": "boolean",
            "example": null
          },
          "canViewSyntheticTestResults": {
            "type": "boolean",
            "example": null
          },
          "canViewSyntheticTests": {
            "type": "boolean",
            "example": null
          },
          "canViewTraceDetails": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "internalId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "accessGrantingToken",
          "internalId",
          "name"
        ]
      },
      "AppDataMetricConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "metric": {
            "type": "string",
            "example": null
          },
          "numeratorTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "Application": {
        "type": "object",
        "example": null,
        "properties": {
          "boundaryScope": {
            "type": "string",
            "example": null
          },
          "entityType": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "boundaryScope",
          "id",
          "label"
        ]
      },
      "ApplicationAlertConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "writeOnly": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "example": null
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "evaluationType": {
            "type": "string",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "includeInternal": {
            "type": "boolean",
            "example": null
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "ApplicationAlertConfigWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "example": null
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "evaluationType": {
            "type": "string",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "includeInternal": {
            "type": "boolean",
            "example": null
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "example": null
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "id",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "ApplicationAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "errorRate": "#/components/schemas/ErrorsApplicationAlertRule",
            "errors": "#/components/schemas/ErrorsApplicationAlertRule",
            "logs": "#/components/schemas/LogsApplicationAlertRule",
            "slowness": "#/components/schemas/SlownessApplicationAlertRule",
            "statusCode": "#/components/schemas/StatusCodeApplicationAlertRule",
            "throughput": "#/components/schemas/ThroughputApplicationAlertRule"
          },
          "propertyName": "alertType"
        },
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "alertType": {
            "type": "string",
            "example": null
          },
          "metricName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "ApplicationApdexEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ],
                "example": null
              },
              "includeInternal": {
                "type": "boolean",
                "example": null
              },
              "includeSynthetic": {
                "type": "boolean",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "boundaryScope",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "ApplicationConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "accessRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND",
              "DEFAULT"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "scope": {
            "type": "string",
            "enum": [
              "INCLUDE_NO_DOWNSTREAM",
              "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
              "INCLUDE_ALL_DOWNSTREAM"
            ],
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "accessRules",
          "boundaryScope",
          "id",
          "label",
          "scope"
        ]
      },
      "ApplicationEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "applicationId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "ApplicationItem": {
        "type": "object",
        "example": null,
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          }
        },
        "required": [
          "application",
          "metrics"
        ]
      },
      "ApplicationMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApplicationItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "ApplicationNode": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "inclusive": {
            "type": "boolean",
            "example": null
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ServiceNode"
            },
            "example": null
          }
        },
        "required": [
          "applicationId",
          "services"
        ]
      },
      "ApplicationResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        }
      },
      "ApplicationScope": {
        "type": "object",
        "example": null,
        "properties": {
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "name"
        ]
      },
      "ApplicationScopeWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id"
        ]
      },
      "ApplicationSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "applicationId": {
                "type": "string",
                "example": null
              },
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ],
                "example": null
              },
              "endpointId": {
                "type": "string",
                "example": null
              },
              "serviceId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "boundaryScope"
        ]
      },
      "ApplicationTimeThreshold": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "requestImpact": "#/components/schemas/TraceImpactApplicationTimeThreshold",
            "violationsInPeriod": "#/components/schemas/ViolationsInPeriodApplicationTimeThreshold",
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceApplicationTimeThreshold"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "AuditLogEntry": {
        "type": "object",
        "example": null,
        "properties": {
          "action": {
            "type": "string",
            "example": null
          },
          "actor": {
            "$ref": "#/components/schemas/LogEntryActor"
          },
          "id": {
            "type": "string",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "action",
          "actor",
          "id",
          "message",
          "meta"
        ]
      },
      "AuditLogUiResponse": {
        "type": "object",
        "example": null,
        "properties": {
          "entries": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AuditLogEntry"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "Author": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "API",
              "USER",
              "INSTANA",
              "UNKNOWN"
            ],
            "example": null
          }
        }
      },
      "AvailabilitySliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "applicationId": {
                "type": "string",
                "example": null
              },
              "badEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "badEventFilters": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/TagFilter"
                },
                "maxItems": 32,
                "minItems": 1
              },
              "boundaryScope": {
                "type": "string",
                "enum": [
                  "ALL",
                  "INBOUND"
                ],
                "example": null
              },
              "endpointId": {
                "type": "string",
                "example": null
              },
              "goodEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "goodEventFilters": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/TagFilter"
                },
                "maxItems": 32,
                "minItems": 1
              },
              "includeInternal": {
                "type": "boolean",
                "example": null
              },
              "includeSynthetic": {
                "type": "boolean",
                "example": null
              },
              "serviceId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "boundaryScope"
        ]
      },
      "AvailableMetrics": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MetricMetadata"
            },
            "uniqueItems": true
          }
        }
      },
      "AvailablePlugins": {
        "type": "object",
        "example": null,
        "properties": {
          "plugins": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          }
        }
      },
      "BackendTraceReference": {
        "type": "object",
        "example": null,
        "properties": {
          "traceId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "traceId"
        ]
      },
      "BinaryOperatorDTO": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "conjunction": {
                "type": "string",
                "enum": [
                  "AND",
                  "OR"
                ],
                "example": null
              },
              "left": {
                "$ref": "#/components/schemas/MatchExpressionDTO"
              },
              "right": {
                "$ref": "#/components/schemas/MatchExpressionDTO"
              }
            }
          }
        ],
        "example": null,
        "required": [
          "conjunction",
          "left",
          "right"
        ]
      },
      "BrowserScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ],
                "example": null
              },
              "recordVideo": {
                "type": "boolean",
                "example": null
              },
              "script": {
                "type": "string",
                "example": null,
                "maxLength": 1048576,
                "minLength": 0
              },
              "scriptType": {
                "type": "string",
                "enum": [
                  "Basic",
                  "Jest"
                ],
                "example": null
              },
              "scripts": {
                "$ref": "#/components/schemas/MultipleScripts"
              }
            }
          }
        ],
        "example": null,
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "BuiltInEventSpecification": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "hidden": {
            "type": "boolean",
            "example": null
          },
          "hyperParams": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HyperParam"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "ruleInputs": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/RuleInput"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "shortPluginId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "hyperParams",
          "id",
          "name",
          "ruleInputs",
          "shortPluginId"
        ]
      },
      "BuiltInEventSpecificationWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "hidden": {
            "type": "boolean",
            "example": null
          },
          "hyperParams": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HyperParam"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "ruleInputs": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/RuleInput"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "shortPluginId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "hyperParams",
          "id",
          "name",
          "ruleInputs",
          "shortPluginId"
        ]
      },
      "CallGroupsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "CallGroupsResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CallGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "ChangeSummary": {
        "type": "object",
        "example": null,
        "properties": {
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "changeType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "DELETE",
              "ENABLE",
              "DISABLE",
              "RESTORE",
              "UNKNOWN"
            ],
            "example": null
          }
        },
        "required": [
          "author",
          "changeType"
        ]
      },
      "CloudfoundryPhysicalContext": {
        "type": "object",
        "example": null,
        "properties": {
          "application": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "cfInstanceIndex": {
            "type": "string",
            "example": null
          },
          "organization": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "space": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "ConfigVersion": {
        "type": "object",
        "example": null,
        "properties": {
          "changeSummary": {
            "$ref": "#/components/schemas/ChangeSummary"
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "id"
        ]
      },
      "CursorPagination": {
        "type": "object",
        "example": null,
        "properties": {
          "ingestionTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "retrievalSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 200,
            "minimum": 1
          }
        }
      },
      "CursorPaginationInfraExploreCursor": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "retrievalSize": {
            "type": "integer",
            "format": "int32",
            "description": "number of values to return",
            "example": null
          }
        }
      },
      "CustomDashboard": {
        "type": "object",
        "example": null,
        "properties": {
          "accessRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "id": {
            "type": "string",
            "example": null
          },
          "title": {
            "type": "string",
            "example": null
          },
          "widgets": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Widget"
            },
            "maxItems": 128,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "accessRules",
          "id",
          "title",
          "widgets"
        ]
      },
      "CustomDashboardPreview": {
        "type": "object",
        "example": null,
        "properties": {
          "annotations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "SHARED",
                "WRITABLE"
              ],
              "example": null
            },
            "maxItems": 8,
            "minItems": 0,
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "title": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "annotations",
          "id",
          "title"
        ]
      },
      "CustomEventSpecification": {
        "type": "object",
        "example": null,
        "properties": {
          "actions": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 32765,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "entityType": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleLogicalOperator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ],
            "example": null
          },
          "rules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AbstractRule"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "entityType",
          "name",
          "rules"
        ]
      },
      "CustomEventSpecificationWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "actions": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "applicationAlertConfigId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 32765,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "entityType": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "migrated": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleLogicalOperator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ],
            "example": null
          },
          "rules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AbstractRule"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "entityType",
          "id",
          "name",
          "rules"
        ]
      },
      "CustomEventWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "customEventName": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "customEventName",
          "metricName"
        ]
      },
      "CustomPayloadConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "fields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          }
        },
        "required": [
          "fields"
        ]
      },
      "CustomPayloadField": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "dynamic": "#/components/schemas/DynamicField",
            "staticString": "#/components/schemas/StaticStringField"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "key": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "CustomPayloadWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "fields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "fields"
        ]
      },
      "DNSActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "acceptCNAME": {
                "type": "boolean",
                "example": null
              },
              "lookup": {
                "type": "string",
                "example": null
              },
              "lookupServerName": {
                "type": "boolean",
                "example": null
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "example": null
              },
              "queryType": {
                "type": "string",
                "enum": [
                  "A",
                  "AAAA",
                  "ANY",
                  "AXFR",
                  "CNAME",
                  "HINFO",
                  "MAILB",
                  "MAILA",
                  "MINFO",
                  "MB",
                  "MD",
                  "MF",
                  "MG",
                  "MR",
                  "MX",
                  "NULL",
                  "NS",
                  "PTR",
                  "SOA",
                  "TXT",
                  "WKS"
                ],
                "example": null
              },
              "recursiveLookups": {
                "type": "boolean",
                "example": null
              },
              "server": {
                "type": "string",
                "example": null
              },
              "serverRetries": {
                "type": "integer",
                "format": "int32",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "lookup",
          "markSyntheticCall",
          "server",
          "syntheticType"
        ]
      },
      "DeprecatedTagFilter": {
        "type": "object",
        "example": null,
        "properties": {
          "entity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ],
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "operator": {
            "type": "string",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "LESS_THAN",
              "LESS_OR_EQUAL_THAN",
              "GREATER_THAN",
              "GREATER_OR_EQUAL_THAN",
              "NOT_EMPTY",
              "NOT_EQUAL",
              "NOT_CONTAIN",
              "IS_EMPTY",
              "NOT_BLANK",
              "IS_BLANK",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH"
            ],
            "example": null
          },
          "value": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "name",
          "operator",
          "value"
        ]
      },
      "DynamicField": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomPayloadField"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "value": {
                "$ref": "#/components/schemas/DynamicFieldValue"
              }
            }
          }
        ],
        "example": null,
        "required": [
          "key",
          "value"
        ]
      },
      "DynamicFieldValue": {
        "type": "object",
        "example": null,
        "properties": {
          "key": {
            "type": "string",
            "example": null
          },
          "tagName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "tagName"
        ]
      },
      "EditUser": {
        "type": "object",
        "example": null,
        "properties": {
          "fullName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "fullName"
        ]
      },
      "EmailIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "emails": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          }
        ],
        "example": null,
        "required": [
          "emails",
          "id",
          "kind",
          "name"
        ]
      },
      "Endpoint": {
        "type": "object",
        "example": null,
        "properties": {
          "entityType": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "isSynthetic": {
            "type": "boolean",
            "example": null,
            "writeOnly": true
          },
          "label": {
            "type": "string",
            "example": null
          },
          "serviceId": {
            "type": "string",
            "example": null
          },
          "synthetic": {
            "type": "boolean",
            "example": null
          },
          "syntheticType": {
            "type": "string",
            "enum": [
              "NON_SYNTHETIC",
              "SYNTHETIC",
              "MIXED"
            ],
            "example": null
          },
          "technologies": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "enum": [
              "UNDEFINED",
              "RPC",
              "EVENT",
              "GRAPHQL",
              "BATCH",
              "SHELL",
              "HTTP",
              "SDK",
              "OPENTELEMETRY",
              "INTERNAL",
              "DATABASE",
              "MESSAGING",
              "PAGE",
              "PAGE_RESOURCE"
            ],
            "example": null
          }
        },
        "required": [
          "id",
          "label",
          "serviceId",
          "technologies",
          "type"
        ]
      },
      "EndpointEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "applicationId": {
                "type": "string",
                "example": null
              },
              "endpointId": {
                "type": "string",
                "example": null
              },
              "endpointServiceId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "EndpointItem": {
        "type": "object",
        "example": null,
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          }
        },
        "required": [
          "endpoint",
          "metrics"
        ]
      },
      "EndpointMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/EndpointItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "EndpointNode": {
        "type": "object",
        "example": null,
        "properties": {
          "endpointId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "inclusive": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "endpointId"
        ]
      },
      "EndpointResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        }
      },
      "EntityCountRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "conditionOperator": {
                "type": "string",
                "enum": [
                  ">",
                  ">=",
                  "<",
                  "<=",
                  "=",
                  "!="
                ],
                "example": null
              },
              "conditionValue": {
                "type": "number",
                "format": "double",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "conditionOperator"
        ]
      },
      "EntityHealthInfo": {
        "type": "object",
        "example": null,
        "properties": {
          "maxSeverity": {
            "type": "number",
            "format": "double",
            "example": null,
            "maximum": 10,
            "minimum": 0
          },
          "openIssues": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "openIssues"
        ]
      },
      "EntityId": {
        "type": "object",
        "example": null,
        "properties": {
          "host": {
            "type": "string",
            "example": null
          },
          "pluginId": {
            "type": "string",
            "example": null
          },
          "steadyId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "host",
          "pluginId",
          "steadyId"
        ]
      },
      "EntityVerificationRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "matchingEntityLabel": {
                "type": "string",
                "example": null,
                "maxLength": 256,
                "minLength": 0
              },
              "matchingEntityType": {
                "type": "string",
                "example": null,
                "maxLength": 64,
                "minLength": 0
              },
              "matchingOperator": {
                "type": "string",
                "enum": [
                  "is",
                  "contains",
                  "startsWith",
                  "endsWith"
                ],
                "example": null
              },
              "offlineDuration": {
                "type": "integer",
                "format": "int64",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "matchingEntityLabel",
          "matchingEntityType",
          "matchingOperator"
        ]
      },
      "ErrorsApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "example": null,
        "required": [
          "metricName"
        ]
      },
      "Event": {
        "type": "object",
        "example": null,
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "endpointServiceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "entityId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "entityType": {
            "type": "string",
            "enum": [
              "Entity10",
              "App20",
              "Service20",
              "Endpoint20",
              "Website",
              "Synthetic",
              "MobileApp"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "metricAccessId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "plugin": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "state": {
            "type": "string",
            "example": null,
            "maxLength": 8,
            "minLength": 0
          },
          "type": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "entityId",
          "id",
          "plugin",
          "state",
          "type"
        ]
      },
      "EventFilteringConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationAlertConfigIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "eventTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "incident",
                "critical",
                "warning",
                "change",
                "online",
                "offline",
                "agent_monitoring_issue",
                "none"
              ],
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "ruleIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          }
        }
      },
      "EventResult": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "APPLICATION": "#/components/schemas/ApplicationEventResult",
            "ENDPOINT": "#/components/schemas/EndpointEventResult",
            "INFRASTRUCTURE": "#/components/schemas/InfraEventResult",
            "MOBILE_APP": "#/components/schemas/MobileAppEventResult",
            "SERVICE": "#/components/schemas/ServiceEventResult",
            "SYNTHETICS": "#/components/schemas/SyntheticsEventResult",
            "WEBSITE": "#/components/schemas/WebsiteEventResult"
          },
          "propertyName": "entityType"
        },
        "example": null,
        "properties": {
          "detail": {
            "type": "string",
            "example": null
          },
          "end": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "entityLabel": {
            "type": "string",
            "example": null
          },
          "entityName": {
            "type": "string",
            "example": null
          },
          "entityType": {
            "type": "string",
            "example": null
          },
          "eventId": {
            "type": "string",
            "example": null
          },
          "fixSuggestion": {
            "type": "string",
            "example": null
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "example": null
              },
              "example": null
            }
          },
          "problem": {
            "type": "string",
            "example": null
          },
          "recentEvents": {
            "type": "array",
            "example": null,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "example": null
              },
              "example": null
            }
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "snapshotId": {
            "type": "string",
            "example": null
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "state": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        }
      },
      "EventSpecificationInfo": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "entityType": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean",
            "example": null
          },
          "migrated": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "triggering": {
            "type": "boolean",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "BUILT_IN",
              "CUSTOM"
            ],
            "example": null
          }
        },
        "required": [
          "entityType",
          "id",
          "name",
          "type"
        ]
      },
      "ExtendedService": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "entityType": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "maxSeverity": {
            "type": "number",
            "format": "double",
            "example": null,
            "maximum": 10,
            "minimum": 0
          },
          "numberOfOpenIssues": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          },
          "snapshotIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "technologies": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "types": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ],
              "example": null
            },
            "uniqueItems": true
          }
        },
        "required": [
          "applications",
          "id",
          "label",
          "snapshotIds",
          "technologies",
          "types"
        ]
      },
      "FailureSyntheticAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          }
        ],
        "example": null,
        "required": [
          "metricName"
        ]
      },
      "Field": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null
          },
          "encoding": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "secured": {
            "type": "boolean",
            "example": null
          },
          "value": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "encoding",
          "name",
          "value"
        ]
      },
      "FixedHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "name": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "name",
          "type"
        ]
      },
      "FullTrace": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "rootSpan": {
            "$ref": "#/components/schemas/Span"
          },
          "totalErrorCount": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "id",
          "rootSpan"
        ]
      },
      "GeoLocationConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "geoDetailRemoval": {
            "type": "string",
            "enum": [
              "NO_REMOVAL",
              "REMOVE_COORDINATES",
              "REMOVE_CITY",
              "REMOVE_ALL"
            ],
            "example": null
          },
          "geoMappingRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/GeoMappingRule"
            },
            "maxItems": 512,
            "minItems": 0
          }
        },
        "required": [
          "geoDetailRemoval"
        ]
      },
      "GeoMappingRule": {
        "type": "object",
        "example": null,
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "cidr": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "city": {
            "type": "string",
            "example": null
          },
          "continent": {
            "type": "string",
            "example": null
          },
          "continentCode": {
            "type": "string",
            "example": null
          },
          "country": {
            "type": "string",
            "example": null
          },
          "countryCode": {
            "type": "string",
            "example": null
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "leastSpecificSubdivision": {
            "$ref": "#/components/schemas/GeoSubdivision"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "subdivisions": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/GeoSubdivision"
            },
            "maxItems": 8,
            "minItems": 0
          }
        },
        "required": [
          "cidr",
          "subdivisions"
        ]
      },
      "GeoSubdivision": {
        "type": "object",
        "example": null,
        "properties": {
          "code": {
            "type": "string",
            "example": null,
            "maxLength": 32,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "name"
        ]
      },
      "GetApplicationMetrics": {
        "type": "object",
        "example": null,
        "properties": {
          "includeInternal": {
            "type": "boolean",
            "example": null,
            "writeOnly": true
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null,
            "writeOnly": true
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            }
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics",
          "timeFrame"
        ]
      },
      "GetApplications": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "endpointId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "endpointTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ],
              "example": null
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "technologies": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetAvailableMetricsQuery": {
        "type": "object",
        "example": null,
        "properties": {
          "query": {
            "type": "string",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetAvailablePluginsQuery": {
        "type": "object",
        "example": null,
        "properties": {
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetCallGroups": {
        "type": "object",
        "example": null,
        "properties": {
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "includeInternal": {
            "type": "boolean",
            "example": null
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MetricConfig"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "group",
          "metrics"
        ]
      },
      "GetCombinedMetrics": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 5,
            "minItems": 1,
            "uniqueItems": true
          },
          "plugin": {
            "type": "string",
            "example": null
          },
          "query": {
            "type": "string",
            "example": null
          },
          "rollup": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "snapshotIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 30,
            "minItems": 1,
            "uniqueItems": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics",
          "plugin"
        ]
      },
      "GetEndpoints": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "endpointId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "endpointTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ],
              "example": null
            },
            "maxItems": 8,
            "minItems": 0,
            "uniqueItems": true
          },
          "excludeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetInfrastructureGroupsQuery": {
        "type": "object",
        "example": null,
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Entity grouping tag. Use the Instana Analyze Infrastructure dashboard to determine the entity grouping tag name.",
            "example": null,
            "items": {
              "type": "string",
              "description": "Entity grouping tag. Use the Instana Analyze Infrastructure dashboard to determine the entity grouping tag name.",
              "example": null
            },
            "maxItems": 1,
            "minItems": 0
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InfraMetricConfiguration"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPaginationInfraExploreCursor"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "description": "Type of entities",
            "example": null
          }
        },
        "required": [
          "groupBy",
          "pagination",
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetInfrastructureQuery": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InfraMetricConfiguration"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPaginationInfraExploreCursor"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "description": "Type of entities",
            "example": null
          }
        },
        "required": [
          "pagination",
          "tagFilterExpression",
          "timeFrame"
        ]
      },
      "GetMobileAppBeaconGroups": {
        "type": "object",
        "example": null,
        "properties": {
          "group": {
            "$ref": "#/components/schemas/MobileAppBeaconTagGroup"
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "group",
          "metrics",
          "type"
        ]
      },
      "GetMobileAppBeacons": {
        "type": "object",
        "example": null,
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "GetMobileAppMetrics": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetMobileAppMetricsV2": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MobileAppMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "SESSION_START",
              "HTTP_REQUEST",
              "CRASH",
              "CUSTOM",
              "VIEW_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetServices": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationBoundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "contextScope": {
            "type": "string",
            "enum": [
              "NONE",
              "UPSTREAM",
              "DOWNSTREAM"
            ],
            "example": null
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AppDataMetricConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "nameFilter": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "technologies": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 20,
            "minItems": 0,
            "uniqueItems": true
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetTestResult": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "locationId": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricConfiguration"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "serviceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "testId": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetTestResultBase": {
        "type": "object",
        "example": null,
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        }
      },
      "GetTestResultList": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "syntheticMetrics": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "syntheticMetrics"
        ]
      },
      "GetTestSummaryResult": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SyntheticMetricConfiguration"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpression"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            }
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "metrics"
        ]
      },
      "GetTraceGroups": {
        "type": "object",
        "example": null,
        "properties": {
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MetricConfig"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        },
        "required": [
          "group",
          "metrics"
        ]
      },
      "GetTraces": {
        "type": "object",
        "example": null,
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          }
        }
      },
      "GetWebsiteBeaconGroups": {
        "type": "object",
        "example": null,
        "properties": {
          "group": {
            "$ref": "#/components/schemas/WebsiteBeaconTagGroup"
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "group",
          "metrics",
          "type"
        ]
      },
      "GetWebsiteBeacons": {
        "type": "object",
        "example": null,
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CursorPagination"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "GetWebsiteMetrics": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeprecatedTagFilter"
            },
            "maxItems": 32,
            "minItems": 0
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GetWebsiteMetricsV2": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/WebsiteMonitoringMetricsConfiguration"
            },
            "maxItems": 5,
            "minItems": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeFrame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAGELOAD",
              "RESOURCELOAD",
              "HTTPREQUEST",
              "ERROR",
              "CUSTOM",
              "PAGE_CHANGE"
            ],
            "example": null
          }
        },
        "required": [
          "metrics",
          "type"
        ]
      },
      "GlobalApplicationAlertConfigWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applicationIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "example": null
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "builtIn": {
            "type": "boolean",
            "example": null
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "evaluationType": {
            "type": "string",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "includeInternal": {
            "type": "boolean",
            "example": null
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "example": null
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "id",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "GlobalApplicationsAlertConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "applications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationNode"
            },
            "example": null
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND"
            ],
            "example": null
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "evaluationType": {
            "type": "string",
            "enum": [
              "PER_AP",
              "PER_AP_SERVICE",
              "PER_AP_ENDPOINT"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "includeInternal": {
            "type": "boolean",
            "example": null
          },
          "includeSynthetic": {
            "type": "boolean",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "alertChannelIds",
          "applications",
          "boundaryScope",
          "customPayloadFields",
          "description",
          "evaluationType",
          "granularity",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold"
        ]
      },
      "GoogleChatIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "GraphEdge": {
        "type": "object",
        "example": null,
        "properties": {
          "destination": {
            "type": "string",
            "example": null
          },
          "relation": {
            "type": "string",
            "example": null
          },
          "source": {
            "type": "string",
            "example": null
          }
        }
      },
      "GraphNode": {
        "type": "object",
        "example": null,
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "entityId": {
            "$ref": "#/components/schemas/EntityId"
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          }
        }
      },
      "Group": {
        "type": "object",
        "example": null,
        "properties": {
          "groupbyTag": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ],
            "example": null
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "GroupMapping": {
        "type": "object",
        "example": null,
        "properties": {
          "groupId": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "key": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "value": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          }
        },
        "required": [
          "groupId",
          "key",
          "value"
        ]
      },
      "HealthState": {
        "type": "object",
        "example": null,
        "properties": {
          "health": {
            "type": "string",
            "enum": [
              "RED",
              "YELLOW",
              "GREEN"
            ],
            "example": null
          },
          "messages": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        }
      },
      "HistoricBaseline": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "baseline": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "array",
                  "example": null,
                  "items": {
                    "type": "number",
                    "example": null
                  }
                }
              },
              "deviationFactor": {
                "type": "number",
                "format": "double",
                "example": null,
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "maximum": 16,
                "minimum": 0.5
              },
              "lastUpdated": {
                "type": "integer",
                "format": "int64",
                "example": null,
                "minimum": 0
              },
              "seasonality": {
                "type": "string",
                "enum": [
                  "WEEKLY",
                  "DAILY"
                ],
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "operator",
          "seasonality"
        ]
      },
      "HostAvailabilityRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "closeAfter": {
                "type": "integer",
                "format": "int64",
                "example": null,
                "maximum": 86400000
              },
              "offlineDuration": {
                "type": "integer",
                "format": "int64",
                "example": null
              },
              "tagFilter": {
                "$ref": "#/components/schemas/TagFilter"
              }
            }
          }
        ],
        "example": null
      },
      "HttpActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "allowInsecure": {
                "type": "boolean",
                "example": null
              },
              "body": {
                "type": "string",
                "example": null
              },
              "expectExists": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              },
              "expectJson": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "example": null
                },
                "example": null
              },
              "expectMatch": {
                "type": "string",
                "example": null
              },
              "expectNotEmpty": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              },
              "expectStatus": {
                "type": "integer",
                "format": "int32",
                "example": null
              },
              "followRedirect": {
                "type": "boolean",
                "example": null
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "example": null
                },
                "example": null
              },
              "operation": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PUT"
                ],
                "example": null
              },
              "url": {
                "type": "string",
                "example": null,
                "maxLength": 512,
                "minLength": 0
              },
              "validationString": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "markSyntheticCall",
          "syntheticType",
          "url"
        ]
      },
      "HttpEndpointConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "endpointNameByCollectedPathTemplateRuleEnabled": {
            "type": "boolean",
            "example": null
          },
          "endpointNameByFirstPathSegmentRuleEnabled": {
            "type": "boolean",
            "example": null
          },
          "rules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HttpEndpointRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "serviceId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "rules",
          "serviceId"
        ]
      },
      "HttpEndpointRule": {
        "type": "object",
        "example": null,
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "pathSegments": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
            },
            "maxItems": 16,
            "minItems": 1
          },
          "testCases": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 32,
            "minItems": 0
          }
        },
        "required": [
          "pathSegments"
        ]
      },
      "HttpPathSegmentMatchingRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "FIXED": "#/components/schemas/FixedHttpPathSegmentMatchingRule",
            "MATCH_ALL": "#/components/schemas/MatchAllHttpPathSegmentMatchingRule",
            "PARAMETER": "#/components/schemas/PathParameterHttpPathSegmentMatchingRule",
            "UNSUPPORTED": "#/components/schemas/UnsupportedHttpPathSegmentMatchingRule"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UNSUPPORTED",
              "FIXED",
              "PARAMETER",
              "MATCH_ALL"
            ],
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "HttpScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "script": {
                "type": "string",
                "example": null,
                "maxLength": 1048576,
                "minLength": 0
              },
              "scriptType": {
                "type": "string",
                "enum": [
                  "Basic",
                  "Jest"
                ],
                "example": null
              },
              "scripts": {
                "$ref": "#/components/schemas/MultipleScripts"
              }
            }
          }
        ],
        "example": null,
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "HyperParam": {
        "type": "object",
        "example": null,
        "properties": {
          "defaultValue": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "maxValue": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "minValue": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "valueFormat": {
            "type": "string",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ],
            "example": null
          }
        },
        "required": [
          "description",
          "id",
          "name"
        ]
      },
      "InfraEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "ibmMqFileTransfer": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "example": null
                  },
                  "example": null
                }
              }
            }
          }
        ],
        "example": null
      },
      "InfraExploreCursor": {
        "type": "object",
        "description": "cursor to use between successive queries",
        "example": null
      },
      "InfraMetricConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "crossSeriesAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "description": "   * If granularity is not specified an aggregated value for the selected timeframe is returned.\n   * If granularity is specified data points are returned with the specified granularity\n    * The granularity should not be greater than the `windowSize` (important: `windowSize` is expressed in milliseconds)\n    * The granularity should not be set too small relative to the `windowSize` to avoid creating an excessively large number of data points (max 600)\n",
            "example": null,
            "title": "granularity in milliseconds"
          },
          "metric": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "InfrastructureEntitiesResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InfrastructureItem"
            }
          },
          "next": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "description": "represents the total number of results",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "InfrastructureGroup": {
        "type": "object",
        "example": null,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        }
      },
      "InfrastructureGroupsResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InfrastructureGroup"
            }
          },
          "next": {
            "$ref": "#/components/schemas/InfraExploreCursor"
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "description": "represents the total number of results",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "InfrastructureItem": {
        "type": "object",
        "example": null,
        "properties": {
          "entityHealthInfo": {
            "$ref": "#/components/schemas/EntityHealthInfo"
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          },
          "snapshotId": {
            "type": "string",
            "example": null
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "InfrastructureMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MetricItem"
            }
          }
        }
      },
      "IngestionOffsetCursor": {
        "type": "object",
        "example": null
      },
      "InstanaVersionInfo": {
        "type": "object",
        "example": null,
        "properties": {
          "branch": {
            "type": "string",
            "example": null
          },
          "commit": {
            "type": "string",
            "example": null
          },
          "imageTag": {
            "type": "string",
            "example": null
          }
        }
      },
      "IntegrationOverview": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "kind": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          }
        },
        "required": [
          "id",
          "kind",
          "name"
        ]
      },
      "Invitation": {
        "type": "object",
        "example": null,
        "properties": {
          "email": {
            "type": "string",
            "example": null
          },
          "groupId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "email",
          "groupId"
        ]
      },
      "InvitationResponse": {
        "type": "object",
        "example": null,
        "properties": {
          "invitationResults": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InvitationResult"
            }
          }
        }
      },
      "InvitationResult": {
        "type": "object",
        "example": null,
        "properties": {
          "invitationStatus": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INTERNAL_ERROR",
              "FAILURE_USER_ALREADY_EXISTS"
            ],
            "example": null
          },
          "userEmail": {
            "type": "string",
            "example": null
          }
        }
      },
      "IpMaskingConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "ipMasking": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "STRICT",
              "REMOVE_ALL_DETAILS"
            ],
            "example": null
          }
        },
        "required": [
          "ipMasking"
        ]
      },
      "KubernetesPhysicalContext": {
        "type": "object",
        "example": null,
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "namespace": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "node": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "pod": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "LocationStatus": {
        "type": "object",
        "example": null,
        "properties": {
          "locationId": {
            "type": "string",
            "example": null
          },
          "successRate": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "successRuns": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "totalTestRuns": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "locationId"
        ]
      },
      "LogEntryActor": {
        "type": "object",
        "example": null,
        "properties": {
          "email": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "USER",
              "API_TOKEN"
            ],
            "example": null
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "LogsApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "level": {
                "type": "string",
                "enum": [
                  "WARN",
                  "ERROR",
                  "ANY"
                ],
                "example": null
              },
              "loglevel": {
                "type": "string",
                "enum": [
                  "WARN",
                  "ERROR",
                  "ANY"
                ],
                "example": null,
                "writeOnly": true
              },
              "message": {
                "type": "string",
                "example": null
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ],
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "level",
          "metricName",
          "operator"
        ]
      },
      "MaintenanceConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "windows": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query"
        ]
      },
      "MaintenanceConfigWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "windows": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query"
        ]
      },
      "MaintenanceWindow": {
        "type": "object",
        "example": null,
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "id"
        ]
      },
      "ManualServiceConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "existingServiceId": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "unmonitoredServiceName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id",
          "tagFilterExpression"
        ]
      },
      "MatchAllHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          }
        ],
        "example": null,
        "required": [
          "type"
        ]
      },
      "MatchExpressionDTO": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "BINARY_OP": "#/components/schemas/BinaryOperatorDTO",
            "LEAF": "#/components/schemas/TagMatcherDTO"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "MetricAPIResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          }
        },
        "required": [
          "metrics"
        ]
      },
      "MetricConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "metric": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "MetricConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "metricAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "metricName": {
            "type": "string",
            "example": null
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "example": null,
            "exclusiveMinimum": true,
            "minimum": 0
          }
        },
        "required": [
          "metricName"
        ]
      },
      "MetricDescription": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTRIBUTION",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND"
              ],
              "example": null
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "formatter": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metricId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregations",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "MetricInstance": {
        "type": "object",
        "example": null,
        "properties": {
          "custom": {
            "type": "boolean",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "formatter": {
            "type": "string",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ],
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metricId": {
            "type": "string",
            "example": null
          },
          "pluginId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "description",
          "formatter",
          "label",
          "metricId",
          "pluginId"
        ]
      },
      "MetricItem": {
        "type": "object",
        "example": null,
        "properties": {
          "from": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "host": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          },
          "snapshotId": {
            "type": "string",
            "example": null
          },
          "tags": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "to": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "MetricMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "category": {
            "type": "string",
            "example": null
          },
          "crossSeriesAggregations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTRIBUTION",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND"
              ],
              "example": null
            },
            "uniqueItems": true
          },
          "description": {
            "type": "string",
            "example": null
          },
          "format": {
            "type": "string",
            "enum": [
              "NUMBER",
              "BYTES",
              "KILO_BYTES",
              "MEGA_BYTES",
              "PERCENTAGE",
              "LATENCY",
              "NANOS",
              "MILLIS",
              "MICROS",
              "SECONDS",
              "RATE",
              "BYTE_RATE",
              "UNDEFINED"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "infraTagCategory": {
            "type": "string",
            "enum": [
              "ACE",
              "ALICLOUD",
              "AWS",
              "AZURE",
              "CASSANDRA",
              "CLOUD_FOUNDRY",
              "CLR",
              "COCKROACH",
              "CONSUL",
              "CONTAINER",
              "COUCHBASE",
              "DFQ",
              "ELASTICSEARCH",
              "GCP",
              "HADOOP_YARN",
              "HAZELCAST",
              "IBM_CLOUD",
              "IBM_DATAPOWER",
              "IBM_I_SERIES",
              "IBM_MQ",
              "IBM_MQMFT",
              "IBM_OPENSTACK",
              "KAFKA_CONNECT",
              "KUBERNETES",
              "MONGO_DB",
              "OTHERS",
              "REDIS",
              "SELF_MONITORING",
              "SOLR",
              "SPARK",
              "VSHPERE"
            ],
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "ownerType": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "infraTagCategory"
        ]
      },
      "MetricPattern": {
        "type": "object",
        "example": null,
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "is",
              "contains",
              "startsWith",
              "endsWith",
              "any"
            ],
            "example": null
          },
          "placeholder": {
            "type": "string",
            "example": null
          },
          "postfix": {
            "type": "string",
            "example": null
          },
          "prefix": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "operator",
          "prefix"
        ]
      },
      "MobileApp": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "MobileAppBeaconGroupsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "earliestTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "MobileAppBeaconGroupsResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MobileAppBeaconGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "MobileAppBeaconResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MobileAppBeaconsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "MobileAppBeaconTagGroup": {
        "type": "object",
        "example": null,
        "properties": {
          "groupbyTag": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ],
            "example": null
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "MobileAppBeaconsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "beacon": {
            "$ref": "#/components/schemas/MobileAppMonitoringBeacon"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          }
        },
        "required": [
          "beacon",
          "cursor"
        ]
      },
      "MobileAppEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "mobileAppId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "MobileAppMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "empty": {
            "type": "boolean",
            "example": null
          }
        }
      },
      "MobileAppMonitoringBeacon": {
        "type": "object",
        "example": null,
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "agentVersion": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "appBuild": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "appVersion": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "backendTraceId": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "batchSize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "beaconId": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "bundleIdentifier": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "carrier": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "city": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "clockSkew": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "connectionType": {
            "type": "string",
            "example": null,
            "maxLength": 16,
            "minLength": 0
          },
          "continent": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "continentCode": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "country": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "countryCode": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "customEventName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "decodedBodySize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "deviceHardware": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "deviceManufacturer": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "deviceModel": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "effectiveConnectionType": {
            "type": "string",
            "example": null,
            "maxLength": 16,
            "minLength": 0
          },
          "encodedBodySize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "environment": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "errorId": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "errorMessage": {
            "type": "string",
            "example": null,
            "maxLength": 16384,
            "minLength": 0
          },
          "errorType": {
            "type": "string",
            "example": null,
            "maxLength": 1024,
            "minLength": 0
          },
          "googlePlayServicesMissing": {
            "type": "boolean",
            "example": null
          },
          "httpCallHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "httpCallMethod": {
            "type": "string",
            "example": null,
            "maxLength": 16,
            "minLength": 0
          },
          "httpCallOrigin": {
            "type": "string",
            "example": null,
            "maxLength": 1024,
            "minLength": 0
          },
          "httpCallPath": {
            "type": "string",
            "example": null,
            "maxLength": 4096,
            "minLength": 0
          },
          "httpCallStatus": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 599,
            "minimum": -1
          },
          "httpCallUrl": {
            "type": "string",
            "example": null,
            "maxLength": 4096,
            "minLength": 0
          },
          "ingestionTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "mobileAppId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "mobileAppLabel": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "osName": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "osVersion": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "platform": {
            "type": "string",
            "example": null,
            "maxLength": 32,
            "minLength": 0
          },
          "region": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "rooted": {
            "type": "boolean",
            "example": null
          },
          "sessionId": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "stackTrace": {
            "type": "string",
            "example": null,
            "maxLength": 16384,
            "minLength": 0
          },
          "subdivision": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "subdivisionCode": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "tenant": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "transferSize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "type": {
            "type": "string",
            "example": null,
            "maxLength": 24,
            "minLength": 0
          },
          "unit": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "userEmail": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "userId": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "userIp": {
            "type": "string",
            "example": null,
            "maxLength": 45,
            "minLength": 0
          },
          "userLanguages": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 5,
            "minItems": 0
          },
          "userName": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "view": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "viewportHeight": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          },
          "viewportWidth": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          }
        },
        "required": [
          "beaconId",
          "mobileAppId",
          "sessionId",
          "type"
        ]
      },
      "MobileAppMonitoringMetricDescription": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTRIBUTION",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND"
              ],
              "example": null
            },
            "uniqueItems": true
          },
          "beaconTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "formatter": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metricId": {
            "type": "string",
            "example": null
          },
          "pathToValueInBeacon": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 2147483647,
            "minItems": 1
          },
          "tagName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregations",
          "beaconTypes",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "MobileAppMonitoringMetricsConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "metric": {
            "type": "string",
            "example": null
          },
          "numeratorTagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "MonitoringState": {
        "type": "object",
        "example": null,
        "properties": {
          "hasEntities": {
            "type": "boolean",
            "example": null
          },
          "hostCount": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "serverlessCount": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        }
      },
      "MultipleScripts": {
        "type": "object",
        "example": null,
        "properties": {
          "bundle": {
            "type": "string",
            "example": null
          },
          "scriptFile": {
            "type": "string",
            "example": null
          },
          "valid": {
            "type": "boolean",
            "example": null
          }
        }
      },
      "NewApplicationConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "accessRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccessRule"
            },
            "maxItems": 64,
            "minItems": 1
          },
          "boundaryScope": {
            "type": "string",
            "enum": [
              "ALL",
              "INBOUND",
              "DEFAULT"
            ],
            "example": null
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "scope": {
            "type": "string",
            "enum": [
              "INCLUDE_NO_DOWNSTREAM",
              "INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING",
              "INCLUDE_ALL_DOWNSTREAM"
            ],
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          }
        },
        "required": [
          "accessRules",
          "boundaryScope",
          "label",
          "scope"
        ]
      },
      "NewManualServiceConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "existingServiceId": {
            "type": "string",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "unmonitoredServiceName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "tagFilterExpression"
        ]
      },
      "Office365Integration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "OpsgenieIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "alias": {
                "type": "string",
                "example": null
              },
              "apiKey": {
                "type": "string",
                "example": null
              },
              "region": {
                "type": "string",
                "enum": [
                  "US",
                  "EU"
                ],
                "example": null
              },
              "tags": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "apiKey",
          "id",
          "kind",
          "name",
          "region"
        ]
      },
      "Order": {
        "type": "object",
        "example": null,
        "properties": {
          "by": {
            "type": "string",
            "example": null
          },
          "collation": {
            "type": "string",
            "description": "language code used for sorting. Ignored for infrastructure queries.",
            "example": null
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "example": null
          }
        },
        "required": [
          "by",
          "direction"
        ]
      },
      "PagerdutyIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "serviceIntegrationKey": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "serviceIntegrationKey"
        ]
      },
      "Pagination": {
        "type": "object",
        "example": null,
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 200,
            "minimum": 1
          }
        }
      },
      "Parameter": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null
          },
          "hidden": {
            "type": "boolean",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "required": {
            "type": "boolean",
            "example": null
          },
          "secured": {
            "type": "boolean",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          },
          "value": {
            "type": "string",
            "example": null
          },
          "valueType": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "label",
          "name",
          "type",
          "valueType"
        ]
      },
      "PathParameterHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "name": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "name",
          "type"
        ]
      },
      "PhysicalContext": {
        "type": "object",
        "example": null,
        "properties": {
          "cloudfoundry": {
            "$ref": "#/components/schemas/CloudfoundryPhysicalContext"
          },
          "cluster": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "container": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "host": {
            "$ref": "#/components/schemas/SnapshotPreview"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/KubernetesPhysicalContext"
          },
          "process": {
            "$ref": "#/components/schemas/SnapshotPreview"
          }
        }
      },
      "PluginResult": {
        "type": "object",
        "example": null,
        "properties": {
          "label": {
            "type": "string",
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          }
        }
      },
      "Problem": {
        "type": "object",
        "example": null,
        "properties": {
          "fixSuggestion": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "problemText": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        },
        "required": [
          "id"
        ]
      },
      "PrometheusWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "receiver": {
                "type": "string",
                "example": null
              },
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "Release": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApplicationScope"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "services": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ServiceScope"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "name",
          "start"
        ]
      },
      "ReleaseScope": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationId": {
            "type": "string",
            "example": null
          },
          "applicationName": {
            "type": "string",
            "example": null
          },
          "serviceId": {
            "type": "string",
            "example": null
          },
          "serviceName": {
            "type": "string",
            "example": null
          }
        }
      },
      "ReleaseWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApplicationScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "scopes": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ReleaseScope"
            },
            "writeOnly": true
          },
          "services": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ServiceScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 0
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "RuleInput": {
        "type": "object",
        "example": null,
        "properties": {
          "inputKind": {
            "type": "string",
            "enum": [
              "METRIC",
              "SNAPSHOT_FIELD",
              "EVENT",
              "DERIVED_METRIC",
              "METRIC_PATTERN"
            ],
            "example": null
          },
          "inputName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "inputKind",
          "inputName"
        ]
      },
      "ScopeBinding": {
        "type": "object",
        "example": null,
        "properties": {
          "scopeId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "scopeRoleId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        }
      },
      "SearchFieldResult": {
        "type": "object",
        "example": null,
        "properties": {
          "context": {
            "type": "string",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "fixedValues": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "keyword": {
            "type": "string",
            "example": null
          },
          "termType": {
            "type": "string",
            "example": null
          }
        }
      },
      "Service": {
        "type": "object",
        "example": null,
        "properties": {
          "entityType": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SERVICE",
              "ENDPOINT"
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "snapshotIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "technologies": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "types": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "RPC",
                "EVENT",
                "GRAPHQL",
                "BATCH",
                "SHELL",
                "HTTP",
                "SDK",
                "OPENTELEMETRY",
                "INTERNAL",
                "DATABASE",
                "MESSAGING",
                "PAGE",
                "PAGE_RESOURCE"
              ],
              "example": null
            },
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "label",
          "snapshotIds",
          "technologies",
          "types"
        ]
      },
      "ServiceConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "comment": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "matchSpecification": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ServiceMatchingRule"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          }
        },
        "required": [
          "enabled",
          "id",
          "label",
          "matchSpecification",
          "name"
        ]
      },
      "ServiceEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "applicationId": {
                "type": "string",
                "example": null
              },
              "serviceId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "ServiceItem": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          }
        },
        "required": [
          "metrics",
          "service"
        ]
      },
      "ServiceMap": {
        "type": "object",
        "example": null,
        "properties": {
          "connections": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ServiceMapConnection"
            },
            "uniqueItems": true
          },
          "services": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ExtendedService"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "connections",
          "services"
        ]
      },
      "ServiceMapConnection": {
        "type": "object",
        "example": null,
        "properties": {
          "calls": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "errorRate": {
            "type": "number",
            "format": "double",
            "example": null,
            "maximum": 1,
            "minimum": 0
          },
          "from": {
            "type": "string",
            "example": null
          },
          "latency": {
            "type": "number",
            "format": "double",
            "example": null,
            "minimum": 0
          },
          "to": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "ServiceMatchingRule": {
        "type": "object",
        "example": null,
        "properties": {
          "key": {
            "type": "string",
            "example": null
          },
          "value": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ServiceMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ServiceItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "ServiceNode": {
        "type": "object",
        "example": null,
        "properties": {
          "endpoints": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EndpointNode"
            },
            "example": null
          },
          "inclusive": {
            "type": "boolean",
            "example": null
          },
          "serviceId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "endpoints",
          "serviceId"
        ]
      },
      "ServiceNowIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "password": {
                "type": "string",
                "example": null
              },
              "serviceNowUrl": {
                "type": "string",
                "example": null
              },
              "username": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "password",
          "serviceNowUrl",
          "username"
        ]
      },
      "ServiceResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "totalHits": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        }
      },
      "ServiceScope": {
        "type": "object",
        "example": null,
        "properties": {
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "scopedTo": {
            "$ref": "#/components/schemas/ServiceScopedTo"
          }
        },
        "required": [
          "name"
        ]
      },
      "ServiceScopeWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "scopedTo": {
            "$ref": "#/components/schemas/ServiceScopedToWithMetadata"
          }
        },
        "required": [
          "id"
        ]
      },
      "ServiceScopedTo": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApplicationScope"
            },
            "maxItems": 10,
            "minItems": 1
          }
        },
        "required": [
          "applications"
        ]
      },
      "ServiceScopedToWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ApplicationScopeWithMetadata"
            },
            "maxItems": 10,
            "minItems": 1
          }
        },
        "required": [
          "applications"
        ]
      },
      "SessionSettings": {
        "type": "object",
        "example": null,
        "properties": {
          "idleTimeInMillis": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "maximum": 28800000,
            "minimum": 60000
          },
          "tokenLifeTimeInMillis": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "maximum": 604800000,
            "minimum": 900000
          }
        }
      },
      "SlackIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "channel": {
                "type": "string",
                "example": null
              },
              "iconUrl": {
                "type": "string",
                "example": null
              },
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "SliConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "initialEvaluationTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "metricConfiguration": {
            "$ref": "#/components/schemas/MetricConfiguration"
          },
          "sliEntity": {
            "$ref": "#/components/schemas/SliEntity"
          },
          "sliName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "sliEntity",
          "sliName"
        ]
      },
      "SliConfigurationWithLastUpdated": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "initialEvaluationTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "metricConfiguration": {
            "$ref": "#/components/schemas/MetricConfiguration"
          },
          "sliEntity": {
            "$ref": "#/components/schemas/SliEntity"
          },
          "sliName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "id",
          "sliEntity",
          "sliName"
        ]
      },
      "SliEntity": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "application": "#/components/schemas/ApplicationSliEntity",
            "availability": "#/components/schemas/AvailabilitySliEntity",
            "websiteEventBased": "#/components/schemas/WebsiteEventBasedSliEntity",
            "websiteTimeBased": "#/components/schemas/WebsiteTimeBasedSliEntity"
          },
          "propertyName": "sliType"
        },
        "example": null,
        "properties": {
          "sliType": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "sliType"
        ]
      },
      "SliReport": {
        "type": "object",
        "example": null,
        "properties": {
          "errorBudgetRemaining": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "fromTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "sli": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "slo": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "toTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "totalErrorBudget": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "violationDistribution": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "example": null
            },
            "example": null
          }
        }
      },
      "SlownessApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "example": null,
        "required": [
          "aggregation",
          "metricName"
        ]
      },
      "SlownessWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          }
        ],
        "example": null,
        "required": [
          "aggregation",
          "metricName"
        ]
      },
      "SnapshotItem": {
        "type": "object",
        "example": null,
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "from": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "host": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          },
          "snapshotId": {
            "type": "string",
            "example": null
          },
          "tags": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "to": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "SnapshotPreview": {
        "type": "object",
        "example": null,
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "plugin": {
            "type": "string",
            "example": null
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "id"
        ]
      },
      "SnapshotResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SnapshotItem"
            }
          }
        }
      },
      "SoftwareUser": {
        "type": "object",
        "example": null,
        "properties": {
          "container": {
            "type": "string",
            "example": null
          },
          "host": {
            "type": "string",
            "example": null
          },
          "process": {
            "type": "string",
            "example": null
          }
        }
      },
      "SoftwareVersion": {
        "type": "object",
        "example": null,
        "properties": {
          "name": {
            "type": "string",
            "example": null
          },
          "origin": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          },
          "usedBy": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SoftwareUser"
            },
            "uniqueItems": true
          },
          "version": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "name",
          "origin",
          "type",
          "usedBy",
          "version"
        ]
      },
      "SourceMapFileMeta": {
        "type": "object",
        "example": null,
        "properties": {
          "format": {
            "type": "string",
            "example": null
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "sizeOnDisk": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "JS_MAP",
              "JS"
            ],
            "example": null
          },
          "url": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "format",
          "type",
          "url"
        ]
      },
      "SourceMapUploadConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "metadata": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SourceMapFileMeta"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          }
        },
        "required": [
          "id",
          "metadata"
        ]
      },
      "Span": {
        "type": "object",
        "example": null,
        "properties": {
          "batchSelfTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          },
          "calculatedSelfTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "callId": {
            "type": "string",
            "example": null
          },
          "childSpans": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Span"
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "destination": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "errorCount": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          },
          "foreignParentId": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "isSynthetic": {
            "type": "boolean",
            "example": null
          },
          "kind": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ENTRY",
              "EXIT",
              "INTERMEDIATE"
            ],
            "example": null
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "source": {
            "$ref": "#/components/schemas/SpanRelation"
          },
          "stackTrace": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/StackTraceItem"
            }
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "callId",
          "childSpans",
          "data",
          "id",
          "kind",
          "label",
          "name",
          "stackTrace"
        ]
      },
      "SpanRelation": {
        "type": "object",
        "example": null,
        "properties": {
          "applications": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Application"
            },
            "uniqueItems": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "physicalContext": {
            "$ref": "#/components/schemas/PhysicalContext"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          }
        },
        "required": [
          "applications"
        ]
      },
      "SpecificJsErrorsWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ],
                "example": null
              },
              "value": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "metricName",
          "operator"
        ]
      },
      "SplunkIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "token": {
                "type": "string",
                "example": null
              },
              "url": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "token",
          "url"
        ]
      },
      "StackTraceItem": {
        "type": "object",
        "example": null,
        "properties": {
          "file": {
            "type": "string",
            "example": null
          },
          "line": {
            "type": "string",
            "example": null
          },
          "method": {
            "type": "string",
            "example": null
          }
        }
      },
      "StackTraceLine": {
        "type": "object",
        "example": null,
        "properties": {
          "column": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          },
          "file": {
            "type": "string",
            "example": null
          },
          "line": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          },
          "name": {
            "type": "string",
            "example": null
          },
          "translationExplanation": {
            "type": "string",
            "example": null
          },
          "translationStatus": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          }
        },
        "required": [
          "file"
        ]
      },
      "StaticStringField": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomPayloadField"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "value": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "key",
          "value"
        ]
      },
      "StaticThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Threshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "lastUpdated": {
                "type": "integer",
                "format": "int64",
                "example": null,
                "minimum": 0
              },
              "value": {
                "type": "number",
                "format": "double",
                "example": null,
                "minimum": 0
              }
            }
          }
        ],
        "example": null,
        "required": [
          "operator"
        ]
      },
      "StatusCodeApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "statusCodeEnd": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "minimum": 1
              },
              "statusCodeStart": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "minimum": 1
              }
            }
          }
        ],
        "example": null,
        "required": [
          "metricName"
        ]
      },
      "StatusCodeWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ],
                "example": null
              },
              "value": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "metricName",
          "operator",
          "value"
        ]
      },
      "SyntheticAlertConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "dynamicCustomPayloadFields": {
            "type": "object",
            "example": null,
            "properties": {
              "parallel": {
                "type": "boolean",
                "example": null
              }
            }
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "staticCustomPayloadFields": {
            "type": "object",
            "example": null,
            "properties": {
              "parallel": {
                "type": "boolean",
                "example": null
              }
            }
          },
          "syntheticTestIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 500,
            "minItems": 0,
            "uniqueItems": true
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "name",
          "rule",
          "syntheticTestIds",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "SyntheticAlertConfigWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "dynamicCustomPayloadFields": {
            "type": "object",
            "example": null,
            "properties": {
              "parallel": {
                "type": "boolean",
                "example": null
              }
            }
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "example": null
          },
          "rule": {
            "$ref": "#/components/schemas/SyntheticAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "staticCustomPayloadFields": {
            "type": "object",
            "example": null,
            "properties": {
              "parallel": {
                "type": "boolean",
                "example": null
              }
            }
          },
          "syntheticTestIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 500,
            "minItems": 0,
            "uniqueItems": true
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "id",
          "name",
          "rule",
          "syntheticTestIds",
          "tagFilterExpression",
          "timeThreshold"
        ]
      },
      "SyntheticAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "failure": "#/components/schemas/FailureSyntheticAlertRule"
          },
          "propertyName": "alertType"
        },
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "alertType": {
            "type": "string",
            "example": null
          },
          "metricName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "SyntheticCallConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "customRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "defaultRulesEnabled": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "customRules"
        ]
      },
      "SyntheticCallRule": {
        "type": "object",
        "example": null,
        "properties": {
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "matchSpecification": {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          }
        },
        "required": [
          "matchSpecification",
          "name"
        ]
      },
      "SyntheticCallWithDefaultsConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "customRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            },
            "maxItems": 500,
            "minItems": 0
          },
          "defaultRules": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SyntheticCallRule"
            }
          },
          "defaultRulesEnabled": {
            "type": "boolean",
            "example": null
          }
        },
        "required": [
          "customRules",
          "defaultRules"
        ]
      },
      "SyntheticGeoPoint": {
        "type": "object",
        "example": null,
        "properties": {
          "cityName": {
            "type": "string",
            "example": null
          },
          "countryName": {
            "type": "string",
            "example": null
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": null
          }
        },
        "required": [
          "cityName",
          "countryName",
          "latitude",
          "longitude"
        ]
      },
      "SyntheticLocation": {
        "type": "object",
        "example": null,
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/SyntheticLocationConfiguration"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "displayLabel": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "geoPoint": {
            "$ref": "#/components/schemas/SyntheticGeoPoint"
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "locationType": {
            "type": "string",
            "example": null
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "observedAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "playbackCapabilities": {
            "$ref": "#/components/schemas/SyntheticPlaybackCapabilities"
          },
          "popVersion": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 1
          },
          "status": {
            "type": "string",
            "example": null
          },
          "totalTests": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        },
        "required": [
          "geoPoint",
          "label",
          "locationType",
          "playbackCapabilities"
        ]
      },
      "SyntheticLocationConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "clusterName": {
            "type": "string",
            "example": null
          },
          "namespace": {
            "type": "string",
            "example": null
          }
        }
      },
      "SyntheticMetricConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "metric": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "SyntheticPlaybackCapabilities": {
        "type": "object",
        "example": null,
        "properties": {
          "browserType": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "chrome",
                "firefox"
              ],
              "example": null
            }
          },
          "syntheticType": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "BrowserScript",
                "DNSAction",
                "HTTPAction",
                "HTTPScript",
                "WebpageAction",
                "WebpageScript"
              ],
              "example": null
            }
          }
        },
        "required": [
          "browserType",
          "syntheticType"
        ]
      },
      "SyntheticTest": {
        "type": "object",
        "example": null,
        "properties": {
          "active": {
            "type": "boolean",
            "example": null
          },
          "applicationId": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "applicationLabel": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "configuration": {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdBy": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 1
          },
          "locationDisplayLabels": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "locationLabels": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "locations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "modifiedBy": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "playbackMode": {
            "type": "string",
            "enum": [
              "Simultaneous",
              "Staggered"
            ],
            "example": null
          },
          "tenantId": {
            "type": "string",
            "example": null
          },
          "testFrequency": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 120,
            "minimum": 1
          }
        },
        "required": [
          "active",
          "configuration",
          "label",
          "locations",
          "testFrequency"
        ]
      },
      "SyntheticTimeThreshold": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceSyntheticTimeThreshold"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "type": {
            "type": "string",
            "example": null
          },
          "violationsCount": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 12,
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "SyntheticTypeConfiguration": {
        "type": "object",
        "description": "Synthetic test configuration that is unique to a synthetic type. Valid types are BrowserScript, DNSAction, HTTPAction, HTTPScript, WebpageAction, WebpageScript.\n\nOnly HTTPAction and HTTPScript are enabled at this time.",
        "discriminator": {
          "mapping": {
            "BrowserScript": "#/components/schemas/BrowserScriptConfiguration",
            "DNSAction": "#/components/schemas/DNSActionConfiguration",
            "HTTPAction": "#/components/schemas/HttpActionConfiguration",
            "HTTPScript": "#/components/schemas/HttpScriptConfiguration",
            "WebpageAction": "#/components/schemas/WebpageActionConfiguration",
            "WebpageScript": "#/components/schemas/WebpageScriptConfiguration"
          },
          "propertyName": "syntheticType"
        },
        "example": null,
        "properties": {
          "markSyntheticCall": {
            "type": "boolean",
            "example": null
          },
          "retries": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 2,
            "minimum": 0
          },
          "retryInterval": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 10,
            "minimum": 1
          },
          "syntheticType": {
            "type": "string",
            "enum": [
              "BrowserScript",
              "DNSAction",
              "HTTPAction",
              "HTTPScript",
              "WebpageAction",
              "WebpageScript"
            ],
            "example": null
          },
          "timeout": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "markSyntheticCall",
          "syntheticType"
        ]
      },
      "SyntheticsEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "locationIds": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              },
              "syntheticTestId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "SystemRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "systemRuleId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "systemRuleId"
        ]
      },
      "SystemRuleLabel": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Tag": {
        "type": "object",
        "example": null,
        "properties": {
          "canApplyToDestination": {
            "type": "boolean",
            "example": null
          },
          "canApplyToSource": {
            "type": "boolean",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "idTag": {
            "type": "boolean",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "BOOLEAN",
              "STRING",
              "NUMBER",
              "STRING_SET",
              "STRING_LIST",
              "KEY_VALUE_PAIR"
            ],
            "example": null
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "TagCatalog": {
        "type": "object",
        "example": null,
        "properties": {
          "tagTree": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagTreeLevel"
            }
          },
          "tags": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "required": [
          "tagTree",
          "tags"
        ]
      },
      "TagFilter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "entity": {
                "type": "string",
                "description": "SOURCE or DESTINATION tag in case of a call tag. For Infrastructure, always set to NOT_APPLICABLE.",
                "enum": [
                  "NOT_APPLICABLE",
                  "DESTINATION",
                  "SOURCE"
                ],
                "example": null
              },
              "key": {
                "type": "string",
                "description": "Tag key in case of a key/value tag.",
                "example": null,
                "maxLength": 512,
                "minLength": 0
              },
              "name": {
                "type": "string",
                "description": "Name of the tag.",
                "example": null,
                "maxLength": 128,
                "minLength": 0
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "CONTAINS",
                  "LESS_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "GREATER_THAN",
                  "GREATER_OR_EQUAL_THAN",
                  "NOT_EMPTY",
                  "NOT_EQUAL",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_BLANK",
                  "IS_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH"
                ],
                "example": null
              },
              "value": {
                "type": "object",
                "description": "Tag value to filter on. Can be a string, number, or boolean value.",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "entity",
          "name",
          "operator"
        ]
      },
      "TagFilterExpression": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "elements": {
                "type": "array",
                "example": null,
                "items": {
                  "$ref": "#/components/schemas/TagFilterExpressionElement"
                }
              },
              "logicalOperator": {
                "type": "string",
                "enum": [
                  "AND",
                  "OR"
                ],
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "elements",
          "logicalOperator"
        ]
      },
      "TagFilterExpressionElement": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "EXPRESSION": "#/components/schemas/TagFilterExpression",
            "TAG_FILTER": "#/components/schemas/TagFilter"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "TagMatcherDTO": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MatchExpressionDTO"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "entity": {
                "type": "string",
                "enum": [
                  "NOT_APPLICABLE",
                  "DESTINATION",
                  "SOURCE"
                ],
                "example": null
              },
              "key": {
                "type": "string",
                "example": null
              },
              "operator": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "NOT_EQUAL",
                  "CONTAINS",
                  "NOT_CONTAIN",
                  "IS_EMPTY",
                  "NOT_EMPTY",
                  "IS_BLANK",
                  "NOT_BLANK",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH",
                  "GREATER_OR_EQUAL_THAN",
                  "LESS_OR_EQUAL_THAN",
                  "LESS_THAN",
                  "GREATER_THAN"
                ],
                "example": null
              },
              "value": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "entity",
          "key",
          "operator"
        ]
      },
      "TagTreeLevel": {
        "type": "object",
        "example": null,
        "properties": {
          "children": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagTreeNode"
            }
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 512,
            "minLength": 0
          },
          "icon": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 128,
            "minLength": 0
          },
          "queryable": {
            "type": "boolean",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "children",
          "label"
        ]
      },
      "TagTreeNode": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "LEVEL": "#/components/schemas/TagTreeLevel",
            "TAG": "#/components/schemas/TagTreeTag"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "icon": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        }
      },
      "TagTreeTag": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TagTreeNode"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "description": {
                "type": "string",
                "example": null,
                "maxLength": 512,
                "minLength": 0
              },
              "hidden": {
                "type": "boolean",
                "example": null
              },
              "icon": {
                "type": "string",
                "example": null,
                "maxLength": 128,
                "minLength": 0
              },
              "label": {
                "type": "string",
                "example": null,
                "maxLength": 128,
                "minLength": 0
              },
              "queryable": {
                "type": "boolean",
                "example": null
              },
              "tagName": {
                "type": "string",
                "example": null,
                "maxLength": 128,
                "minLength": 0
              }
            }
          }
        ],
        "example": null,
        "required": [
          "label",
          "tagName"
        ]
      },
      "TestCommonProperties": {
        "type": "object",
        "example": null,
        "properties": {
          "active": {
            "type": "boolean",
            "example": null
          },
          "applicationId": {
            "type": "string",
            "example": null
          },
          "applicationLabel": {
            "type": "string",
            "example": null
          },
          "frequency": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "locationDisplayLabels": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "locationIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "locationLabels": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "locationStatusList": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/LocationStatus"
            }
          },
          "serviceId": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "active",
          "frequency",
          "id",
          "label",
          "type"
        ]
      },
      "TestResult": {
        "type": "object",
        "example": null,
        "properties": {
          "testResult": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TestResultItem"
            }
          },
          "testResultItems": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TestResultItem"
            },
            "writeOnly": true
          }
        }
      },
      "TestResultCommonProperties": {
        "type": "object",
        "example": null,
        "properties": {
          "clientId": {
            "type": "string",
            "example": null
          },
          "customTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "errors": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "id": {
            "type": "string",
            "example": null
          },
          "locationDisplayLabel": {
            "type": "string",
            "example": null
          },
          "locationId": {
            "type": "string",
            "example": null
          },
          "testCommonProperties": {
            "$ref": "#/components/schemas/TestCommonProperties"
          },
          "testId": {
            "type": "string",
            "example": null
          },
          "testName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "clientId",
          "testId"
        ]
      },
      "TestResultDetailData": {
        "type": "object",
        "example": null,
        "properties": {
          "har": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "imageFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "format": "byte",
                "example": null
              }
            },
            "example": null
          },
          "logFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "logs": {
            "type": "string",
            "example": null
          },
          "subtransactionAvgMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "subtransactions": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TestResultSubtransaction"
            }
          },
          "testId": {
            "type": "string",
            "example": null
          },
          "testResultId": {
            "type": "string",
            "example": null
          },
          "videos": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "format": "byte",
              "example": null
            }
          }
        }
      },
      "TestResultItem": {
        "type": "object",
        "example": null,
        "properties": {
          "applicationId": {
            "type": "string",
            "example": null
          },
          "customTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "locationId": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "metrics": {
            "type": "array",
            "example": null,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "example": null
              },
              "example": null
            }
          },
          "serviceId": {
            "type": "string",
            "example": null
          },
          "testId": {
            "type": "string",
            "example": null
          },
          "testName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "testId"
        ]
      },
      "TestResultListItem": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "testResultCommonProperties": {
            "$ref": "#/components/schemas/TestResultCommonProperties"
          }
        },
        "required": [
          "metrics",
          "testResultCommonProperties"
        ]
      },
      "TestResultListResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TestResultListItem"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "TestResultMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "testId": {
            "type": "string",
            "example": null
          },
          "testResultId": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "testId"
        ]
      },
      "TestResultSubtransaction": {
        "type": "object",
        "example": null,
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "required": [
          "metrics",
          "properties"
        ]
      },
      "Threshold": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "adaptiveBaseline": "#/components/schemas/AdaptiveBaseline",
            "historicBaseline": "#/components/schemas/HistoricBaseline",
            "staticThreshold": "#/components/schemas/StaticThreshold"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              ">",
              ">=",
              "<",
              "<="
            ],
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "operator",
          "type"
        ]
      },
      "ThresholdRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "aggregation": {
                "type": "string",
                "enum": [
                  "sum",
                  "avg",
                  "min",
                  "max"
                ],
                "example": null
              },
              "conditionOperator": {
                "type": "string",
                "enum": [
                  ">",
                  ">=",
                  "<",
                  "<=",
                  "=",
                  "!="
                ],
                "example": null
              },
              "conditionValue": {
                "type": "number",
                "format": "double",
                "example": null
              },
              "metricName": {
                "type": "string",
                "example": null,
                "maxLength": 512,
                "minLength": 0
              },
              "metricPattern": {
                "$ref": "#/components/schemas/MetricPattern"
              },
              "rollup": {
                "type": "integer",
                "format": "int64",
                "example": null
              },
              "window": {
                "type": "integer",
                "format": "int64",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "conditionOperator"
        ]
      },
      "ThroughputApplicationAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationAlertRule"
          }
        ],
        "example": null,
        "required": [
          "metricName"
        ]
      },
      "ThroughputWebsiteAlertRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          }
        ],
        "example": null,
        "required": [
          "metricName"
        ]
      },
      "TimeFrame": {
        "type": "object",
        "example": null,
        "properties": {
          "to": {
            "type": "integer",
            "format": "int64",
            "description": "end of timeframe expressed as the Unix epoch time in milliseconds",
            "example": null
          },
          "windowSize": {
            "type": "integer",
            "format": "int64",
            "description": "windowSize in milliseconds",
            "example": null,
            "maximum": 2678400000,
            "minimum": 0
          }
        }
      },
      "Topology": {
        "type": "object",
        "example": null,
        "properties": {
          "edges": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/GraphEdge"
            }
          },
          "nodes": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/GraphNode"
            }
          }
        }
      },
      "Trace": {
        "type": "object",
        "example": null,
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "erroneous": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "TraceGroupsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "TraceGroupsResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TraceGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "TraceImpactApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "requests": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "minimum": 1
              }
            }
          }
        ],
        "example": null
      },
      "TraceItem": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "trace": {
            "$ref": "#/components/schemas/Trace"
          }
        },
        "required": [
          "cursor",
          "trace"
        ]
      },
      "TraceResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TraceItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "UnsupportedHttpPathSegmentMatchingRule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HttpPathSegmentMatchingRule"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "unsupportedType": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "type"
        ]
      },
      "UsageResult": {
        "type": "object",
        "example": null,
        "properties": {
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/UsageResultItems"
            }
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "UsageResultItems": {
        "type": "object",
        "example": null,
        "properties": {
          "name": {
            "type": "string",
            "example": null
          },
          "sims": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        }
      },
      "UserBasicResult": {
        "type": "object",
        "example": null,
        "properties": {
          "email": {
            "type": "string",
            "example": null
          },
          "fullName": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "email",
          "fullName",
          "id"
        ]
      },
      "UserImpactWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "impactMeasurementMethod": {
                "type": "string",
                "enum": [
                  "AGGREGATED",
                  "PER_WINDOW"
                ],
                "example": null
              },
              "userPercentage": {
                "type": "number",
                "format": "double",
                "example": null,
                "exclusiveMaximum": false,
                "exclusiveMinimum": true,
                "maximum": 1,
                "minimum": 0
              },
              "users": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "minimum": 1
              }
            }
          }
        ],
        "example": null,
        "required": [
          "impactMeasurementMethod"
        ]
      },
      "UserResult": {
        "type": "object",
        "example": null,
        "properties": {
          "email": {
            "type": "string",
            "example": null
          },
          "fullName": {
            "type": "string",
            "example": null
          },
          "groupCount": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "lastLoggedIn": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "email",
          "fullName",
          "id"
        ]
      },
      "UsersResult": {
        "type": "object",
        "example": null,
        "properties": {
          "invitations": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/InvitationResult"
            },
            "uniqueItems": true
          },
          "users": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/UserResult"
            },
            "uniqueItems": true
          }
        }
      },
      "ValidatedAlertingChannelInputInfo": {
        "type": "object",
        "example": null,
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "entityId": {
            "type": "string",
            "example": null
          },
          "eventTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "incident",
                "critical",
                "warning",
                "change",
                "online",
                "offline",
                "agent_monitoring_issue",
                "none"
              ],
              "example": null
            },
            "maxItems": 6,
            "minItems": 0,
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "selectedEvents": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "Alert",
              "WebsiteSmartAlert",
              "ApplicationSmartAlert",
              "GlobalApplicationSmartAlert",
              "SyntheticSmartAlert"
            ],
            "example": null
          }
        },
        "required": [
          "id",
          "label",
          "type"
        ]
      },
      "ValidatedAlertingConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelNames": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "alertName": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "applicationNames": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/StaticStringField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "eventFilteringConfiguration": {
            "$ref": "#/components/schemas/EventFilteringConfiguration"
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "integrationIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "invalid": {
            "type": "boolean",
            "example": null
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "muteUntil": {
            "type": "integer",
            "format": "int64",
            "example": null
          }
        },
        "required": [
          "alertName",
          "customPayloadFields",
          "eventFilteringConfiguration",
          "id",
          "integrationIds"
        ]
      },
      "ValidatedMaintenanceConfigWithStatus": {
        "type": "object",
        "example": null,
        "properties": {
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "invalid": {
            "type": "boolean",
            "example": null
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "query": {
            "type": "string",
            "example": null,
            "maxLength": 2048,
            "minLength": 0
          },
          "status": {
            "type": "string",
            "enum": [
              "UNSCHEDULED",
              "SCHEDULED",
              "ACTIVE",
              "FINISHED"
            ],
            "example": null
          },
          "windows": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/MaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 0,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "name",
          "query",
          "status"
        ]
      },
      "VictorOpsIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "apiKey": {
                "type": "string",
                "example": null
              },
              "routingKey": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "apiKey",
          "id",
          "kind",
          "name",
          "routingKey"
        ]
      },
      "ViolationsInPeriodApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "violations": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "maximum": 12,
                "minimum": 1
              }
            }
          }
        ],
        "example": null
      },
      "ViolationsInPeriodWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "violations": {
                "type": "integer",
                "format": "int32",
                "example": null,
                "maximum": 12,
                "minimum": 1
              }
            }
          }
        ],
        "example": null
      },
      "ViolationsInSequenceApplicationTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationTimeThreshold"
          }
        ],
        "example": null
      },
      "ViolationsInSequenceSyntheticTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTimeThreshold"
          }
        ],
        "example": null
      },
      "ViolationsInSequenceWebsiteTimeThreshold": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          }
        ],
        "example": null
      },
      "WatsonAIOpsWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "headers": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              },
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "WebexTeamsWebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "webhookUrl": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrl"
        ]
      },
      "WebhookIntegration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractIntegration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "headers": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              },
              "webhookUrls": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "string",
                  "example": null
                }
              }
            }
          }
        ],
        "example": null,
        "required": [
          "id",
          "kind",
          "name",
          "webhookUrls"
        ]
      },
      "WebpageActionConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ],
                "example": null
              },
              "recordVideo": {
                "type": "boolean",
                "example": null
              },
              "url": {
                "type": "string",
                "example": null,
                "maxLength": 512,
                "minLength": 0
              }
            }
          }
        ],
        "example": null,
        "required": [
          "markSyntheticCall",
          "syntheticType",
          "url"
        ]
      },
      "WebpageScriptConfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SyntheticTypeConfiguration"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chrome",
                  "firefox"
                ],
                "example": null
              },
              "recordVideo": {
                "type": "boolean",
                "example": null
              },
              "script": {
                "type": "string",
                "example": null,
                "maxLength": 1048576,
                "minLength": 0
              }
            }
          }
        ],
        "example": null,
        "required": [
          "markSyntheticCall",
          "script",
          "syntheticType"
        ]
      },
      "Website": {
        "type": "object",
        "example": null,
        "properties": {
          "appName": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "WebsiteAlertConfig": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "rule": {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          },
          "websiteId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold",
          "websiteId"
        ]
      },
      "WebsiteAlertConfigWithMetadata": {
        "type": "object",
        "example": null,
        "properties": {
          "alertChannelIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 1024,
            "minItems": 0,
            "uniqueItems": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "customPayloadFields": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CustomPayloadField"
            },
            "maxItems": 20,
            "minItems": 0
          },
          "description": {
            "type": "string",
            "example": null,
            "maxLength": 65536,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "default": 600000,
            "enum": [
              300000,
              600000,
              900000,
              1200000,
              1800000
            ],
            "example": null
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "readOnly": {
            "type": "boolean",
            "example": null
          },
          "rule": {
            "$ref": "#/components/schemas/WebsiteAlertRule"
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "tagFilterExpression": {
            "$ref": "#/components/schemas/TagFilterExpressionElement"
          },
          "tagFilters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/TagFilter"
            },
            "uniqueItems": true,
            "writeOnly": true
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "timeThreshold": {
            "$ref": "#/components/schemas/WebsiteTimeThreshold"
          },
          "triggering": {
            "type": "boolean",
            "example": null
          },
          "websiteId": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          }
        },
        "required": [
          "alertChannelIds",
          "customPayloadFields",
          "description",
          "granularity",
          "id",
          "name",
          "rule",
          "tagFilterExpression",
          "threshold",
          "timeThreshold",
          "websiteId"
        ]
      },
      "WebsiteAlertRule": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "customEvent": "#/components/schemas/CustomEventWebsiteAlertRule",
            "slowness": "#/components/schemas/SlownessWebsiteAlertRule",
            "specificJsError": "#/components/schemas/SpecificJsErrorsWebsiteAlertRule",
            "statusCode": "#/components/schemas/StatusCodeWebsiteAlertRule",
            "throughput": "#/components/schemas/ThroughputWebsiteAlertRule"
          },
          "propertyName": "alertType"
        },
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "alertType": {
            "type": "string",
            "example": null
          },
          "metricName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "alertType",
          "metricName"
        ]
      },
      "WebsiteApdexEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApdexEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ],
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "beaconType",
          "entityId",
          "tagFilterExpression"
        ]
      },
      "WebsiteBeaconGroupsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          },
          "earliestTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "number",
                  "example": null
                }
              }
            },
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "cursor",
          "metrics",
          "name"
        ]
      },
      "WebsiteBeaconGroupsResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/WebsiteBeaconGroupsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "WebsiteBeaconResult": {
        "type": "object",
        "example": null,
        "properties": {
          "adjustedTimeframe": {
            "$ref": "#/components/schemas/AdjustedTimeframe"
          },
          "canLoadMore": {
            "type": "boolean",
            "example": null
          },
          "items": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/WebsiteBeaconsItem"
            }
          },
          "totalHits": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRepresentedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "totalRetainedItemCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "items"
        ]
      },
      "WebsiteBeaconTagGroup": {
        "type": "object",
        "example": null,
        "properties": {
          "groupbyTag": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          },
          "groupbyTagEntity": {
            "type": "string",
            "enum": [
              "NOT_APPLICABLE",
              "DESTINATION",
              "SOURCE"
            ],
            "example": null
          },
          "groupbyTagSecondLevelKey": {
            "type": "string",
            "example": null,
            "maxLength": 256,
            "minLength": 0
          }
        },
        "required": [
          "groupbyTag",
          "groupbyTagEntity"
        ]
      },
      "WebsiteBeaconsItem": {
        "type": "object",
        "example": null,
        "properties": {
          "beacon": {
            "$ref": "#/components/schemas/WebsiteMonitoringBeacon"
          },
          "cursor": {
            "$ref": "#/components/schemas/IngestionOffsetCursor"
          }
        },
        "required": [
          "beacon",
          "cursor"
        ]
      },
      "WebsiteEventBasedSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "badEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ],
                "example": null
              },
              "goodEventFilterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "websiteId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "badEventFilterExpression",
          "beaconType",
          "goodEventFilterExpression"
        ]
      },
      "WebsiteEventResult": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventResult"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "websiteId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      },
      "WebsiteMetricResult": {
        "type": "object",
        "example": null,
        "properties": {
          "empty": {
            "type": "boolean",
            "example": null
          }
        }
      },
      "WebsiteMonitoringBeacon": {
        "type": "object",
        "example": null,
        "properties": {
          "accuracyRadius": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "accurateTimingsAvailable": {
            "type": "boolean",
            "example": null
          },
          "appCacheTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "backendTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "backendTraceId": {
            "type": "string",
            "example": null
          },
          "batchSize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "beaconId": {
            "type": "string",
            "example": null
          },
          "browserName": {
            "type": "string",
            "example": null
          },
          "browserVersion": {
            "type": "string",
            "example": null
          },
          "cacheInteraction": {
            "type": "string",
            "example": null
          },
          "childrenTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "city": {
            "type": "string",
            "example": null
          },
          "clockSkew": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "componentStack": {
            "type": "string",
            "example": null
          },
          "connectionType": {
            "type": "string",
            "example": null
          },
          "continent": {
            "type": "string",
            "example": null
          },
          "continentCode": {
            "type": "string",
            "example": null
          },
          "country": {
            "type": "string",
            "example": null
          },
          "countryCode": {
            "type": "string",
            "example": null
          },
          "cspBlockedUri": {
            "type": "string",
            "example": null
          },
          "cspColumnNumber": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "cspDisposition": {
            "type": "string",
            "example": null
          },
          "cspEffectiveDirective": {
            "type": "string",
            "example": null
          },
          "cspLineNumber": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "cspOriginalPolicy": {
            "type": "string",
            "example": null
          },
          "cspSample": {
            "type": "string",
            "example": null
          },
          "cspSourceFile": {
            "type": "string",
            "example": null
          },
          "cumulativeLayoutShift": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "customEventName": {
            "type": "string",
            "example": null
          },
          "decodedBodySize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "deprecations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 16,
            "minItems": 0,
            "uniqueItems": true
          },
          "deviceType": {
            "type": "string",
            "example": null
          },
          "dnsTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "domTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "encodedBodySize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 0
          },
          "errorId": {
            "type": "string",
            "example": null
          },
          "errorMessage": {
            "type": "string",
            "example": null
          },
          "errorType": {
            "type": "string",
            "example": null
          },
          "firstContentfulPaintTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "firstInputDelayTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "firstPaintTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "frontendTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "graphqlOperationName": {
            "type": "string",
            "example": null
          },
          "graphqlOperationType": {
            "type": "string",
            "example": null
          },
          "httpCallAsynchronous": {
            "type": "boolean",
            "example": null
          },
          "httpCallCorrelationAttempted": {
            "type": "boolean",
            "example": null
          },
          "httpCallHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "httpCallMethod": {
            "type": "string",
            "example": null
          },
          "httpCallOrigin": {
            "type": "string",
            "example": null
          },
          "httpCallPath": {
            "type": "string",
            "example": null
          },
          "httpCallStatus": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 599,
            "minimum": -1
          },
          "httpCallUrl": {
            "type": "string",
            "example": null
          },
          "initiator": {
            "type": "string",
            "example": null
          },
          "largestContentfulPaintTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "locationOrigin": {
            "type": "string",
            "example": null
          },
          "locationPath": {
            "type": "string",
            "example": null
          },
          "locationUrl": {
            "type": "string",
            "example": null
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": null
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "onLoadTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "osName": {
            "type": "string",
            "example": null
          },
          "osVersion": {
            "type": "string",
            "example": null
          },
          "page": {
            "type": "string",
            "example": null
          },
          "pageLoadId": {
            "type": "string",
            "example": null
          },
          "parsedStackTrace": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/StackTraceLine"
            },
            "maxItems": 64,
            "minItems": 0
          },
          "phase": {
            "type": "string",
            "example": null
          },
          "processingTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "redirectTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "requestTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "resourceType": {
            "type": "string",
            "example": null
          },
          "responseTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "sessionId": {
            "type": "string",
            "example": null
          },
          "snippetVersion": {
            "type": "string",
            "example": null
          },
          "sslTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "stackTrace": {
            "type": "string",
            "example": null
          },
          "stackTraceParsingStatus": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          },
          "stackTraceReadability": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          },
          "subdivision": {
            "type": "string",
            "example": null
          },
          "subdivisionCode": {
            "type": "string",
            "example": null
          },
          "tcpTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": 1
          },
          "transferSize": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "type": {
            "type": "string",
            "example": null
          },
          "unloadTime": {
            "type": "integer",
            "format": "int64",
            "example": null,
            "minimum": -1
          },
          "userEmail": {
            "type": "string",
            "example": null
          },
          "userId": {
            "type": "string",
            "example": null
          },
          "userIp": {
            "type": "string",
            "example": null
          },
          "userLanguages": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 5,
            "minItems": 0
          },
          "userName": {
            "type": "string",
            "example": null
          },
          "websiteId": {
            "type": "string",
            "example": null
          },
          "websiteLabel": {
            "type": "string",
            "example": null
          },
          "windowHeight": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          },
          "windowHidden": {
            "type": "boolean",
            "example": null
          },
          "windowWidth": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": -1
          }
        },
        "required": [
          "beaconId",
          "locationOrigin",
          "locationUrl",
          "pageLoadId",
          "type",
          "websiteId",
          "websiteLabel"
        ]
      },
      "WebsiteMonitoringMetricDescription": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregations": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "enum": [
                "SUM",
                "MEAN",
                "MAX",
                "MIN",
                "P25",
                "P50",
                "P75",
                "P90",
                "P95",
                "P98",
                "P99",
                "P99_9",
                "P99_99",
                "DISTRIBUTION",
                "DISTINCT_COUNT",
                "SUM_POSITIVE",
                "PER_SECOND"
              ],
              "example": null
            },
            "uniqueItems": true
          },
          "beaconTypes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "uniqueItems": true
          },
          "defaultAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "formatter": {
            "type": "string",
            "example": null
          },
          "label": {
            "type": "string",
            "example": null
          },
          "metricId": {
            "type": "string",
            "example": null
          },
          "pathToValueInBeacon": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            },
            "maxItems": 2147483647,
            "minItems": 1
          },
          "tagName": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregations",
          "beaconTypes",
          "formatter",
          "label",
          "metricId"
        ]
      },
      "WebsiteMonitoringMetricsConfiguration": {
        "type": "object",
        "example": null,
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MEAN",
              "MAX",
              "MIN",
              "P25",
              "P50",
              "P75",
              "P90",
              "P95",
              "P98",
              "P99",
              "P99_9",
              "P99_99",
              "DISTRIBUTION",
              "DISTINCT_COUNT",
              "SUM_POSITIVE",
              "PER_SECOND"
            ],
            "example": null
          },
          "granularity": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "metric": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "aggregation",
          "metric"
        ]
      },
      "WebsiteTimeBasedSliEntity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SliEntity"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "beaconType": {
                "type": "string",
                "enum": [
                  "pageLoad",
                  "resourceLoad",
                  "httpRequest",
                  "error",
                  "custom",
                  "pageChange"
                ],
                "example": null
              },
              "filterExpression": {
                "$ref": "#/components/schemas/TagFilterExpressionElement"
              },
              "websiteId": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null,
        "required": [
          "beaconType"
        ]
      },
      "WebsiteTimeThreshold": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "userImpactOfViolationsInSequence": "#/components/schemas/UserImpactWebsiteTimeThreshold",
            "violationsInPeriod": "#/components/schemas/ViolationsInPeriodWebsiteTimeThreshold",
            "violationsInSequence": "#/components/schemas/ViolationsInSequenceWebsiteTimeThreshold"
          },
          "propertyName": "type"
        },
        "example": null,
        "properties": {
          "timeWindow": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "type"
        ]
      },
      "Widget": {
        "type": "object",
        "example": null,
        "properties": {
          "config": {
            "type": "object",
            "example": null
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 1
          },
          "id": {
            "type": "string",
            "example": null,
            "maxLength": 64,
            "minLength": 0
          },
          "title": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 12,
            "minimum": 1
          },
          "x": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "maximum": 11,
            "minimum": 0
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "example": null,
            "minimum": 0
          }
        },
        "required": [
          "config",
          "id",
          "type"
        ]
      },
      "WithResolvedName": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Author"
          },
          {
            "type": "object",
            "example": null,
            "properties": {
              "fullName": {
                "type": "string",
                "example": null
              }
            }
          }
        ],
        "example": null
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "authorization",
        "scheme": "apiToken",
        "type": "apiKey",
        "description": "## Example\n\n```bash\ncurl --request GET \\\n  --url https://test-instana.instana.io/api/application-monitoring/catalog/metrics \\\n  --header 'authorization: apiToken xxxxxxxxxxxxxxxx'\n```\n"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Infrastructure Monitoring",
      "tags": [
        "Infrastructure Analyze",
        "Infrastructure Metrics",
        "Infrastructure Resources",
        "Infrastructure Catalog",
        "Infrastructure Topology"
      ]
    },
    {
      "name": "Application Monitoring",
      "tags": [
        "Application Metrics",
        "Application Resources",
        "Application Catalog",
        "Application Analyze",
        "Application Settings",
        "Application Topology",
        "Application Alert Configuration",
        "Global Application Alert Configuration"
      ]
    },
    {
      "name": "Website Monitoring",
      "tags": [
        "Website Metrics",
        "Website Catalog",
        "Website Analyze",
        "Website Configuration"
      ]
    },
    {
      "name": "Mobile App Monitoring",
      "tags": [
        "Mobile App Metrics",
        "Mobile App Catalog",
        "Mobile App Analyze",
        "Mobile App Configuration"
      ]
    },
    {
      "name": "Event",
      "tags": [
        "Events",
        "Event Settings"
      ]
    },
    {
      "name": "Host Agent",
      "tags": [
        "Host Agent"
      ]
    },
    {
      "name": "Settings",
      "tags": [
        "Custom Dashboards",
        "User",
        "Groups",
        "Audit Log",
        "API Token",
        "Maintenance Configuration",
        "Synthetic Calls",
        "Session Settings",
        "Automation Settings"
      ]
    },
    {
      "name": "Pipeline Feedback",
      "tags": [
        "Releases"
      ]
    },
    {
      "name": "Service Level Indicators",
      "tags": [
        "SLI Settings",
        "SLI Report"
      ]
    },
    {
      "name": "Open Beta Features",
      "tags": [
        "Infrastructure Analyze",
        "Synthetic Catalog",
        "Synthetic Settings",
        "Synthetic Test Playback Results",
        "Synthetic Alert Configuration"
      ]
    },
    {
      "name": "Closed Beta Features",
      "tags": [
        "Infrastructure Alert Configuration"
      ]
    },
    {
      "name": "Instana",
      "tags": [
        "Health",
        "Usage"
      ]
    }
  ]
}
